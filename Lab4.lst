0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Mon Feb 26 17:07:10 2024
0000              5   ;--------------------------------------------------------
                  5   $name Lab4
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _calculate_capacitance
0000             29            public _calculate_freq_kHz
0000             30            public _calculate_period
0000             31            public _display_capacitance_microF
0000             32            public _display_freq_kHz
0000             33            public _display_period
0000             34            public _display_rx
0000             35            public _write_rx
0000             36            public _LCDprint
0000             37            public _LCD_4BIT
0000             38            public _WriteCommand
0000             39            public _WriteData
0000             40            public _LCD_byte
0000             41            public _LCD_pulse
0000             42            public _Serial_Init
0000             43            public _TIMER0_Init
0000             44            public _waitms
0000             45            public _Timer3us
0000             46            public __c51_external_startup
0000             47            public _LCDprint_PARM_3
0000             48            public _calculate_freq_kHz_PARM_3
0000             49            public _calculate_freq_kHz_PARM_2
0000             50            public _calculate_period_PARM_3
0000             51            public _calculate_period_PARM_2
0000             52            public _display_rx_PARM_2
0000             53            public _write_rx_PARM_2
0000             54            public _LCDprint_PARM_2
0000             55            public _overflow_count
0000             56   ;--------------------------------------------------------
0000             57   ; Special Function Registers
0000             58   ;--------------------------------------------------------
0000             59   _ACC            DATA 0xe0
0000             60   _ADC0ASAH       DATA 0xb6
0000             61   _ADC0ASAL       DATA 0xb5
0000             62   _ADC0ASCF       DATA 0xa1
0000             63   _ADC0ASCT       DATA 0xc7
0000             64   _ADC0CF0        DATA 0xbc
0000             65   _ADC0CF1        DATA 0xb9
0000             66   _ADC0CF2        DATA 0xdf
0000             67   _ADC0CN0        DATA 0xe8
0000             68   _ADC0CN1        DATA 0xb2
0000             69   _ADC0CN2        DATA 0xb3
0000             70   _ADC0GTH        DATA 0xc4
0000             71   _ADC0GTL        DATA 0xc3
0000             72   _ADC0H          DATA 0xbe
0000             73   _ADC0L          DATA 0xbd
0000             74   _ADC0LTH        DATA 0xc6
0000             75   _ADC0LTL        DATA 0xc5
0000             76   _ADC0MX         DATA 0xbb
0000             77   _B              DATA 0xf0
0000             78   _CKCON0         DATA 0x8e
0000             79   _CKCON1         DATA 0xa6
0000             80   _CLEN0          DATA 0xc6
0000             81   _CLIE0          DATA 0xc7
0000             82   _CLIF0          DATA 0xe8
0000             83   _CLKSEL         DATA 0xa9
0000             84   _CLOUT0         DATA 0xd1
0000             85   _CLU0CF         DATA 0xb1
0000             86   _CLU0FN         DATA 0xaf
0000             87   _CLU0MX         DATA 0x84
0000             88   _CLU1CF         DATA 0xb3
0000             89   _CLU1FN         DATA 0xb2
0000             90   _CLU1MX         DATA 0x85
0000             91   _CLU2CF         DATA 0xb6
0000             92   _CLU2FN         DATA 0xb5
0000             93   _CLU2MX         DATA 0x91
0000             94   _CLU3CF         DATA 0xbf
0000             95   _CLU3FN         DATA 0xbe
0000             96   _CLU3MX         DATA 0xae
0000             97   _CMP0CN0        DATA 0x9b
0000             98   _CMP0CN1        DATA 0x99
0000             99   _CMP0MD         DATA 0x9d
0000            100   _CMP0MX         DATA 0x9f
0000            101   _CMP1CN0        DATA 0xbf
0000            102   _CMP1CN1        DATA 0xac
0000            103   _CMP1MD         DATA 0xab
0000            104   _CMP1MX         DATA 0xaa
0000            105   _CRC0CN0        DATA 0xce
0000            106   _CRC0CN1        DATA 0x86
0000            107   _CRC0CNT        DATA 0xd3
0000            108   _CRC0DAT        DATA 0xcb
0000            109   _CRC0FLIP       DATA 0xcf
0000            110   _CRC0IN         DATA 0xca
0000            111   _CRC0ST         DATA 0xd2
0000            112   _DAC0CF0        DATA 0x91
0000            113   _DAC0CF1        DATA 0x92
0000            114   _DAC0H          DATA 0x85
0000            115   _DAC0L          DATA 0x84
0000            116   _DAC1CF0        DATA 0x93
0000            117   _DAC1CF1        DATA 0x94
0000            118   _DAC1H          DATA 0x8a
0000            119   _DAC1L          DATA 0x89
0000            120   _DAC2CF0        DATA 0x95
0000            121   _DAC2CF1        DATA 0x96
0000            122   _DAC2H          DATA 0x8c
0000            123   _DAC2L          DATA 0x8b
0000            124   _DAC3CF0        DATA 0x9a
0000            125   _DAC3CF1        DATA 0x9c
0000            126   _DAC3H          DATA 0x8e
0000            127   _DAC3L          DATA 0x8d
0000            128   _DACGCF0        DATA 0x88
0000            129   _DACGCF1        DATA 0x98
0000            130   _DACGCF2        DATA 0xa2
0000            131   _DERIVID        DATA 0xad
0000            132   _DEVICEID       DATA 0xb5
0000            133   _DPH            DATA 0x83
0000            134   _DPL            DATA 0x82
0000            135   _EIE1           DATA 0xe6
0000            136   _EIE2           DATA 0xf3
0000            137   _EIP1           DATA 0xbb
0000            138   _EIP1H          DATA 0xee
0000            139   _EIP2           DATA 0xed
0000            140   _EIP2H          DATA 0xf6
0000            141   _EMI0CN         DATA 0xe7
0000            142   _FLKEY          DATA 0xb7
0000            143   _HFO0CAL        DATA 0xc7
0000            144   _HFO1CAL        DATA 0xd6
0000            145   _HFOCN          DATA 0xef
0000            146   _I2C0ADM        DATA 0xff
0000            147   _I2C0CN0        DATA 0xba
0000            148   _I2C0DIN        DATA 0xbc
0000            149   _I2C0DOUT       DATA 0xbb
0000            150   _I2C0FCN0       DATA 0xad
0000            151   _I2C0FCN1       DATA 0xab
0000            152   _I2C0FCT        DATA 0xf5
0000            153   _I2C0SLAD       DATA 0xbd
0000            154   _I2C0STAT       DATA 0xb9
0000            155   _IE             DATA 0xa8
0000            156   _IP             DATA 0xb8
0000            157   _IPH            DATA 0xf2
0000            158   _IT01CF         DATA 0xe4
0000            159   _LFO0CN         DATA 0xb1
0000            160   _P0             DATA 0x80
0000            161   _P0MASK         DATA 0xfe
0000            162   _P0MAT          DATA 0xfd
0000            163   _P0MDIN         DATA 0xf1
0000            164   _P0MDOUT        DATA 0xa4
0000            165   _P0SKIP         DATA 0xd4
0000            166   _P1             DATA 0x90
0000            167   _P1MASK         DATA 0xee
0000            168   _P1MAT          DATA 0xed
0000            169   _P1MDIN         DATA 0xf2
0000            170   _P1MDOUT        DATA 0xa5
0000            171   _P1SKIP         DATA 0xd5
0000            172   _P2             DATA 0xa0
0000            173   _P2MASK         DATA 0xfc
0000            174   _P2MAT          DATA 0xfb
0000            175   _P2MDIN         DATA 0xf3
0000            176   _P2MDOUT        DATA 0xa6
0000            177   _P2SKIP         DATA 0xcc
0000            178   _P3             DATA 0xb0
0000            179   _P3MDIN         DATA 0xf4
0000            180   _P3MDOUT        DATA 0x9c
0000            181   _PCA0CENT       DATA 0x9e
0000            182   _PCA0CLR        DATA 0x9c
0000            183   _PCA0CN0        DATA 0xd8
0000            184   _PCA0CPH0       DATA 0xfc
0000            185   _PCA0CPH1       DATA 0xea
0000            186   _PCA0CPH2       DATA 0xec
0000            187   _PCA0CPH3       DATA 0xf5
0000            188   _PCA0CPH4       DATA 0x85
0000            189   _PCA0CPH5       DATA 0xde
0000            190   _PCA0CPL0       DATA 0xfb
0000            191   _PCA0CPL1       DATA 0xe9
0000            192   _PCA0CPL2       DATA 0xeb
0000            193   _PCA0CPL3       DATA 0xf4
0000            194   _PCA0CPL4       DATA 0x84
0000            195   _PCA0CPL5       DATA 0xdd
0000            196   _PCA0CPM0       DATA 0xda
0000            197   _PCA0CPM1       DATA 0xdb
0000            198   _PCA0CPM2       DATA 0xdc
0000            199   _PCA0CPM3       DATA 0xae
0000            200   _PCA0CPM4       DATA 0xaf
0000            201   _PCA0CPM5       DATA 0xcc
0000            202   _PCA0H          DATA 0xfa
0000            203   _PCA0L          DATA 0xf9
0000            204   _PCA0MD         DATA 0xd9
0000            205   _PCA0POL        DATA 0x96
0000            206   _PCA0PWM        DATA 0xf7
0000            207   _PCON0          DATA 0x87
0000            208   _PCON1          DATA 0xcd
0000            209   _PFE0CN         DATA 0xc1
0000            210   _PRTDRV         DATA 0xf6
0000            211   _PSCTL          DATA 0x8f
0000            212   _PSTAT0         DATA 0xaa
0000            213   _PSW            DATA 0xd0
0000            214   _REF0CN         DATA 0xd1
0000            215   _REG0CN         DATA 0xc9
0000            216   _REVID          DATA 0xb6
0000            217   _RSTSRC         DATA 0xef
0000            218   _SBCON1         DATA 0x94
0000            219   _SBRLH1         DATA 0x96
0000            220   _SBRLL1         DATA 0x95
0000            221   _SBUF           DATA 0x99
0000            222   _SBUF0          DATA 0x99
0000            223   _SBUF1          DATA 0x92
0000            224   _SCON           DATA 0x98
0000            225   _SCON0          DATA 0x98
0000            226   _SCON1          DATA 0xc8
0000            227   _SFRPAGE        DATA 0xa7
0000            228   _SFRPGCN        DATA 0xbc
0000            229   _SFRSTACK       DATA 0xd7
0000            230   _SMB0ADM        DATA 0xd6
0000            231   _SMB0ADR        DATA 0xd7
0000            232   _SMB0CF         DATA 0xc1
0000            233   _SMB0CN0        DATA 0xc0
0000            234   _SMB0DAT        DATA 0xc2
0000            235   _SMB0FCN0       DATA 0xc3
0000            236   _SMB0FCN1       DATA 0xc4
0000            237   _SMB0FCT        DATA 0xef
0000            238   _SMB0RXLN       DATA 0xc5
0000            239   _SMB0TC         DATA 0xac
0000            240   _SMOD1          DATA 0x93
0000            241   _SP             DATA 0x81
0000            242   _SPI0CFG        DATA 0xa1
0000            243   _SPI0CKR        DATA 0xa2
0000            244   _SPI0CN0        DATA 0xf8
0000            245   _SPI0DAT        DATA 0xa3
0000            246   _SPI0FCN0       DATA 0x9a
0000            247   _SPI0FCN1       DATA 0x9b
0000            248   _SPI0FCT        DATA 0xf7
0000            249   _SPI0PCF        DATA 0xdf
0000            250   _TCON           DATA 0x88
0000            251   _TH0            DATA 0x8c
0000            252   _TH1            DATA 0x8d
0000            253   _TL0            DATA 0x8a
0000            254   _TL1            DATA 0x8b
0000            255   _TMOD           DATA 0x89
0000            256   _TMR2CN0        DATA 0xc8
0000            257   _TMR2CN1        DATA 0xfd
0000            258   _TMR2H          DATA 0xcf
0000            259   _TMR2L          DATA 0xce
0000            260   _TMR2RLH        DATA 0xcb
0000            261   _TMR2RLL        DATA 0xca
0000            262   _TMR3CN0        DATA 0x91
0000            263   _TMR3CN1        DATA 0xfe
0000            264   _TMR3H          DATA 0x95
0000            265   _TMR3L          DATA 0x94
0000            266   _TMR3RLH        DATA 0x93
0000            267   _TMR3RLL        DATA 0x92
0000            268   _TMR4CN0        DATA 0x98
0000            269   _TMR4CN1        DATA 0xff
0000            270   _TMR4H          DATA 0xa5
0000            271   _TMR4L          DATA 0xa4
0000            272   _TMR4RLH        DATA 0xa3
0000            273   _TMR4RLL        DATA 0xa2
0000            274   _TMR5CN0        DATA 0xc0
0000            275   _TMR5CN1        DATA 0xf1
0000            276   _TMR5H          DATA 0xd5
0000            277   _TMR5L          DATA 0xd4
0000            278   _TMR5RLH        DATA 0xd3
0000            279   _TMR5RLL        DATA 0xd2
0000            280   _UART0PCF       DATA 0xd9
0000            281   _UART1FCN0      DATA 0x9d
0000            282   _UART1FCN1      DATA 0xd8
0000            283   _UART1FCT       DATA 0xfa
0000            284   _UART1LIN       DATA 0x9e
0000            285   _UART1PCF       DATA 0xda
0000            286   _VDM0CN         DATA 0xff
0000            287   _WDTCN          DATA 0x97
0000            288   _XBR0           DATA 0xe1
0000            289   _XBR1           DATA 0xe2
0000            290   _XBR2           DATA 0xe3
0000            291   _XOSC0CN        DATA 0x86
0000            292   _DPTR           DATA 0x8382
0000            293   _TMR2RL         DATA 0xcbca
0000            294   _TMR3RL         DATA 0x9392
0000            295   _TMR4RL         DATA 0xa3a2
0000            296   _TMR5RL         DATA 0xd3d2
0000            297   _TMR0           DATA 0x8c8a
0000            298   _TMR1           DATA 0x8d8b
0000            299   _TMR2           DATA 0xcfce
0000            300   _TMR3           DATA 0x9594
0000            301   _TMR4           DATA 0xa5a4
0000            302   _TMR5           DATA 0xd5d4
0000            303   _SBRL1          DATA 0x9695
0000            304   _PCA0           DATA 0xfaf9
0000            305   _PCA0CP0        DATA 0xfcfb
0000            306   _PCA0CP1        DATA 0xeae9
0000            307   _PCA0CP2        DATA 0xeceb
0000            308   _PCA0CP3        DATA 0xf5f4
0000            309   _PCA0CP4        DATA 0x8584
0000            310   _PCA0CP5        DATA 0xdedd
0000            311   _ADC0ASA        DATA 0xb6b5
0000            312   _ADC0GT         DATA 0xc4c3
0000            313   _ADC0           DATA 0xbebd
0000            314   _ADC0LT         DATA 0xc6c5
0000            315   _DAC0           DATA 0x8584
0000            316   _DAC1           DATA 0x8a89
0000            317   _DAC2           DATA 0x8c8b
0000            318   _DAC3           DATA 0x8e8d
0000            319   ;--------------------------------------------------------
0000            320   ; special function bits
0000            321   ;--------------------------------------------------------
0000            322   _ACC_0          BIT 0xe0
0000            323   _ACC_1          BIT 0xe1
0000            324   _ACC_2          BIT 0xe2
0000            325   _ACC_3          BIT 0xe3
0000            326   _ACC_4          BIT 0xe4
0000            327   _ACC_5          BIT 0xe5
0000            328   _ACC_6          BIT 0xe6
0000            329   _ACC_7          BIT 0xe7
0000            330   _TEMPE          BIT 0xe8
0000            331   _ADGN0          BIT 0xe9
0000            332   _ADGN1          BIT 0xea
0000            333   _ADWINT         BIT 0xeb
0000            334   _ADBUSY         BIT 0xec
0000            335   _ADINT          BIT 0xed
0000            336   _IPOEN          BIT 0xee
0000            337   _ADEN           BIT 0xef
0000            338   _B_0            BIT 0xf0
0000            339   _B_1            BIT 0xf1
0000            340   _B_2            BIT 0xf2
0000            341   _B_3            BIT 0xf3
0000            342   _B_4            BIT 0xf4
0000            343   _B_5            BIT 0xf5
0000            344   _B_6            BIT 0xf6
0000            345   _B_7            BIT 0xf7
0000            346   _C0FIF          BIT 0xe8
0000            347   _C0RIF          BIT 0xe9
0000            348   _C1FIF          BIT 0xea
0000            349   _C1RIF          BIT 0xeb
0000            350   _C2FIF          BIT 0xec
0000            351   _C2RIF          BIT 0xed
0000            352   _C3FIF          BIT 0xee
0000            353   _C3RIF          BIT 0xef
0000            354   _D1SRC0         BIT 0x88
0000            355   _D1SRC1         BIT 0x89
0000            356   _D1AMEN         BIT 0x8a
0000            357   _D01REFSL       BIT 0x8b
0000            358   _D3SRC0         BIT 0x8c
0000            359   _D3SRC1         BIT 0x8d
0000            360   _D3AMEN         BIT 0x8e
0000            361   _D23REFSL       BIT 0x8f
0000            362   _D0UDIS         BIT 0x98
0000            363   _D1UDIS         BIT 0x99
0000            364   _D2UDIS         BIT 0x9a
0000            365   _D3UDIS         BIT 0x9b
0000            366   _EX0            BIT 0xa8
0000            367   _ET0            BIT 0xa9
0000            368   _EX1            BIT 0xaa
0000            369   _ET1            BIT 0xab
0000            370   _ES0            BIT 0xac
0000            371   _ET2            BIT 0xad
0000            372   _ESPI0          BIT 0xae
0000            373   _EA             BIT 0xaf
0000            374   _PX0            BIT 0xb8
0000            375   _PT0            BIT 0xb9
0000            376   _PX1            BIT 0xba
0000            377   _PT1            BIT 0xbb
0000            378   _PS0            BIT 0xbc
0000            379   _PT2            BIT 0xbd
0000            380   _PSPI0          BIT 0xbe
0000            381   _P0_0           BIT 0x80
0000            382   _P0_1           BIT 0x81
0000            383   _P0_2           BIT 0x82
0000            384   _P0_3           BIT 0x83
0000            385   _P0_4           BIT 0x84
0000            386   _P0_5           BIT 0x85
0000            387   _P0_6           BIT 0x86
0000            388   _P0_7           BIT 0x87
0000            389   _P1_0           BIT 0x90
0000            390   _P1_1           BIT 0x91
0000            391   _P1_2           BIT 0x92
0000            392   _P1_3           BIT 0x93
0000            393   _P1_4           BIT 0x94
0000            394   _P1_5           BIT 0x95
0000            395   _P1_6           BIT 0x96
0000            396   _P1_7           BIT 0x97
0000            397   _P2_0           BIT 0xa0
0000            398   _P2_1           BIT 0xa1
0000            399   _P2_2           BIT 0xa2
0000            400   _P2_3           BIT 0xa3
0000            401   _P2_4           BIT 0xa4
0000            402   _P2_5           BIT 0xa5
0000            403   _P2_6           BIT 0xa6
0000            404   _P3_0           BIT 0xb0
0000            405   _P3_1           BIT 0xb1
0000            406   _P3_2           BIT 0xb2
0000            407   _P3_3           BIT 0xb3
0000            408   _P3_4           BIT 0xb4
0000            409   _P3_7           BIT 0xb7
0000            410   _CCF0           BIT 0xd8
0000            411   _CCF1           BIT 0xd9
0000            412   _CCF2           BIT 0xda
0000            413   _CCF3           BIT 0xdb
0000            414   _CCF4           BIT 0xdc
0000            415   _CCF5           BIT 0xdd
0000            416   _CR             BIT 0xde
0000            417   _CF             BIT 0xdf
0000            418   _PARITY         BIT 0xd0
0000            419   _F1             BIT 0xd1
0000            420   _OV             BIT 0xd2
0000            421   _RS0            BIT 0xd3
0000            422   _RS1            BIT 0xd4
0000            423   _F0             BIT 0xd5
0000            424   _AC             BIT 0xd6
0000            425   _CY             BIT 0xd7
0000            426   _RI             BIT 0x98
0000            427   _TI             BIT 0x99
0000            428   _RB8            BIT 0x9a
0000            429   _TB8            BIT 0x9b
0000            430   _REN            BIT 0x9c
0000            431   _CE             BIT 0x9d
0000            432   _SMODE          BIT 0x9e
0000            433   _RI1            BIT 0xc8
0000            434   _TI1            BIT 0xc9
0000            435   _RBX1           BIT 0xca
0000            436   _TBX1           BIT 0xcb
0000            437   _REN1           BIT 0xcc
0000            438   _PERR1          BIT 0xcd
0000            439   _OVR1           BIT 0xce
0000            440   _SI             BIT 0xc0
0000            441   _ACK            BIT 0xc1
0000            442   _ARBLOST        BIT 0xc2
0000            443   _ACKRQ          BIT 0xc3
0000            444   _STO            BIT 0xc4
0000            445   _STA            BIT 0xc5
0000            446   _TXMODE         BIT 0xc6
0000            447   _MASTER         BIT 0xc7
0000            448   _SPIEN          BIT 0xf8
0000            449   _TXNF           BIT 0xf9
0000            450   _NSSMD0         BIT 0xfa
0000            451   _NSSMD1         BIT 0xfb
0000            452   _RXOVRN         BIT 0xfc
0000            453   _MODF           BIT 0xfd
0000            454   _WCOL           BIT 0xfe
0000            455   _SPIF           BIT 0xff
0000            456   _IT0            BIT 0x88
0000            457   _IE0            BIT 0x89
0000            458   _IT1            BIT 0x8a
0000            459   _IE1            BIT 0x8b
0000            460   _TR0            BIT 0x8c
0000            461   _TF0            BIT 0x8d
0000            462   _TR1            BIT 0x8e
0000            463   _TF1            BIT 0x8f
0000            464   _T2XCLK0        BIT 0xc8
0000            465   _T2XCLK1        BIT 0xc9
0000            466   _TR2            BIT 0xca
0000            467   _T2SPLIT        BIT 0xcb
0000            468   _TF2CEN         BIT 0xcc
0000            469   _TF2LEN         BIT 0xcd
0000            470   _TF2L           BIT 0xce
0000            471   _TF2H           BIT 0xcf
0000            472   _T4XCLK0        BIT 0x98
0000            473   _T4XCLK1        BIT 0x99
0000            474   _TR4            BIT 0x9a
0000            475   _T4SPLIT        BIT 0x9b
0000            476   _TF4CEN         BIT 0x9c
0000            477   _TF4LEN         BIT 0x9d
0000            478   _TF4L           BIT 0x9e
0000            479   _TF4H           BIT 0x9f
0000            480   _T5XCLK0        BIT 0xc0
0000            481   _T5XCLK1        BIT 0xc1
0000            482   _TR5            BIT 0xc2
0000            483   _T5SPLIT        BIT 0xc3
0000            484   _TF5CEN         BIT 0xc4
0000            485   _TF5LEN         BIT 0xc5
0000            486   _TF5L           BIT 0xc6
0000            487   _TF5H           BIT 0xc7
0000            488   _RIE            BIT 0xd8
0000            489   _RXTO0          BIT 0xd9
0000            490   _RXTO1          BIT 0xda
0000            491   _RFRQ           BIT 0xdb
0000            492   _TIE            BIT 0xdc
0000            493   _TXHOLD         BIT 0xdd
0000            494   _TXNF1          BIT 0xde
0000            495   _TFRQ           BIT 0xdf
0000            496   ;--------------------------------------------------------
0000            497   ; overlayable register banks
0000            498   ;--------------------------------------------------------
0000            499            rbank0 segment data overlay
0000            500   ;--------------------------------------------------------
0000            501   ; internal ram data
0000            502   ;--------------------------------------------------------
0000            503            rseg R_DSEG
0000            504   _overflow_count:
0000            505            ds 1
0001            506   _LCDprint_PARM_2:
0001            507            ds 1
0002            508   _write_rx_PARM_2:
0002            509            ds 2
0004            510   _write_rx_buff_1_47:
0004            511            ds 3
0007            512   _write_rx_sloc0_1_0:
0007            513            ds 2
0009            514   _display_rx_PARM_2:
0009            515            ds 2
000B            516   _display_period_buff_1_55:
000B            517            ds 16
001B            518   _display_freq_kHz_buff_1_57:
001B            519            ds 16
002B            520   _display_capacitance_microF_buff_1_59:
002B            521            ds 16
003B            522   _calculate_period_PARM_2:
003B            523            ds 2
003D            524   _calculate_period_PARM_3:
003D            525            ds 2
003F            526   _calculate_freq_kHz_PARM_2:
003F            527            ds 2
0041            528   _calculate_freq_kHz_PARM_3:
0041            529            ds 2
0043            530   ;--------------------------------------------------------
0043            531   ; overlayable items in internal ram 
0043            532   ;--------------------------------------------------------
0000            533            rseg    R_OSEG
0000            534   ;--------------------------------------------------------
0000            535   ; indirectly addressable internal ram data
0000            536   ;--------------------------------------------------------
0000            537            rseg R_ISEG
0000            538   ;--------------------------------------------------------
0000            539   ; absolute internal ram data
0000            540   ;--------------------------------------------------------
0000            541            DSEG
0000            542   ;--------------------------------------------------------
0000            543   ; bit data
0000            544   ;--------------------------------------------------------
0000            545            rseg R_BSEG
0000            546   _LCDprint_PARM_3:
0000            547            DBIT    1
0001            548   ;--------------------------------------------------------
0001            549   ; paged external ram data
0001            550   ;--------------------------------------------------------
0000            551            rseg R_PSEG
0000            552   ;--------------------------------------------------------
0000            553   ; external ram data
0000            554   ;--------------------------------------------------------
0000            555            rseg R_XSEG
0000            556   ;--------------------------------------------------------
0000            557   ; absolute external ram data
0000            558   ;--------------------------------------------------------
0000            559            XSEG
0000            560   ;--------------------------------------------------------
0000            561   ; external initialized ram data
0000            562   ;--------------------------------------------------------
0000            563            rseg R_IXSEG
0000            564            rseg R_HOME
0000            565            rseg R_GSINIT
0000            566            rseg R_CSEG
0000            567   ;--------------------------------------------------------
0000            568   ; Reset entry point and interrupt vectors
0000            569   ;--------------------------------------------------------
0000            570            CSEG at 0x0000
0000 020000     571            ljmp    _crt0
0003            572   ;--------------------------------------------------------
0003            573   ; global & static initialisations
0003            574   ;--------------------------------------------------------
0000            575            rseg R_HOME
0000            576            rseg R_GSINIT
0000            577            rseg R_GSINIT
0000            578   ;--------------------------------------------------------
0000            579   ; data variables initialization
0000            580   ;--------------------------------------------------------
0000            581            rseg R_DINIT
0000            582            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            583   ;--------------------------------------------------------
0000            584   ; code
0000            585   ;--------------------------------------------------------
0000            586            rseg R_CSEG
0000            587   ;------------------------------------------------------------
0000            588   ;Allocation info for local variables in function '_c51_external_startup'
0000            589   ;------------------------------------------------------------
0000            590   ;------------------------------------------------------------
0000            591   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:40: char _c51_external_startup(void) {
0000            592   ;        -----------------------------------------
0000            593   ;         function _c51_external_startup
0000            594   ;        -----------------------------------------
0000            595   __c51_external_startup:
0000            596            using   0
0000            597   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:42: SFRPAGE = 0x00;
0000 75A700     598            mov     _SFRPAGE,#0x00
0003            599   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:43: WDTCN = 0xDE; // First Key
0003 7597DE     600            mov     _WDTCN,#0xDE
0006            601   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:44: WDTCN = 0xAD; // Second Key
0006 7597AD     602            mov     _WDTCN,#0xAD
0009            603   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:46: VDM0CN |= 0x80;
0009 43FF80     604            orl     _VDM0CN,#0x80
000C            605   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:47: RSTSRC = 0x02;
000C 75EF02     606            mov     _RSTSRC,#0x02
000F            607   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:55: SFRPAGE = 0x10;
000F 75A710     608            mov     _SFRPAGE,#0x10
0012            609   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:56: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     610            mov     _PFE0CN,#0x20
0015            611   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:57: SFRPAGE = 0x00;
0015 75A700     612            mov     _SFRPAGE,#0x00
0018            613   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:79: CLKSEL = 0x00;
0018 75A900     614            mov     _CLKSEL,#0x00
001B            615   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:80: CLKSEL = 0x00;
001B 75A900     616            mov     _CLKSEL,#0x00
001E            617   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:81: while ((CLKSEL & 0x80) == 0);
001E            618   L002001?:
001E E5A9       619            mov     a,_CLKSEL
0020 30E720     620            jnb     acc.7,L002001?
0023            621   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:82: CLKSEL = 0x03;
0023 75A903     622            mov     _CLKSEL,#0x03
0026            623   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:83: CLKSEL = 0x03;
0026 75A903     624            mov     _CLKSEL,#0x03
0029            625   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:84: while ((CLKSEL & 0x80) == 0);
0029            626   L002004?:
0029 E5A9       627            mov     a,_CLKSEL
002B 30E7A0     628            jnb     acc.7,L002004?
002E            629   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:89: P0MDOUT |= 0x10; // Enable UART0 TX As Push-Pull Output
002E 43A410     630            orl     _P0MDOUT,#0x10
0031            631   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:90: XBR0     = 0x01; // Enable UART0 on P0.4 (TX) and P0.5 (RX)
0031 75E101     632            mov     _XBR0,#0x01
0034            633   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:91: XBR1     = 0X00; // Enable T0 on P0.0
0034 75E200     634            mov     _XBR1,#0x00
0037            635   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:92: XBR2     = 0x40; // Enable Crossbar and Weak Pull-Ups
0037 75E340     636            mov     _XBR2,#0x40
003A            637   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:99: SCON0 = 0x10;
003A 759810     638            mov     _SCON0,#0x10
003D            639   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:100: CKCON0 |= 0b_0000_0000 ; // Timer 1 Uses SYSCLK / 12
003D 858E8E     640            mov     _CKCON0,_CKCON0
0040            641   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:101: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L)); // Set Timer1 Reload Value, Initial Value
0040 758DE6     642            mov     _TH1,#0xE6
0043            643   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:102: TL1 = TH1;      // Init Timer1
0043 858D8B     644            mov     _TL1,_TH1
0046            645   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:103: TMOD &= ~0xf0;  // TMOD: Timer 1 in 8-bit auto-reload
0046 53890F     646            anl     _TMOD,#0x0F
0049            647   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:104: TMOD |=  0x20;
0049 438920     648            orl     _TMOD,#0x20
004C            649   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:105: TR1 = 1; // Start Timer1
004C D28E       650            setb    _TR1
004E            651   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:106: TI = 1;  // Indicate TX0 Ready
004E D299       652            setb    _TI
0050            653   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:108: return 0;
0050 758200     654            mov     dpl,#0x00
0053 22         655            ret
0054            656   ;------------------------------------------------------------
0054            657   ;Allocation info for local variables in function 'Timer3us'
0054            658   ;------------------------------------------------------------
0054            659   ;us                        Allocated to registers r2 
0054            660   ;i                         Allocated to registers r3 
0054            661   ;------------------------------------------------------------
0054            662   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:114: void Timer3us(unsigned char us) {
0054            663   ;        -----------------------------------------
0054            664   ;         function Timer3us
0054            665   ;        -----------------------------------------
0054            666   _Timer3us:
0054 AA82       667            mov     r2,dpl
0056            668   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:118: CKCON0 |= 0b_0100_0000;
0056 438E40     669            orl     _CKCON0,#0x40
0059            670   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:120: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to Overflow in 1us
0059 7592B8     671            mov     _TMR3RL,#0xB8
005C 7593FF     672            mov     (_TMR3RL >> 8),#0xFF
005F            673   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:121: TMR3 = TMR3RL;                 // Initialize Timer3 for First Overflow
005F 859294     674            mov     _TMR3,_TMR3RL
0062 859395     675            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0065            676   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:123: TMR3CN0 = 0x04;                 // Start Timer3 and Clear Overflow Flag
0065 759104     677            mov     _TMR3CN0,#0x04
0068            678   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:124: for (i = 0; i < us; i++) {      // Count Overflows (#Microseconds)
0068 7B00       679            mov     r3,#0x00
006A            680   L003004?:
006A C3         681            clr     c
006B EB         682            mov     a,r3
006C 9A         683            subb    a,r2
006D 5000       684            jnc     L003007?
006F            685   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:125: while (!(TMR3CN0 & 0x80));  // Wait for Overflow
006F            686   L003001?:
006F E591       687            mov     a,_TMR3CN0
0071 30E7A0     688            jnb     acc.7,L003001?
0074            689   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:126: TMR3CN0 &= ~(0x80);         // Clear Overflow Indicator
0074 53917F     690            anl     _TMR3CN0,#0x7F
0077            691   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:124: for (i = 0; i < us; i++) {      // Count Overflows (#Microseconds)
0077 0B         692            inc     r3
0078 8000       693            sjmp    L003004?
007A            694   L003007?:
007A            695   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:128: TMR3CN0 = 0 ;                   // Stop Timer3 and Clear Overflow Flag
007A 759100     696            mov     _TMR3CN0,#0x00
007D 22         697            ret
007E            698   ;------------------------------------------------------------
007E            699   ;Allocation info for local variables in function 'waitms'
007E            700   ;------------------------------------------------------------
007E            701   ;ms                        Allocated to registers r2 r3 
007E            702   ;j                         Allocated to registers r2 r3 
007E            703   ;------------------------------------------------------------
007E            704   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:131: void waitms (unsigned int ms) {
007E            705   ;        -----------------------------------------
007E            706   ;         function waitms
007E            707   ;        -----------------------------------------
007E            708   _waitms:
007E AA82       709            mov     r2,dpl
0080 AB83       710            mov     r3,dph
0082            711   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:133: for (j = ms; j != 0; j--) {
0082            712   L004001?:
0082 BA0060     713            cjne    r2,#0x00,L004010?
0085 BB0060     714            cjne    r3,#0x00,L004010?
0088 22         715            ret
0089            716   L004010?:
0089            717   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:134: Timer3us(249);
0089 7582F9     718            mov     dpl,#0xF9
008C C002       719            push    ar2
008E C003       720            push    ar3
0090 120000     721            lcall   _Timer3us
0093            722   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:135: Timer3us(249);
0093 7582F9     723            mov     dpl,#0xF9
0096 120000     724            lcall   _Timer3us
0099            725   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:136: Timer3us(249);
0099 7582F9     726            mov     dpl,#0xF9
009C 120000     727            lcall   _Timer3us
009F            728   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:137: Timer3us(250);
009F 7582FA     729            mov     dpl,#0xFA
00A2 120000     730            lcall   _Timer3us
00A5 D003       731            pop     ar3
00A7 D002       732            pop     ar2
00A9            733   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:133: for (j = ms; j != 0; j--) {
00A9 1A         734            dec     r2
00AA BAFFA0     735            cjne    r2,#0xff,L004011?
00AD 1B         736            dec     r3
00AE            737   L004011?:
00AE 8000       738            sjmp    L004001?
00B0            739   ;------------------------------------------------------------
00B0            740   ;Allocation info for local variables in function 'TIMER0_Init'
00B0            741   ;------------------------------------------------------------
00B0            742   ;------------------------------------------------------------
00B0            743   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:141: void TIMER0_Init(void) {
00B0            744   ;        -----------------------------------------
00B0            745   ;         function TIMER0_Init
00B0            746   ;        -----------------------------------------
00B0            747   _TIMER0_Init:
00B0            748   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:142: TMOD &= 0b_1111_0000; // Set the Bits of Timer/Counter 0 to 0
00B0 5389F0     749            anl     _TMOD,#0xF0
00B3            750   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:143: TMOD |= 0b_0000_0001; // Timer/Counter 0 Used As 16-Bit Timer
00B3 438901     751            orl     _TMOD,#0x01
00B6            752   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:144: TR0 = 0; // Stop Timer/Counter 0
00B6 C28C       753            clr     _TR0
00B8 22         754            ret
00B9            755   ;------------------------------------------------------------
00B9            756   ;Allocation info for local variables in function 'Serial_Init'
00B9            757   ;------------------------------------------------------------
00B9            758   ;------------------------------------------------------------
00B9            759   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:147: void Serial_Init(void) {
00B9            760   ;        -----------------------------------------
00B9            761   ;         function Serial_Init
00B9            762   ;        -----------------------------------------
00B9            763   _Serial_Init:
00B9            764   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:148: waitms(500); // Give Putty a chance to start.
00B9 9001F4     765            mov     dptr,#0x01F4
00BC 120000     766            lcall   _waitms
00BF            767   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:149: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
00BF 74E0       768            mov     a,#__str_0
00C1 C0E0       769            push    acc
00C3 74BB       770            mov     a,#(__str_0 >> 8)
00C5 C0E0       771            push    acc
00C7 7480       772            mov     a,#0x80
00C9 C0E0       773            push    acc
00CB 120000     774            lcall   _printf
00CE 1581       775            dec     sp
00D0 1581       776            dec     sp
00D2 1581       777            dec     sp
00D4 22         778            ret
00D5            779   ;------------------------------------------------------------
00D5            780   ;Allocation info for local variables in function 'LCD_pulse'
00D5            781   ;------------------------------------------------------------
00D5            782   ;------------------------------------------------------------
00D5            783   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:152: void LCD_pulse(void) {
00D5            784   ;        -----------------------------------------
00D5            785   ;         function LCD_pulse
00D5            786   ;        -----------------------------------------
00D5            787   _LCD_pulse:
00D5            788   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:153: LCD_E = 1; // Pulse the Enable Pin
00D5 D2A5       789            setb    _P2_5
00D7            790   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:154: Timer3us(40); // Wait for 40us
00D7 758228     791            mov     dpl,#0x28
00DA 120000     792            lcall   _Timer3us
00DD            793   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:155: LCD_E = 0; // Pulse the Enable Pin
00DD C2A5       794            clr     _P2_5
00DF 22         795            ret
00E0            796   ;------------------------------------------------------------
00E0            797   ;Allocation info for local variables in function 'LCD_byte'
00E0            798   ;------------------------------------------------------------
00E0            799   ;x                         Allocated to registers r2 
00E0            800   ;------------------------------------------------------------
00E0            801   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:158: void LCD_byte(unsigned char x) {
00E0            802   ;        -----------------------------------------
00E0            803   ;         function LCD_byte
00E0            804   ;        -----------------------------------------
00E0            805   _LCD_byte:
00E0 AA82       806            mov     r2,dpl
00E2            807   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:161: ACC = x; // Send High Nibble
00E2 8AE0       808            mov     _ACC,r2
00E4            809   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:162: LCD_D7 = ACC_7;
00E4 A2E7       810            mov     c,_ACC_7
00E6 92A1       811            mov     _P2_1,c
00E8            812   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:163: LCD_D6 = ACC_6;
00E8 A2E6       813            mov     c,_ACC_6
00EA 92A2       814            mov     _P2_2,c
00EC            815   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:164: LCD_D5 = ACC_5;
00EC A2E5       816            mov     c,_ACC_5
00EE 92A3       817            mov     _P2_3,c
00F0            818   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:165: LCD_D4 = ACC_4;
00F0 A2E4       819            mov     c,_ACC_4
00F2 92A4       820            mov     _P2_4,c
00F4            821   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:166: LCD_pulse();
00F4 C002       822            push    ar2
00F6 120000     823            lcall   _LCD_pulse
00F9            824   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:168: Timer3us(40); // Wait for 40us
00F9 758228     825            mov     dpl,#0x28
00FC 120000     826            lcall   _Timer3us
00FF D002       827            pop     ar2
0101            828   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:170: ACC = x; // Send Low Nibble
0101 8AE0       829            mov     _ACC,r2
0103            830   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:171: LCD_D7 = ACC_3;
0103 A2E3       831            mov     c,_ACC_3
0105 92A1       832            mov     _P2_1,c
0107            833   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:172: LCD_D6 = ACC_2;
0107 A2E2       834            mov     c,_ACC_2
0109 92A2       835            mov     _P2_2,c
010B            836   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:173: LCD_D5 = ACC_1;
010B A2E1       837            mov     c,_ACC_1
010D 92A3       838            mov     _P2_3,c
010F            839   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:174: LCD_D4 = ACC_0;
010F A2E0       840            mov     c,_ACC_0
0111 92A4       841            mov     _P2_4,c
0113            842   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:175: LCD_pulse();
0113 020000     843            ljmp    _LCD_pulse
0116            844   ;------------------------------------------------------------
0116            845   ;Allocation info for local variables in function 'WriteData'
0116            846   ;------------------------------------------------------------
0116            847   ;x                         Allocated to registers r2 
0116            848   ;------------------------------------------------------------
0116            849   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:178: void WriteData(unsigned char x) {
0116            850   ;        -----------------------------------------
0116            851   ;         function WriteData
0116            852   ;        -----------------------------------------
0116            853   _WriteData:
0116 AA82       854            mov     r2,dpl
0118            855   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:179: LCD_RS = 1; // Set LCD to Data Mode
0118 D2A6       856            setb    _P2_6
011A            857   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:180: LCD_byte(x); // Write the Data
011A 8A82       858            mov     dpl,r2
011C 120000     859            lcall   _LCD_byte
011F            860   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:181: waitms(2); // Wait for 2ms
011F 900002     861            mov     dptr,#0x0002
0122 020000     862            ljmp    _waitms
0125            863   ;------------------------------------------------------------
0125            864   ;Allocation info for local variables in function 'WriteCommand'
0125            865   ;------------------------------------------------------------
0125            866   ;x                         Allocated to registers r2 
0125            867   ;------------------------------------------------------------
0125            868   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:184: void WriteCommand(unsigned char x) {
0125            869   ;        -----------------------------------------
0125            870   ;         function WriteCommand
0125            871   ;        -----------------------------------------
0125            872   _WriteCommand:
0125 AA82       873            mov     r2,dpl
0127            874   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:185: LCD_RS = 0; // Set LCD to Command Mode
0127 C2A6       875            clr     _P2_6
0129            876   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:186: LCD_byte(x); // Write the Command
0129 8A82       877            mov     dpl,r2
012B 120000     878            lcall   _LCD_byte
012E            879   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:187: waitms(5); // Wait for 5ms
012E 900005     880            mov     dptr,#0x0005
0131 020000     881            ljmp    _waitms
0134            882   ;------------------------------------------------------------
0134            883   ;Allocation info for local variables in function 'LCD_4BIT'
0134            884   ;------------------------------------------------------------
0134            885   ;------------------------------------------------------------
0134            886   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:190: void LCD_4BIT(void) {
0134            887   ;        -----------------------------------------
0134            888   ;         function LCD_4BIT
0134            889   ;        -----------------------------------------
0134            890   _LCD_4BIT:
0134            891   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:191: LCD_E = 0; // Resting State of LCD Enable Pin is 0.
0134 C2A5       892            clr     _P2_5
0136            893   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:192: waitms(20); // Wait for 20ms
0136 900014     894            mov     dptr,#0x0014
0139 120000     895            lcall   _waitms
013C            896   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:195: WriteCommand(0x33); // Change to 8-bit Mode
013C 758233     897            mov     dpl,#0x33
013F 120000     898            lcall   _WriteCommand
0142            899   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:196: WriteCommand(0x33); // Change to 8-bit Mode
0142 758233     900            mov     dpl,#0x33
0145 120000     901            lcall   _WriteCommand
0148            902   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:197: WriteCommand(0x32); // Change to 4-bit Mode
0148 758232     903            mov     dpl,#0x32
014B 120000     904            lcall   _WriteCommand
014E            905   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:200: WriteCommand(0x28); // 4-bit, 2 Line, 5x7 Dots
014E 758228     906            mov     dpl,#0x28
0151 120000     907            lcall   _WriteCommand
0154            908   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:201: WriteCommand(0x0c); // Display On, No Cursor, No Blink
0154 75820C     909            mov     dpl,#0x0C
0157 120000     910            lcall   _WriteCommand
015A            911   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:202: WriteCommand(0x01); // Clear Screen Command (Takes Some Time)
015A 758201     912            mov     dpl,#0x01
015D 120000     913            lcall   _WriteCommand
0160            914   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:203: waitms(20); // Wait 20ms for Clear Screen Command to Finish
0160 900014     915            mov     dptr,#0x0014
0163 020000     916            ljmp    _waitms
0166            917   ;------------------------------------------------------------
0166            918   ;Allocation info for local variables in function 'LCDprint'
0166            919   ;------------------------------------------------------------
0166            920   ;line                      Allocated with name '_LCDprint_PARM_2'
0166            921   ;string                    Allocated to registers r2 r3 r4 
0166            922   ;j                         Allocated to registers r5 r6 
0166            923   ;------------------------------------------------------------
0166            924   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:206: void LCDprint(char * string, unsigned char line, bit clear) {
0166            925   ;        -----------------------------------------
0166            926   ;         function LCDprint
0166            927   ;        -----------------------------------------
0166            928   _LCDprint:
0166 AA82       929            mov     r2,dpl
0168 AB83       930            mov     r3,dph
016A ACF0       931            mov     r4,b
016C            932   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:209: WriteCommand(line == 2 ? 0xc0 : 0x80); // Set Cursor
016C 7402       933            mov     a,#0x02
016E B5F0E0     934            cjne    a,_LCDprint_PARM_2,L012013?
0171 7DC0       935            mov     r5,#0xC0
0173 8000       936            sjmp    L012014?
0175            937   L012013?:
0175 7D80       938            mov     r5,#0x80
0177            939   L012014?:
0177 8D82       940            mov     dpl,r5
0179 C002       941            push    ar2
017B C003       942            push    ar3
017D C004       943            push    ar4
017F 120000     944            lcall   _WriteCommand
0182            945   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:210: waitms(5); // Wait for 5ms
0182 900005     946            mov     dptr,#0x0005
0185 120000     947            lcall   _waitms
0188 D004       948            pop     ar4
018A D003       949            pop     ar3
018C D002       950            pop     ar2
018E            951   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:211: for (j = 0; string[j] != 0; j++) WriteData(string[j]); // Write Message
018E 7D00       952            mov     r5,#0x00
0190 7E00       953            mov     r6,#0x00
0192            954   L012003?:
0192 ED         955            mov     a,r5
0193 2A         956            add     a,r2
0194 FF         957            mov     r7,a
0195 EE         958            mov     a,r6
0196 3B         959            addc    a,r3
0197 F8         960            mov     r0,a
0198 8C01       961            mov     ar1,r4
019A 8F82       962            mov     dpl,r7
019C 8883       963            mov     dph,r0
019E 89F0       964            mov     b,r1
01A0 120000     965            lcall   __gptrget
01A3 FF         966            mov     r7,a
01A4 6000       967            jz      L012006?
01A6 8F82       968            mov     dpl,r7
01A8 C002       969            push    ar2
01AA C003       970            push    ar3
01AC C004       971            push    ar4
01AE C005       972            push    ar5
01B0 C006       973            push    ar6
01B2 120000     974            lcall   _WriteData
01B5 D006       975            pop     ar6
01B7 D005       976            pop     ar5
01B9 D004       977            pop     ar4
01BB D003       978            pop     ar3
01BD D002       979            pop     ar2
01BF 0D         980            inc     r5
01C0 BD0060     981            cjne    r5,#0x00,L012003?
01C3 0E         982            inc     r6
01C4 8000       983            sjmp    L012003?
01C6            984   L012006?:
01C6            985   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:212: if (clear) for (; j < CHARS_PER_LINE; j++) WriteData(' '); // Clear Rest of Line
01C6 30C020     986            jnb     _LCDprint_PARM_3,L012011?
01C9 8D02       987            mov     ar2,r5
01CB 8E03       988            mov     ar3,r6
01CD            989   L012007?:
01CD C3         990            clr     c
01CE EA         991            mov     a,r2
01CF 9410       992            subb    a,#0x10
01D1 EB         993            mov     a,r3
01D2 6480       994            xrl     a,#0x80
01D4 9480       995            subb    a,#0x80
01D6 5000       996            jnc     L012011?
01D8 758220     997            mov     dpl,#0x20
01DB C002       998            push    ar2
01DD C003       999            push    ar3
01DF 120000    1000            lcall   _WriteData
01E2 D003      1001            pop     ar3
01E4 D002      1002            pop     ar2
01E6 0A        1003            inc     r2
01E7 BA0060    1004            cjne    r2,#0x00,L012007?
01EA 0B        1005            inc     r3
01EB 8000      1006            sjmp    L012007?
01ED           1007   L012011?:
01ED 22        1008            ret
01EE           1009   ;------------------------------------------------------------
01EE           1010   ;Allocation info for local variables in function 'write_rx'
01EE           1011   ;------------------------------------------------------------
01EE           1012   ;len                       Allocated with name '_write_rx_PARM_2'
01EE           1013   ;buff                      Allocated with name '_write_rx_buff_1_47'
01EE           1014   ;j                         Allocated with name '_write_rx_sloc0_1_0'
01EE           1015   ;c                         Allocated to registers r3 
01EE           1016   ;sloc0                     Allocated with name '_write_rx_sloc0_1_0'
01EE           1017   ;------------------------------------------------------------
01EE           1018   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:215: int write_rx(char* buff, int len) {
01EE           1019   ;        -----------------------------------------
01EE           1020   ;         function write_rx
01EE           1021   ;        -----------------------------------------
01EE           1022   _write_rx:
01EE 858250    1023            mov     _write_rx_buff_1_47,dpl
01F1 858351    1024            mov     (_write_rx_buff_1_47 + 1),dph
01F4 85F052    1025            mov     (_write_rx_buff_1_47 + 2),b
01F7           1026   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:219: for (j = 0; j < (len-1); j++) {
01F7 E4        1027            clr     a
01F8 F5A0      1028            mov     _write_rx_sloc0_1_0,a
01FA F5A1      1029            mov     (_write_rx_sloc0_1_0 + 1),a
01FC E5A0      1030            mov     a,_write_rx_PARM_2
01FE 24FF      1031            add     a,#0xff
0200 FF        1032            mov     r7,a
0201 E5A1      1033            mov     a,(_write_rx_PARM_2 + 1)
0203 34FF      1034            addc    a,#0xff
0205 F8        1035            mov     r0,a
0206 7900      1036            mov     r1,#0x00
0208 7A00      1037            mov     r2,#0x00
020A           1038   L013005?:
020A C3        1039            clr     c
020B E9        1040            mov     a,r1
020C 9F        1041            subb    a,r7
020D EA        1042            mov     a,r2
020E 6480      1043            xrl     a,#0x80
0210 88F0      1044            mov     b,r0
0212 63F080    1045            xrl     b,#0x80
0215 95F0      1046            subb    a,b
0217 5000      1047            jnc     L013008?
0219           1048   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:220: c = getchar();
0219 C002      1049            push    ar2
021B C007      1050            push    ar7
021D C000      1051            push    ar0
021F C001      1052            push    ar1
0221 120000    1053            lcall   _getchar
0224 AB82      1054            mov     r3,dpl
0226 D001      1055            pop     ar1
0228 D000      1056            pop     ar0
022A D007      1057            pop     ar7
022C D002      1058            pop     ar2
022E           1059   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:221: if ( (c == '\n') || (c == '\r') ) {
022E BB0A60    1060            cjne    r3,#0x0A,L013015?
0231 8000      1061            sjmp    L013001?
0233           1062   L013015?:
0233 BB0DE8    1063            cjne    r3,#0x0D,L013002?
0236           1064   L013001?:
0236           1065   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:222: buff[j] = 0;
0236 E5A0      1066            mov     a,_write_rx_sloc0_1_0
0238 2550      1067            add     a,_write_rx_buff_1_47
023A FC        1068            mov     r4,a
023B E5A1      1069            mov     a,(_write_rx_sloc0_1_0 + 1)
023D 3551      1070            addc    a,(_write_rx_buff_1_47 + 1)
023F FD        1071            mov     r5,a
0240 AE52      1072            mov     r6,(_write_rx_buff_1_47 + 2)
0242 8C82      1073            mov     dpl,r4
0244 8D83      1074            mov     dph,r5
0246 8EF0      1075            mov     b,r6
0248 E4        1076            clr     a
0249 120000    1077            lcall   __gptrput
024C           1078   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:223: return j;
024C 85A082    1079            mov     dpl,_write_rx_sloc0_1_0
024F 85A183    1080            mov     dph,(_write_rx_sloc0_1_0 + 1)
0252 22        1081            ret
0253           1082   L013002?:
0253           1083   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:225: buff[j] = c;
0253 E9        1084            mov     a,r1
0254 2550      1085            add     a,_write_rx_buff_1_47
0256 FC        1086            mov     r4,a
0257 EA        1087            mov     a,r2
0258 3551      1088            addc    a,(_write_rx_buff_1_47 + 1)
025A FD        1089            mov     r5,a
025B AE52      1090            mov     r6,(_write_rx_buff_1_47 + 2)
025D 8C82      1091            mov     dpl,r4
025F 8D83      1092            mov     dph,r5
0261 8EF0      1093            mov     b,r6
0263 EB        1094            mov     a,r3
0264 120000    1095            lcall   __gptrput
0267           1096   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:219: for (j = 0; j < (len-1); j++) {
0267 09        1097            inc     r1
0268 B90068    1098            cjne    r1,#0x00,L013018?
026B 0A        1099            inc     r2
026C           1100   L013018?:
026C 89A0      1101            mov     _write_rx_sloc0_1_0,r1
026E 8AA1      1102            mov     (_write_rx_sloc0_1_0 + 1),r2
0270 8000      1103            sjmp    L013005?
0272           1104   L013008?:
0272           1105   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:228: buff[j] = 0;
0272 E5A0      1106            mov     a,_write_rx_sloc0_1_0
0274 2550      1107            add     a,_write_rx_buff_1_47
0276 FA        1108            mov     r2,a
0277 E5A1      1109            mov     a,(_write_rx_sloc0_1_0 + 1)
0279 3551      1110            addc    a,(_write_rx_buff_1_47 + 1)
027B FB        1111            mov     r3,a
027C AC52      1112            mov     r4,(_write_rx_buff_1_47 + 2)
027E 8A82      1113            mov     dpl,r2
0280 8B83      1114            mov     dph,r3
0282 8CF0      1115            mov     b,r4
0284 E4        1116            clr     a
0285 120000    1117            lcall   __gptrput
0288           1118   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:229: return len;
0288 85A082    1119            mov     dpl,_write_rx_PARM_2
028B 85A183    1120            mov     dph,(_write_rx_PARM_2 + 1)
028E 22        1121            ret
028F           1122   ;------------------------------------------------------------
028F           1123   ;Allocation info for local variables in function 'display_rx'
028F           1124   ;------------------------------------------------------------
028F           1125   ;len                       Allocated with name '_display_rx_PARM_2'
028F           1126   ;buff                      Allocated to registers r2 r3 r4 
028F           1127   ;------------------------------------------------------------
028F           1128   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:232: void display_rx(char* buff, int len) {
028F           1129   ;        -----------------------------------------
028F           1130   ;         function display_rx
028F           1131   ;        -----------------------------------------
028F           1132   _display_rx:
028F AA82      1133            mov     r2,dpl
0291 AB83      1134            mov     r3,dph
0293 ACF0      1135            mov     r4,b
0295           1136   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:233: printf("Type Intended Display in Line 2 (16 Char Max): ");
0295 C002      1137            push    ar2
0297 C003      1138            push    ar3
0299 C004      1139            push    ar4
029B 74A8      1140            mov     a,#__str_1
029D C0E0      1141            push    acc
029F 74C0      1142            mov     a,#(__str_1 >> 8)
02A1 C0E0      1143            push    acc
02A3 7480      1144            mov     a,#0x80
02A5 C0E0      1145            push    acc
02A7 120000    1146            lcall   _printf
02AA 1581      1147            dec     sp
02AC 1581      1148            dec     sp
02AE 1581      1149            dec     sp
02B0 D004      1150            pop     ar4
02B2 D003      1151            pop     ar3
02B4 D002      1152            pop     ar2
02B6           1153   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:234: write_rx(buff, len);
02B6 8550A0    1154            mov     _write_rx_PARM_2,_display_rx_PARM_2
02B9 8551A1    1155            mov     (_write_rx_PARM_2 + 1),(_display_rx_PARM_2 + 1)
02BC 8A82      1156            mov     dpl,r2
02BE 8B83      1157            mov     dph,r3
02C0 8CF0      1158            mov     b,r4
02C2 C002      1159            push    ar2
02C4 C003      1160            push    ar3
02C6 C004      1161            push    ar4
02C8 120000    1162            lcall   _write_rx
02CB           1163   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:235: printf("\n");
02CB 74E8      1164            mov     a,#__str_2
02CD C0E0      1165            push    acc
02CF 74C0      1166            mov     a,#(__str_2 >> 8)
02D1 C0E0      1167            push    acc
02D3 7480      1168            mov     a,#0x80
02D5 C0E0      1169            push    acc
02D7 120000    1170            lcall   _printf
02DA 1581      1171            dec     sp
02DC 1581      1172            dec     sp
02DE 1581      1173            dec     sp
02E0 D004      1174            pop     ar4
02E2 D003      1175            pop     ar3
02E4 D002      1176            pop     ar2
02E6           1177   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:236: LCDprint(buff, 1, 1);
02E6 75F001    1178            mov     _LCDprint_PARM_2,#0x01
02E9 D2C0      1179            setb    _LCDprint_PARM_3
02EB 8A82      1180            mov     dpl,r2
02ED 8B83      1181            mov     dph,r3
02EF 8CF0      1182            mov     b,r4
02F1 020000    1183            ljmp    _LCDprint
02F4           1184   ;------------------------------------------------------------
02F4           1185   ;Allocation info for local variables in function 'display_period'
02F4           1186   ;------------------------------------------------------------
02F4           1187   ;period                    Allocated to registers r2 r3 r4 r5 
02F4           1188   ;buff                      Allocated with name '_display_period_buff_1_55'
02F4           1189   ;------------------------------------------------------------
02F4           1190   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:239: void display_period(float period) {
02F4           1191   ;        -----------------------------------------
02F4           1192   ;         function display_period
02F4           1193   ;        -----------------------------------------
02F4           1194   _display_period:
02F4 AA82      1195            mov     r2,dpl
02F6 AB83      1196            mov     r3,dph
02F8 ACF0      1197            mov     r4,b
02FA FD        1198            mov     r5,a
02FB           1199   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:241: sprintf(buff, "T: %f s", (float)(period)); // Format the Period Value
02FB C002      1200            push    ar2
02FD C003      1201            push    ar3
02FF C004      1202            push    ar4
0301 C005      1203            push    ar5
0303 7428      1204            mov     a,#__str_3
0305 C0E0      1205            push    acc
0307 74C1      1206            mov     a,#(__str_3 >> 8)
0309 C0E0      1207            push    acc
030B 7480      1208            mov     a,#0x80
030D C0E0      1209            push    acc
030F 74F0      1210            mov     a,#_display_period_buff_1_55
0311 C0E0      1211            push    acc
0313 74B7      1212            mov     a,#(_display_period_buff_1_55 >> 8)
0315 C0E0      1213            push    acc
0317 7440      1214            mov     a,#0x40
0319 C0E0      1215            push    acc
031B 120000    1216            lcall   _sprintf
031E E581      1217            mov     a,sp
0320 24F6      1218            add     a,#0xf6
0322 F581      1219            mov     sp,a
0324           1220   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:242: LCDprint(buff, 2, 1); // Write to LCD
0324 75F002    1221            mov     _LCDprint_PARM_2,#0x02
0327 D2C0      1222            setb    _LCDprint_PARM_3
0329 90B7F0    1223            mov     dptr,#_display_period_buff_1_55
032C 75F040    1224            mov     b,#0x40
032F 020000    1225            ljmp    _LCDprint
0332           1226   ;------------------------------------------------------------
0332           1227   ;Allocation info for local variables in function 'display_freq_kHz'
0332           1228   ;------------------------------------------------------------
0332           1229   ;freq_kHz                  Allocated to registers r2 r3 r4 r5 
0332           1230   ;buff                      Allocated with name '_display_freq_kHz_buff_1_57'
0332           1231   ;------------------------------------------------------------
0332           1232   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:245: void display_freq_kHz(float freq_kHz) {
0332           1233   ;        -----------------------------------------
0332           1234   ;         function display_freq_kHz
0332           1235   ;        -----------------------------------------
0332           1236   _display_freq_kHz:
0332           1237   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:247: sprintf(buff, "F: %i kHz", (int)(freq_kHz)); // Format the Frequency Value
0332 120000    1238            lcall   ___fs2sint
0335 AA82      1239            mov     r2,dpl
0337 AB83      1240            mov     r3,dph
0339 C002      1241            push    ar2
033B C003      1242            push    ar3
033D 74E8      1243            mov     a,#__str_4
033F C0E0      1244            push    acc
0341 74C1      1245            mov     a,#(__str_4 >> 8)
0343 C0E0      1246            push    acc
0345 7480      1247            mov     a,#0x80
0347 C0E0      1248            push    acc
0349 7440      1249            mov     a,#_display_freq_kHz_buff_1_57
034B C0E0      1250            push    acc
034D 74B8      1251            mov     a,#(_display_freq_kHz_buff_1_57 >> 8)
034F C0E0      1252            push    acc
0351 7440      1253            mov     a,#0x40
0353 C0E0      1254            push    acc
0355 120000    1255            lcall   _sprintf
0358 E581      1256            mov     a,sp
035A 24F8      1257            add     a,#0xf8
035C F581      1258            mov     sp,a
035E           1259   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:248: LCDprint(buff, 2, 1); // Write to LCD
035E 75F002    1260            mov     _LCDprint_PARM_2,#0x02
0361 D2C0      1261            setb    _LCDprint_PARM_3
0363 90B840    1262            mov     dptr,#_display_freq_kHz_buff_1_57
0366 75F040    1263            mov     b,#0x40
0369 020000    1264            ljmp    _LCDprint
036C           1265   ;------------------------------------------------------------
036C           1266   ;Allocation info for local variables in function 'display_capacitance_microF'
036C           1267   ;------------------------------------------------------------
036C           1268   ;capacitance_microF        Allocated to registers r2 r3 r4 r5 
036C           1269   ;buff                      Allocated with name '_display_capacitance_microF_buff_1_59'
036C           1270   ;------------------------------------------------------------
036C           1271   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:251: void display_capacitance_microF(float capacitance_microF) {
036C           1272   ;        -----------------------------------------
036C           1273   ;         function display_capacitance_microF
036C           1274   ;        -----------------------------------------
036C           1275   _display_capacitance_microF:
036C           1276   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:254: sprintf(buff, "C: %i µF", (int)(capacitance_microF)); // Format the Capacitance Value
036C 120000    1277            lcall   ___fs2sint
036F AA82      1278            mov     r2,dpl
0371 AB83      1279            mov     r3,dph
0373 C002      1280            push    ar2
0375 C003      1281            push    ar3
0377 7428      1282            mov     a,#__str_5
0379 C0E0      1283            push    acc
037B 74C2      1284            mov     a,#(__str_5 >> 8)
037D C0E0      1285            push    acc
037F 7480      1286            mov     a,#0x80
0381 C0E0      1287            push    acc
0383 74A0      1288            mov     a,#_display_capacitance_microF_buff_1_59
0385 C0E0      1289            push    acc
0387 74B8      1290            mov     a,#(_display_capacitance_microF_buff_1_59 >> 8)
0389 C0E0      1291            push    acc
038B 7440      1292            mov     a,#0x40
038D C0E0      1293            push    acc
038F 120000    1294            lcall   _sprintf
0392 E581      1295            mov     a,sp
0394 24F8      1296            add     a,#0xf8
0396 F581      1297            mov     sp,a
0398           1298   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:255: LCDprint(buff, 2, 1); // Write to LCD
0398 75F002    1299            mov     _LCDprint_PARM_2,#0x02
039B D2C0      1300            setb    _LCDprint_PARM_3
039D 90B8A0    1301            mov     dptr,#_display_capacitance_microF_buff_1_59
03A0 75F040    1302            mov     b,#0x40
03A3 020000    1303            ljmp    _LCDprint
03A6           1304   ;------------------------------------------------------------
03A6           1305   ;Allocation info for local variables in function 'calculate_period'
03A6           1306   ;------------------------------------------------------------
03A6           1307   ;TH0                       Allocated with name '_calculate_period_PARM_2'
03A6           1308   ;TL0                       Allocated with name '_calculate_period_PARM_3'
03A6           1309   ;overflow_count            Allocated to registers r2 r3 
03A6           1310   ;------------------------------------------------------------
03A6           1311   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:264: float calculate_period(int overflow_count, int TH0, int TL0) {
03A6           1312   ;        -----------------------------------------
03A6           1313   ;         function calculate_period
03A6           1314   ;        -----------------------------------------
03A6           1315   _calculate_period:
03A6           1316   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:265: return ((overflow_count * MAX_16_BIT)  + (TH0 * MAX_8_BIT) + TL0) * (12.0 / SYSCLK);
03A6 120000    1317            lcall   ___sint2fs
03A9 AA82      1318            mov     r2,dpl
03AB AB83      1319            mov     r3,dph
03AD ACF0      1320            mov     r4,b
03AF FD        1321            mov     r5,a
03B0 C002      1322            push    ar2
03B2 C003      1323            push    ar3
03B4 C004      1324            push    ar4
03B6 C005      1325            push    ar5
03B8 900000    1326            mov     dptr,#0x0000
03BB 75F080    1327            mov     b,#0x80
03BE 7447      1328            mov     a,#0x47
03C0 120000    1329            lcall   ___fsmul
03C3 AA82      1330            mov     r2,dpl
03C5 AB83      1331            mov     r3,dph
03C7 ACF0      1332            mov     r4,b
03C9 FD        1333            mov     r5,a
03CA E581      1334            mov     a,sp
03CC 24FC      1335            add     a,#0xfc
03CE F581      1336            mov     sp,a
03D0 850082    1337            mov     dpl,_calculate_period_PARM_2
03D3 850183    1338            mov     dph,(_calculate_period_PARM_2 + 1)
03D6 C002      1339            push    ar2
03D8 C003      1340            push    ar3
03DA C004      1341            push    ar4
03DC C005      1342            push    ar5
03DE 120000    1343            lcall   ___sint2fs
03E1 AE82      1344            mov     r6,dpl
03E3 AF83      1345            mov     r7,dph
03E5 A8F0      1346            mov     r0,b
03E7 F9        1347            mov     r1,a
03E8 C006      1348            push    ar6
03EA C007      1349            push    ar7
03EC C000      1350            push    ar0
03EE C001      1351            push    ar1
03F0 900000    1352            mov     dptr,#0x0000
03F3 75F080    1353            mov     b,#0x80
03F6 7443      1354            mov     a,#0x43
03F8 120000    1355            lcall   ___fsmul
03FB AE82      1356            mov     r6,dpl
03FD AF83      1357            mov     r7,dph
03FF A8F0      1358            mov     r0,b
0401 F9        1359            mov     r1,a
0402 E581      1360            mov     a,sp
0404 24FC      1361            add     a,#0xfc
0406 F581      1362            mov     sp,a
0408 D005      1363            pop     ar5
040A D004      1364            pop     ar4
040C D003      1365            pop     ar3
040E D002      1366            pop     ar2
0410 C006      1367            push    ar6
0412 C007      1368            push    ar7
0414 C000      1369            push    ar0
0416 C001      1370            push    ar1
0418 8A82      1371            mov     dpl,r2
041A 8B83      1372            mov     dph,r3
041C 8CF0      1373            mov     b,r4
041E ED        1374            mov     a,r5
041F 120000    1375            lcall   ___fsadd
0422 AA82      1376            mov     r2,dpl
0424 AB83      1377            mov     r3,dph
0426 ACF0      1378            mov     r4,b
0428 FD        1379            mov     r5,a
0429 E581      1380            mov     a,sp
042B 24FC      1381            add     a,#0xfc
042D F581      1382            mov     sp,a
042F 85B082    1383            mov     dpl,_calculate_period_PARM_3
0432 85B183    1384            mov     dph,(_calculate_period_PARM_3 + 1)
0435 C002      1385            push    ar2
0437 C003      1386            push    ar3
0439 C004      1387            push    ar4
043B C005      1388            push    ar5
043D 120000    1389            lcall   ___sint2fs
0440 AE82      1390            mov     r6,dpl
0442 AF83      1391            mov     r7,dph
0444 A8F0      1392            mov     r0,b
0446 F9        1393            mov     r1,a
0447 D005      1394            pop     ar5
0449 D004      1395            pop     ar4
044B D003      1396            pop     ar3
044D D002      1397            pop     ar2
044F C006      1398            push    ar6
0451 C007      1399            push    ar7
0453 C000      1400            push    ar0
0455 C001      1401            push    ar1
0457 8A82      1402            mov     dpl,r2
0459 8B83      1403            mov     dph,r3
045B 8CF0      1404            mov     b,r4
045D ED        1405            mov     a,r5
045E 120000    1406            lcall   ___fsadd
0461 AA82      1407            mov     r2,dpl
0463 AB83      1408            mov     r3,dph
0465 ACF0      1409            mov     r4,b
0467 FD        1410            mov     r5,a
0468 E581      1411            mov     a,sp
046A 24FC      1412            add     a,#0xfc
046C F581      1413            mov     sp,a
046E C002      1414            push    ar2
0470 C003      1415            push    ar3
0472 C004      1416            push    ar4
0474 C005      1417            push    ar5
0476 90F4FC    1418            mov     dptr,#0xF4FC
0479 75F032    1419            mov     b,#0x32
047C 7434      1420            mov     a,#0x34
047E 120000    1421            lcall   ___fsmul
0481 AA82      1422            mov     r2,dpl
0483 AB83      1423            mov     r3,dph
0485 ACF0      1424            mov     r4,b
0487 FD        1425            mov     r5,a
0488 E581      1426            mov     a,sp
048A 24FC      1427            add     a,#0xfc
048C F581      1428            mov     sp,a
048E 8A82      1429            mov     dpl,r2
0490 8B83      1430            mov     dph,r3
0492 8CF0      1431            mov     b,r4
0494 ED        1432            mov     a,r5
0495 22        1433            ret
0496           1434   ;------------------------------------------------------------
0496           1435   ;Allocation info for local variables in function 'calculate_freq_kHz'
0496           1436   ;------------------------------------------------------------
0496           1437   ;TH0                       Allocated with name '_calculate_freq_kHz_PARM_2'
0496           1438   ;TL0                       Allocated with name '_calculate_freq_kHz_PARM_3'
0496           1439   ;overflow_count            Allocated to registers r2 r3 
0496           1440   ;------------------------------------------------------------
0496           1441   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:268: float calculate_freq_kHz(int overflow_count, int TH0, int TL0) {
0496           1442   ;        -----------------------------------------
0496           1443   ;         function calculate_freq_kHz
0496           1444   ;        -----------------------------------------
0496           1445   _calculate_freq_kHz:
0496 AA82      1446            mov     r2,dpl
0498 AB83      1447            mov     r3,dph
049A           1448   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:269: return 1.0 / calculate_period(overflow_count, TH0, TL0);
049A 856000    1449            mov     _calculate_period_PARM_2,_calculate_freq_kHz_PARM_2
049D 856101    1450            mov     (_calculate_period_PARM_2 + 1),(_calculate_freq_kHz_PARM_2 + 1)
04A0 8510B0    1451            mov     _calculate_period_PARM_3,_calculate_freq_kHz_PARM_3
04A3 8511B1    1452            mov     (_calculate_period_PARM_3 + 1),(_calculate_freq_kHz_PARM_3 + 1)
04A6 8A82      1453            mov     dpl,r2
04A8 8B83      1454            mov     dph,r3
04AA 120000    1455            lcall   _calculate_period
04AD AA82      1456            mov     r2,dpl
04AF AB83      1457            mov     r3,dph
04B1 ACF0      1458            mov     r4,b
04B3 FD        1459            mov     r5,a
04B4 C002      1460            push    ar2
04B6 C003      1461            push    ar3
04B8 C004      1462            push    ar4
04BA C005      1463            push    ar5
04BC 900000    1464            mov     dptr,#0x0000
04BF 75F080    1465            mov     b,#0x80
04C2 743F      1466            mov     a,#0x3F
04C4 120000    1467            lcall   ___fsdiv
04C7 AA82      1468            mov     r2,dpl
04C9 AB83      1469            mov     r3,dph
04CB ACF0      1470            mov     r4,b
04CD FD        1471            mov     r5,a
04CE E581      1472            mov     a,sp
04D0 24FC      1473            add     a,#0xfc
04D2 F581      1474            mov     sp,a
04D4 8A82      1475            mov     dpl,r2
04D6 8B83      1476            mov     dph,r3
04D8 8CF0      1477            mov     b,r4
04DA ED        1478            mov     a,r5
04DB 22        1479            ret
04DC           1480   ;------------------------------------------------------------
04DC           1481   ;Allocation info for local variables in function 'calculate_capacitance'
04DC           1482   ;------------------------------------------------------------
04DC           1483   ;period_s                  Allocated to registers r2 r3 r4 r5 
04DC           1484   ;------------------------------------------------------------
04DC           1485   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:272: float calculate_capacitance(float period_s) {
04DC           1486   ;        -----------------------------------------
04DC           1487   ;         function calculate_capacitance
04DC           1488   ;        -----------------------------------------
04DC           1489   _calculate_capacitance:
04DC AA82      1490            mov     r2,dpl
04DE AB83      1491            mov     r3,dph
04E0 ACF0      1492            mov     r4,b
04E2 FD        1493            mov     r5,a
04E3           1494   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:273: return (1.44 * period_s / (R_A + 2 * R_B)) * TERA_MULTIPLIER;
04E3 C002      1495            push    ar2
04E5 C003      1496            push    ar3
04E7 C004      1497            push    ar4
04E9 C005      1498            push    ar5
04EB 9051EC    1499            mov     dptr,#0x51EC
04EE 75F0B8    1500            mov     b,#0xB8
04F1 743F      1501            mov     a,#0x3F
04F3 120000    1502            lcall   ___fsmul
04F6 AA82      1503            mov     r2,dpl
04F8 AB83      1504            mov     r3,dph
04FA ACF0      1505            mov     r4,b
04FC FD        1506            mov     r5,a
04FD E581      1507            mov     a,sp
04FF 24FC      1508            add     a,#0xfc
0501 F581      1509            mov     sp,a
0503 E4        1510            clr     a
0504 C0E0      1511            push    acc
0506 74A0      1512            mov     a,#0xA0
0508 C0E0      1513            push    acc
050A 748C      1514            mov     a,#0x8C
050C C0E0      1515            push    acc
050E 7445      1516            mov     a,#0x45
0510 C0E0      1517            push    acc
0512 8A82      1518            mov     dpl,r2
0514 8B83      1519            mov     dph,r3
0516 8CF0      1520            mov     b,r4
0518 ED        1521            mov     a,r5
0519 120000    1522            lcall   ___fsdiv
051C AA82      1523            mov     r2,dpl
051E AB83      1524            mov     r3,dph
0520 ACF0      1525            mov     r4,b
0522 FD        1526            mov     r5,a
0523 E581      1527            mov     a,sp
0525 24FC      1528            add     a,#0xfc
0527 F581      1529            mov     sp,a
0529 C002      1530            push    ar2
052B C003      1531            push    ar3
052D C004      1532            push    ar4
052F C005      1533            push    ar5
0531 90D4A5    1534            mov     dptr,#0xD4A5
0534 75F068    1535            mov     b,#0x68
0537 7453      1536            mov     a,#0x53
0539 120000    1537            lcall   ___fsmul
053C AA82      1538            mov     r2,dpl
053E AB83      1539            mov     r3,dph
0540 ACF0      1540            mov     r4,b
0542 FD        1541            mov     r5,a
0543 E581      1542            mov     a,sp
0545 24FC      1543            add     a,#0xfc
0547 F581      1544            mov     sp,a
0549 8A82      1545            mov     dpl,r2
054B 8B83      1546            mov     dph,r3
054D 8CF0      1547            mov     b,r4
054F ED        1548            mov     a,r5
0550 22        1549            ret
0551           1550   ;------------------------------------------------------------
0551           1551   ;Allocation info for local variables in function 'main'
0551           1552   ;------------------------------------------------------------
0551           1553   ;period_s                  Allocated to registers r2 r3 r4 r5 
0551           1554   ;capacitance_pF            Allocated to registers r2 r3 r4 r5 
0551           1555   ;------------------------------------------------------------
0551           1556   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:276: void main(void) {
0551           1557   ;        -----------------------------------------
0551           1558   ;         function main
0551           1559   ;        -----------------------------------------
0551           1560   _main:
0551           1561   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:281: TIMER0_Init(); // Initialize Timer 0
0551 120000    1562            lcall   _TIMER0_Init
0554           1563   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:282: Serial_Init(); // Initialize Serial Communication
0554 120000    1564            lcall   _Serial_Init
0557           1565   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:283: LCD_4BIT();     // Configure the LCD
0557 120000    1566            lcall   _LCD_4BIT
055A           1567   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:285: LCDprint("LCD 4-Bit Test", 1, 1);
055A 75F001    1568            mov     _LCDprint_PARM_2,#0x01
055D D2C0      1569            setb    _LCDprint_PARM_3
055F 90C368    1570            mov     dptr,#__str_6
0562 75F080    1571            mov     b,#0x80
0565 120000    1572            lcall   _LCDprint
0568           1573   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:286: LCDprint("Hello, World!", 2, 1);
0568 75F002    1574            mov     _LCDprint_PARM_2,#0x02
056B D2C0      1575            setb    _LCDprint_PARM_3
056D 90C3A8    1576            mov     dptr,#__str_7
0570 75F080    1577            mov     b,#0x80
0573 120000    1578            lcall   _LCDprint
0576           1579   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:293: );
0576           1580   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:292: __FILE__, __DATE__, __TIME__
0576           1581   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:291: "Compiled: %s, %s\n\r\n",
0576 74E8      1582            mov     a,#__str_11
0578 C0E0      1583            push    acc
057A 74C3      1584            mov     a,#(__str_11 >> 8)
057C C0E0      1585            push    acc
057E 7480      1586            mov     a,#0x80
0580 C0E0      1587            push    acc
0582 7428      1588            mov     a,#__str_10
0584 C0E0      1589            push    acc
0586 74C4      1590            mov     a,#(__str_10 >> 8)
0588 C0E0      1591            push    acc
058A 7480      1592            mov     a,#0x80
058C C0E0      1593            push    acc
058E 7468      1594            mov     a,#__str_9
0590 C0E0      1595            push    acc
0592 74C4      1596            mov     a,#(__str_9 >> 8)
0594 C0E0      1597            push    acc
0596 7480      1598            mov     a,#0x80
0598 C0E0      1599            push    acc
059A 74A8      1600            mov     a,#__str_8
059C C0E0      1601            push    acc
059E 74C4      1602            mov     a,#(__str_8 >> 8)
05A0 C0E0      1603            push    acc
05A2 7480      1604            mov     a,#0x80
05A4 C0E0      1605            push    acc
05A6 120000    1606            lcall   _printf
05A9 E581      1607            mov     a,sp
05AB 24F4      1608            add     a,#0xf4
05AD F581      1609            mov     sp,a
05AF           1610   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:295: while(1) {
05AF           1611   L021018?:
05AF           1612   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:297: TL0 = 0;
05AF 758A00    1613            mov     _TL0,#0x00
05B2           1614   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:298: TH0 = 0;
05B2 758C00    1615            mov     _TH0,#0x00
05B5           1616   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:299: TF0 = 0;
05B5 C28D      1617            clr     _TF0
05B7           1618   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:300: overflow_count = 0;
05B7 753000    1619            mov     _overflow_count,#0x00
05BA           1620   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:302: while (EFM8_SIGNAL != 0); // Wait for Signal == 0
05BA           1621   L021001?:
05BA 208128    1622            jb      _P0_1,L021001?
05BD           1623   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:303: while (EFM8_SIGNAL != 1); // Wait for Signal == 1
05BD           1624   L021004?:
05BD 308168    1625            jnb     _P0_1,L021004?
05C0           1626   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:305: TR0 = 1; // Start Timer
05C0 D28C      1627            setb    _TR0
05C2           1628   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:307: while (EFM8_SIGNAL != 0) { // Wait for Signal == 0
05C2           1629   L021009?:
05C2 3081E8    1630            jnb     _P0_1,L021014?
05C5           1631   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:308: if (TF0 == 1) { // Did 16-Bit Timer Overflow?
05C5           1632   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:309: TF0 = 0;
05C5 108D28    1633            jbc     _TF0,L021035?
05C8 8000      1634            sjmp    L021009?
05CA           1635   L021035?:
05CA           1636   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:310: overflow_count++;
05CA 0530      1637            inc     _overflow_count
05CC           1638   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:313: while (EFM8_SIGNAL != 1) { // Wait for Signal == 1
05CC 8000      1639            sjmp    L021009?
05CE           1640   L021014?:
05CE 208168    1641            jb      _P0_1,L021016?
05D1           1642   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:314: if (TF0 == 1) { // Did 16-Bit Timer Overflow?
05D1           1643   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:315: TF0 = 0;
05D1 108DA8    1644            jbc     _TF0,L021037?
05D4 8000      1645            sjmp    L021014?
05D6           1646   L021037?:
05D6           1647   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:316: overflow_count++;
05D6 0530      1648            inc     _overflow_count
05D8 8000      1649            sjmp    L021014?
05DA           1650   L021016?:
05DA           1651   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:320: TR0 = 0; // Stop Timer 0. The 24-bit number [overflow_count-TH0-TL0] has the period!
05DA C28C      1652            clr     _TR0
05DC           1653   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:321: period_s = calculate_period(overflow_count, TH0, TL0);
05DC AA30      1654            mov     r2,_overflow_count
05DE 7B00      1655            mov     r3,#0x00
05E0 858C00    1656            mov     _calculate_period_PARM_2,_TH0
05E3 750100    1657            mov     (_calculate_period_PARM_2 + 1),#0x00
05E6 858AB0    1658            mov     _calculate_period_PARM_3,_TL0
05E9 75B100    1659            mov     (_calculate_period_PARM_3 + 1),#0x00
05EC 8A82      1660            mov     dpl,r2
05EE 8B83      1661            mov     dph,r3
05F0 120000    1662            lcall   _calculate_period
05F3           1663   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:322: capacitance_pF = calculate_capacitance(period_s);
05F3 120000    1664            lcall   _calculate_capacitance
05F6 AA82      1665            mov     r2,dpl
05F8 AB83      1666            mov     r3,dph
05FA ACF0      1667            mov     r4,b
05FC FD        1668            mov     r5,a
05FD           1669   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:341: printf("\rC(µF)=%f", (capacitance_pF / MEGA_MULTIPLIER));
05FD E4        1670            clr     a
05FE C0E0      1671            push    acc
0600 7424      1672            mov     a,#0x24
0602 C0E0      1673            push    acc
0604 7474      1674            mov     a,#0x74
0606 C0E0      1675            push    acc
0608 7449      1676            mov     a,#0x49
060A C0E0      1677            push    acc
060C 8A82      1678            mov     dpl,r2
060E 8B83      1679            mov     dph,r3
0610 8CF0      1680            mov     b,r4
0612 ED        1681            mov     a,r5
0613 120000    1682            lcall   ___fsdiv
0616 AA82      1683            mov     r2,dpl
0618 AB83      1684            mov     r3,dph
061A ACF0      1685            mov     r4,b
061C FD        1686            mov     r5,a
061D E581      1687            mov     a,sp
061F 24FC      1688            add     a,#0xfc
0621 F581      1689            mov     sp,a
0623 C002      1690            push    ar2
0625 C003      1691            push    ar3
0627 C004      1692            push    ar4
0629 C005      1693            push    ar5
062B C002      1694            push    ar2
062D C003      1695            push    ar3
062F C004      1696            push    ar4
0631 C005      1697            push    ar5
0633 74E8      1698            mov     a,#__str_12
0635 C0E0      1699            push    acc
0637 74C6      1700            mov     a,#(__str_12 >> 8)
0639 C0E0      1701            push    acc
063B 7480      1702            mov     a,#0x80
063D C0E0      1703            push    acc
063F 120000    1704            lcall   _printf
0642 E581      1705            mov     a,sp
0644 24F9      1706            add     a,#0xf9
0646 F581      1707            mov     sp,a
0648 D005      1708            pop     ar5
064A D004      1709            pop     ar4
064C D003      1710            pop     ar3
064E D002      1711            pop     ar2
0650           1712   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:342: display_capacitance_microF(capacitance_pF / MEGA_MULTIPLIER);
0650 8A82      1713            mov     dpl,r2
0652 8B83      1714            mov     dph,r3
0654 8CF0      1715            mov     b,r4
0656 ED        1716            mov     a,r5
0657 120000    1717            lcall   _display_capacitance_microF
065A 020000    1718            ljmp    L021018?
065D           1719            rseg R_CSEG
065D           1720   
0000           1721            rseg R_XINIT
0000           1722   
0000           1723            rseg R_CONST
0000           1724   __str_0:
0000 1B        1725            db 0x1B
0001 5B324A    1726            db '[2J'
0004 00        1727            db 0x00
0005           1728   __str_1:
0005 54797065  1729            db 'Type Intended Display in Line 2 (16 Char Max): '
     20496E74
     656E6465
     64204469
     73706C61
     7920696E
     204C696E
     65203220
     28313620
     43686172
     204D6178
     293A20
0034 00        1730            db 0x00
0035           1731   __str_2:
0035 0A        1732            db 0x0A
0036 00        1733            db 0x00
0037           1734   __str_3:
0037 543A2025  1735            db 'T: %f s'
     662073
003E 00        1736            db 0x00
003F           1737   __str_4:
003F 463A2025  1738            db 'F: %i kHz'
     69206B48
     7A
0048 00        1739            db 0x00
0049           1740   __str_5:
0049 433A2025  1741            db 'C: %i '
     6920
004F C2        1742            db 0xC2
0050 B5        1743            db 0xB5
0051 46        1744            db 'F'
0052 00        1745            db 0x00
0053           1746   __str_6:
0053 4C434420  1747            db 'LCD 4-Bit Test'
     342D4269
     74205465
     7374
0061 00        1748            db 0x00
0062           1749   __str_7:
0062 48656C6C  1750            db 'Hello, World!'
     6F2C2057
     6F726C64
     21
006F 00        1751            db 0x00
0070           1752   __str_8:
0070 0D        1753            db 0x0D
0071 45464D38  1754            db 'EFM8 Period measurement at pin P0.1 using Timer 0.'
     20506572
     696F6420
     6D656173
     7572656D
     656E7420
     61742070
     696E2050
     302E3120
     7573696E
     67205469
     6D657220
     302E
00A3 0A        1755            db 0x0A
00A4 46696C65  1756            db 'File: %s'
     3A202573
00AC 0A        1757            db 0x0A
00AD 436F6D70  1758            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
00BD 0A        1759            db 0x0A
00BE 0D        1760            db 0x0D
00BF 0A        1761            db 0x0A
00C0 00        1762            db 0x00
00C1           1763   __str_9:
00C1 433A      1764            db 'C:'
00C3 5C        1765            db 0x5C
00C4 4D756E74  1766            db 'Muntakim_Files'
     616B696D
     5F46696C
     6573
00D2 5C        1767            db 0x5C
00D3 5363686F  1768            db 'School'
     6F6C
00D9 5C        1769            db 0x5C
00DA 5363686F  1770            db 'School_Work'
     6F6C5F57
     6F726B
00E5 5C        1771            db 0x5C
00E6 456E6769  1772            db 'Engineering_Bachelors'
     6E656572
     696E675F
     42616368
     656C6F72
     73
00FB 5C        1773            db 0x5C
00FC 32        1774            db '2'
00FD 303233    1775            db '023'
0100 5C        1776            db 0x5C
0101 454C4543  1777            db 'ELEC_291'
     5F323931
0109 5C        1778            db 0x5C
010A 4C61625F  1779            db 'Lab_4'
     34
010F 5C        1780            db 0x5C
0110 454C4543  1781            db 'ELEC291_Lab4'
     3239315F
     4C616234
011C 5C        1782            db 0x5C
011D 4C616234  1783            db 'Lab4.c'
     2E63
0123 00        1784            db 0x00
0124           1785   __str_10:
0124 46656220  1786            db 'Feb 26 2024'
     32362032
     303234
012F 00        1787            db 0x00
0130           1788   __str_11:
0130 31373A30  1789            db '17:07:10'
     373A3130
0138 00        1790            db 0x00
0139           1791   __str_12:
0139 0D        1792            db 0x0D
013A 4328      1793            db 'C('
013C C2        1794            db 0xC2
013D B5        1795            db 0xB5
013E 46293D25  1796            db 'F)=%f'
     66
0143 00        1797            db 0x00
0144           1798   
0003           1799            CSEG
0003           1800   
0003           1801   end
