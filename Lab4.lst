0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Mon Feb 26 19:14:55 2024
0000              5   ;--------------------------------------------------------
                  5   $name Lab4
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _calculate_capacitance_nF
0000             29            public _calculate_freq_Hz
0000             30            public _calculate_period_s
0000             31            public _display_capacitance_nF
0000             32            public _display_freq_kHz
0000             33            public _display_period
0000             34            public _display_rx
0000             35            public _write_rx
0000             36            public _LCDprint
0000             37            public _LCD_4BIT
0000             38            public _WriteCommand
0000             39            public _WriteData
0000             40            public _LCD_byte
0000             41            public _LCD_pulse
0000             42            public _Serial_Init
0000             43            public _TIMER0_Init
0000             44            public _waitms
0000             45            public _Timer3us
0000             46            public __c51_external_startup
0000             47            public _LCDprint_PARM_3
0000             48            public _calculate_period_s_PARM_3
0000             49            public _calculate_period_s_PARM_2
0000             50            public _display_rx_PARM_2
0000             51            public _write_rx_PARM_2
0000             52            public _LCDprint_PARM_2
0000             53            public _overflow_count
0000             54   ;--------------------------------------------------------
0000             55   ; Special Function Registers
0000             56   ;--------------------------------------------------------
0000             57   _ACC            DATA 0xe0
0000             58   _ADC0ASAH       DATA 0xb6
0000             59   _ADC0ASAL       DATA 0xb5
0000             60   _ADC0ASCF       DATA 0xa1
0000             61   _ADC0ASCT       DATA 0xc7
0000             62   _ADC0CF0        DATA 0xbc
0000             63   _ADC0CF1        DATA 0xb9
0000             64   _ADC0CF2        DATA 0xdf
0000             65   _ADC0CN0        DATA 0xe8
0000             66   _ADC0CN1        DATA 0xb2
0000             67   _ADC0CN2        DATA 0xb3
0000             68   _ADC0GTH        DATA 0xc4
0000             69   _ADC0GTL        DATA 0xc3
0000             70   _ADC0H          DATA 0xbe
0000             71   _ADC0L          DATA 0xbd
0000             72   _ADC0LTH        DATA 0xc6
0000             73   _ADC0LTL        DATA 0xc5
0000             74   _ADC0MX         DATA 0xbb
0000             75   _B              DATA 0xf0
0000             76   _CKCON0         DATA 0x8e
0000             77   _CKCON1         DATA 0xa6
0000             78   _CLEN0          DATA 0xc6
0000             79   _CLIE0          DATA 0xc7
0000             80   _CLIF0          DATA 0xe8
0000             81   _CLKSEL         DATA 0xa9
0000             82   _CLOUT0         DATA 0xd1
0000             83   _CLU0CF         DATA 0xb1
0000             84   _CLU0FN         DATA 0xaf
0000             85   _CLU0MX         DATA 0x84
0000             86   _CLU1CF         DATA 0xb3
0000             87   _CLU1FN         DATA 0xb2
0000             88   _CLU1MX         DATA 0x85
0000             89   _CLU2CF         DATA 0xb6
0000             90   _CLU2FN         DATA 0xb5
0000             91   _CLU2MX         DATA 0x91
0000             92   _CLU3CF         DATA 0xbf
0000             93   _CLU3FN         DATA 0xbe
0000             94   _CLU3MX         DATA 0xae
0000             95   _CMP0CN0        DATA 0x9b
0000             96   _CMP0CN1        DATA 0x99
0000             97   _CMP0MD         DATA 0x9d
0000             98   _CMP0MX         DATA 0x9f
0000             99   _CMP1CN0        DATA 0xbf
0000            100   _CMP1CN1        DATA 0xac
0000            101   _CMP1MD         DATA 0xab
0000            102   _CMP1MX         DATA 0xaa
0000            103   _CRC0CN0        DATA 0xce
0000            104   _CRC0CN1        DATA 0x86
0000            105   _CRC0CNT        DATA 0xd3
0000            106   _CRC0DAT        DATA 0xcb
0000            107   _CRC0FLIP       DATA 0xcf
0000            108   _CRC0IN         DATA 0xca
0000            109   _CRC0ST         DATA 0xd2
0000            110   _DAC0CF0        DATA 0x91
0000            111   _DAC0CF1        DATA 0x92
0000            112   _DAC0H          DATA 0x85
0000            113   _DAC0L          DATA 0x84
0000            114   _DAC1CF0        DATA 0x93
0000            115   _DAC1CF1        DATA 0x94
0000            116   _DAC1H          DATA 0x8a
0000            117   _DAC1L          DATA 0x89
0000            118   _DAC2CF0        DATA 0x95
0000            119   _DAC2CF1        DATA 0x96
0000            120   _DAC2H          DATA 0x8c
0000            121   _DAC2L          DATA 0x8b
0000            122   _DAC3CF0        DATA 0x9a
0000            123   _DAC3CF1        DATA 0x9c
0000            124   _DAC3H          DATA 0x8e
0000            125   _DAC3L          DATA 0x8d
0000            126   _DACGCF0        DATA 0x88
0000            127   _DACGCF1        DATA 0x98
0000            128   _DACGCF2        DATA 0xa2
0000            129   _DERIVID        DATA 0xad
0000            130   _DEVICEID       DATA 0xb5
0000            131   _DPH            DATA 0x83
0000            132   _DPL            DATA 0x82
0000            133   _EIE1           DATA 0xe6
0000            134   _EIE2           DATA 0xf3
0000            135   _EIP1           DATA 0xbb
0000            136   _EIP1H          DATA 0xee
0000            137   _EIP2           DATA 0xed
0000            138   _EIP2H          DATA 0xf6
0000            139   _EMI0CN         DATA 0xe7
0000            140   _FLKEY          DATA 0xb7
0000            141   _HFO0CAL        DATA 0xc7
0000            142   _HFO1CAL        DATA 0xd6
0000            143   _HFOCN          DATA 0xef
0000            144   _I2C0ADM        DATA 0xff
0000            145   _I2C0CN0        DATA 0xba
0000            146   _I2C0DIN        DATA 0xbc
0000            147   _I2C0DOUT       DATA 0xbb
0000            148   _I2C0FCN0       DATA 0xad
0000            149   _I2C0FCN1       DATA 0xab
0000            150   _I2C0FCT        DATA 0xf5
0000            151   _I2C0SLAD       DATA 0xbd
0000            152   _I2C0STAT       DATA 0xb9
0000            153   _IE             DATA 0xa8
0000            154   _IP             DATA 0xb8
0000            155   _IPH            DATA 0xf2
0000            156   _IT01CF         DATA 0xe4
0000            157   _LFO0CN         DATA 0xb1
0000            158   _P0             DATA 0x80
0000            159   _P0MASK         DATA 0xfe
0000            160   _P0MAT          DATA 0xfd
0000            161   _P0MDIN         DATA 0xf1
0000            162   _P0MDOUT        DATA 0xa4
0000            163   _P0SKIP         DATA 0xd4
0000            164   _P1             DATA 0x90
0000            165   _P1MASK         DATA 0xee
0000            166   _P1MAT          DATA 0xed
0000            167   _P1MDIN         DATA 0xf2
0000            168   _P1MDOUT        DATA 0xa5
0000            169   _P1SKIP         DATA 0xd5
0000            170   _P2             DATA 0xa0
0000            171   _P2MASK         DATA 0xfc
0000            172   _P2MAT          DATA 0xfb
0000            173   _P2MDIN         DATA 0xf3
0000            174   _P2MDOUT        DATA 0xa6
0000            175   _P2SKIP         DATA 0xcc
0000            176   _P3             DATA 0xb0
0000            177   _P3MDIN         DATA 0xf4
0000            178   _P3MDOUT        DATA 0x9c
0000            179   _PCA0CENT       DATA 0x9e
0000            180   _PCA0CLR        DATA 0x9c
0000            181   _PCA0CN0        DATA 0xd8
0000            182   _PCA0CPH0       DATA 0xfc
0000            183   _PCA0CPH1       DATA 0xea
0000            184   _PCA0CPH2       DATA 0xec
0000            185   _PCA0CPH3       DATA 0xf5
0000            186   _PCA0CPH4       DATA 0x85
0000            187   _PCA0CPH5       DATA 0xde
0000            188   _PCA0CPL0       DATA 0xfb
0000            189   _PCA0CPL1       DATA 0xe9
0000            190   _PCA0CPL2       DATA 0xeb
0000            191   _PCA0CPL3       DATA 0xf4
0000            192   _PCA0CPL4       DATA 0x84
0000            193   _PCA0CPL5       DATA 0xdd
0000            194   _PCA0CPM0       DATA 0xda
0000            195   _PCA0CPM1       DATA 0xdb
0000            196   _PCA0CPM2       DATA 0xdc
0000            197   _PCA0CPM3       DATA 0xae
0000            198   _PCA0CPM4       DATA 0xaf
0000            199   _PCA0CPM5       DATA 0xcc
0000            200   _PCA0H          DATA 0xfa
0000            201   _PCA0L          DATA 0xf9
0000            202   _PCA0MD         DATA 0xd9
0000            203   _PCA0POL        DATA 0x96
0000            204   _PCA0PWM        DATA 0xf7
0000            205   _PCON0          DATA 0x87
0000            206   _PCON1          DATA 0xcd
0000            207   _PFE0CN         DATA 0xc1
0000            208   _PRTDRV         DATA 0xf6
0000            209   _PSCTL          DATA 0x8f
0000            210   _PSTAT0         DATA 0xaa
0000            211   _PSW            DATA 0xd0
0000            212   _REF0CN         DATA 0xd1
0000            213   _REG0CN         DATA 0xc9
0000            214   _REVID          DATA 0xb6
0000            215   _RSTSRC         DATA 0xef
0000            216   _SBCON1         DATA 0x94
0000            217   _SBRLH1         DATA 0x96
0000            218   _SBRLL1         DATA 0x95
0000            219   _SBUF           DATA 0x99
0000            220   _SBUF0          DATA 0x99
0000            221   _SBUF1          DATA 0x92
0000            222   _SCON           DATA 0x98
0000            223   _SCON0          DATA 0x98
0000            224   _SCON1          DATA 0xc8
0000            225   _SFRPAGE        DATA 0xa7
0000            226   _SFRPGCN        DATA 0xbc
0000            227   _SFRSTACK       DATA 0xd7
0000            228   _SMB0ADM        DATA 0xd6
0000            229   _SMB0ADR        DATA 0xd7
0000            230   _SMB0CF         DATA 0xc1
0000            231   _SMB0CN0        DATA 0xc0
0000            232   _SMB0DAT        DATA 0xc2
0000            233   _SMB0FCN0       DATA 0xc3
0000            234   _SMB0FCN1       DATA 0xc4
0000            235   _SMB0FCT        DATA 0xef
0000            236   _SMB0RXLN       DATA 0xc5
0000            237   _SMB0TC         DATA 0xac
0000            238   _SMOD1          DATA 0x93
0000            239   _SP             DATA 0x81
0000            240   _SPI0CFG        DATA 0xa1
0000            241   _SPI0CKR        DATA 0xa2
0000            242   _SPI0CN0        DATA 0xf8
0000            243   _SPI0DAT        DATA 0xa3
0000            244   _SPI0FCN0       DATA 0x9a
0000            245   _SPI0FCN1       DATA 0x9b
0000            246   _SPI0FCT        DATA 0xf7
0000            247   _SPI0PCF        DATA 0xdf
0000            248   _TCON           DATA 0x88
0000            249   _TH0            DATA 0x8c
0000            250   _TH1            DATA 0x8d
0000            251   _TL0            DATA 0x8a
0000            252   _TL1            DATA 0x8b
0000            253   _TMOD           DATA 0x89
0000            254   _TMR2CN0        DATA 0xc8
0000            255   _TMR2CN1        DATA 0xfd
0000            256   _TMR2H          DATA 0xcf
0000            257   _TMR2L          DATA 0xce
0000            258   _TMR2RLH        DATA 0xcb
0000            259   _TMR2RLL        DATA 0xca
0000            260   _TMR3CN0        DATA 0x91
0000            261   _TMR3CN1        DATA 0xfe
0000            262   _TMR3H          DATA 0x95
0000            263   _TMR3L          DATA 0x94
0000            264   _TMR3RLH        DATA 0x93
0000            265   _TMR3RLL        DATA 0x92
0000            266   _TMR4CN0        DATA 0x98
0000            267   _TMR4CN1        DATA 0xff
0000            268   _TMR4H          DATA 0xa5
0000            269   _TMR4L          DATA 0xa4
0000            270   _TMR4RLH        DATA 0xa3
0000            271   _TMR4RLL        DATA 0xa2
0000            272   _TMR5CN0        DATA 0xc0
0000            273   _TMR5CN1        DATA 0xf1
0000            274   _TMR5H          DATA 0xd5
0000            275   _TMR5L          DATA 0xd4
0000            276   _TMR5RLH        DATA 0xd3
0000            277   _TMR5RLL        DATA 0xd2
0000            278   _UART0PCF       DATA 0xd9
0000            279   _UART1FCN0      DATA 0x9d
0000            280   _UART1FCN1      DATA 0xd8
0000            281   _UART1FCT       DATA 0xfa
0000            282   _UART1LIN       DATA 0x9e
0000            283   _UART1PCF       DATA 0xda
0000            284   _VDM0CN         DATA 0xff
0000            285   _WDTCN          DATA 0x97
0000            286   _XBR0           DATA 0xe1
0000            287   _XBR1           DATA 0xe2
0000            288   _XBR2           DATA 0xe3
0000            289   _XOSC0CN        DATA 0x86
0000            290   _DPTR           DATA 0x8382
0000            291   _TMR2RL         DATA 0xcbca
0000            292   _TMR3RL         DATA 0x9392
0000            293   _TMR4RL         DATA 0xa3a2
0000            294   _TMR5RL         DATA 0xd3d2
0000            295   _TMR0           DATA 0x8c8a
0000            296   _TMR1           DATA 0x8d8b
0000            297   _TMR2           DATA 0xcfce
0000            298   _TMR3           DATA 0x9594
0000            299   _TMR4           DATA 0xa5a4
0000            300   _TMR5           DATA 0xd5d4
0000            301   _SBRL1          DATA 0x9695
0000            302   _PCA0           DATA 0xfaf9
0000            303   _PCA0CP0        DATA 0xfcfb
0000            304   _PCA0CP1        DATA 0xeae9
0000            305   _PCA0CP2        DATA 0xeceb
0000            306   _PCA0CP3        DATA 0xf5f4
0000            307   _PCA0CP4        DATA 0x8584
0000            308   _PCA0CP5        DATA 0xdedd
0000            309   _ADC0ASA        DATA 0xb6b5
0000            310   _ADC0GT         DATA 0xc4c3
0000            311   _ADC0           DATA 0xbebd
0000            312   _ADC0LT         DATA 0xc6c5
0000            313   _DAC0           DATA 0x8584
0000            314   _DAC1           DATA 0x8a89
0000            315   _DAC2           DATA 0x8c8b
0000            316   _DAC3           DATA 0x8e8d
0000            317   ;--------------------------------------------------------
0000            318   ; special function bits
0000            319   ;--------------------------------------------------------
0000            320   _ACC_0          BIT 0xe0
0000            321   _ACC_1          BIT 0xe1
0000            322   _ACC_2          BIT 0xe2
0000            323   _ACC_3          BIT 0xe3
0000            324   _ACC_4          BIT 0xe4
0000            325   _ACC_5          BIT 0xe5
0000            326   _ACC_6          BIT 0xe6
0000            327   _ACC_7          BIT 0xe7
0000            328   _TEMPE          BIT 0xe8
0000            329   _ADGN0          BIT 0xe9
0000            330   _ADGN1          BIT 0xea
0000            331   _ADWINT         BIT 0xeb
0000            332   _ADBUSY         BIT 0xec
0000            333   _ADINT          BIT 0xed
0000            334   _IPOEN          BIT 0xee
0000            335   _ADEN           BIT 0xef
0000            336   _B_0            BIT 0xf0
0000            337   _B_1            BIT 0xf1
0000            338   _B_2            BIT 0xf2
0000            339   _B_3            BIT 0xf3
0000            340   _B_4            BIT 0xf4
0000            341   _B_5            BIT 0xf5
0000            342   _B_6            BIT 0xf6
0000            343   _B_7            BIT 0xf7
0000            344   _C0FIF          BIT 0xe8
0000            345   _C0RIF          BIT 0xe9
0000            346   _C1FIF          BIT 0xea
0000            347   _C1RIF          BIT 0xeb
0000            348   _C2FIF          BIT 0xec
0000            349   _C2RIF          BIT 0xed
0000            350   _C3FIF          BIT 0xee
0000            351   _C3RIF          BIT 0xef
0000            352   _D1SRC0         BIT 0x88
0000            353   _D1SRC1         BIT 0x89
0000            354   _D1AMEN         BIT 0x8a
0000            355   _D01REFSL       BIT 0x8b
0000            356   _D3SRC0         BIT 0x8c
0000            357   _D3SRC1         BIT 0x8d
0000            358   _D3AMEN         BIT 0x8e
0000            359   _D23REFSL       BIT 0x8f
0000            360   _D0UDIS         BIT 0x98
0000            361   _D1UDIS         BIT 0x99
0000            362   _D2UDIS         BIT 0x9a
0000            363   _D3UDIS         BIT 0x9b
0000            364   _EX0            BIT 0xa8
0000            365   _ET0            BIT 0xa9
0000            366   _EX1            BIT 0xaa
0000            367   _ET1            BIT 0xab
0000            368   _ES0            BIT 0xac
0000            369   _ET2            BIT 0xad
0000            370   _ESPI0          BIT 0xae
0000            371   _EA             BIT 0xaf
0000            372   _PX0            BIT 0xb8
0000            373   _PT0            BIT 0xb9
0000            374   _PX1            BIT 0xba
0000            375   _PT1            BIT 0xbb
0000            376   _PS0            BIT 0xbc
0000            377   _PT2            BIT 0xbd
0000            378   _PSPI0          BIT 0xbe
0000            379   _P0_0           BIT 0x80
0000            380   _P0_1           BIT 0x81
0000            381   _P0_2           BIT 0x82
0000            382   _P0_3           BIT 0x83
0000            383   _P0_4           BIT 0x84
0000            384   _P0_5           BIT 0x85
0000            385   _P0_6           BIT 0x86
0000            386   _P0_7           BIT 0x87
0000            387   _P1_0           BIT 0x90
0000            388   _P1_1           BIT 0x91
0000            389   _P1_2           BIT 0x92
0000            390   _P1_3           BIT 0x93
0000            391   _P1_4           BIT 0x94
0000            392   _P1_5           BIT 0x95
0000            393   _P1_6           BIT 0x96
0000            394   _P1_7           BIT 0x97
0000            395   _P2_0           BIT 0xa0
0000            396   _P2_1           BIT 0xa1
0000            397   _P2_2           BIT 0xa2
0000            398   _P2_3           BIT 0xa3
0000            399   _P2_4           BIT 0xa4
0000            400   _P2_5           BIT 0xa5
0000            401   _P2_6           BIT 0xa6
0000            402   _P3_0           BIT 0xb0
0000            403   _P3_1           BIT 0xb1
0000            404   _P3_2           BIT 0xb2
0000            405   _P3_3           BIT 0xb3
0000            406   _P3_4           BIT 0xb4
0000            407   _P3_7           BIT 0xb7
0000            408   _CCF0           BIT 0xd8
0000            409   _CCF1           BIT 0xd9
0000            410   _CCF2           BIT 0xda
0000            411   _CCF3           BIT 0xdb
0000            412   _CCF4           BIT 0xdc
0000            413   _CCF5           BIT 0xdd
0000            414   _CR             BIT 0xde
0000            415   _CF             BIT 0xdf
0000            416   _PARITY         BIT 0xd0
0000            417   _F1             BIT 0xd1
0000            418   _OV             BIT 0xd2
0000            419   _RS0            BIT 0xd3
0000            420   _RS1            BIT 0xd4
0000            421   _F0             BIT 0xd5
0000            422   _AC             BIT 0xd6
0000            423   _CY             BIT 0xd7
0000            424   _RI             BIT 0x98
0000            425   _TI             BIT 0x99
0000            426   _RB8            BIT 0x9a
0000            427   _TB8            BIT 0x9b
0000            428   _REN            BIT 0x9c
0000            429   _CE             BIT 0x9d
0000            430   _SMODE          BIT 0x9e
0000            431   _RI1            BIT 0xc8
0000            432   _TI1            BIT 0xc9
0000            433   _RBX1           BIT 0xca
0000            434   _TBX1           BIT 0xcb
0000            435   _REN1           BIT 0xcc
0000            436   _PERR1          BIT 0xcd
0000            437   _OVR1           BIT 0xce
0000            438   _SI             BIT 0xc0
0000            439   _ACK            BIT 0xc1
0000            440   _ARBLOST        BIT 0xc2
0000            441   _ACKRQ          BIT 0xc3
0000            442   _STO            BIT 0xc4
0000            443   _STA            BIT 0xc5
0000            444   _TXMODE         BIT 0xc6
0000            445   _MASTER         BIT 0xc7
0000            446   _SPIEN          BIT 0xf8
0000            447   _TXNF           BIT 0xf9
0000            448   _NSSMD0         BIT 0xfa
0000            449   _NSSMD1         BIT 0xfb
0000            450   _RXOVRN         BIT 0xfc
0000            451   _MODF           BIT 0xfd
0000            452   _WCOL           BIT 0xfe
0000            453   _SPIF           BIT 0xff
0000            454   _IT0            BIT 0x88
0000            455   _IE0            BIT 0x89
0000            456   _IT1            BIT 0x8a
0000            457   _IE1            BIT 0x8b
0000            458   _TR0            BIT 0x8c
0000            459   _TF0            BIT 0x8d
0000            460   _TR1            BIT 0x8e
0000            461   _TF1            BIT 0x8f
0000            462   _T2XCLK0        BIT 0xc8
0000            463   _T2XCLK1        BIT 0xc9
0000            464   _TR2            BIT 0xca
0000            465   _T2SPLIT        BIT 0xcb
0000            466   _TF2CEN         BIT 0xcc
0000            467   _TF2LEN         BIT 0xcd
0000            468   _TF2L           BIT 0xce
0000            469   _TF2H           BIT 0xcf
0000            470   _T4XCLK0        BIT 0x98
0000            471   _T4XCLK1        BIT 0x99
0000            472   _TR4            BIT 0x9a
0000            473   _T4SPLIT        BIT 0x9b
0000            474   _TF4CEN         BIT 0x9c
0000            475   _TF4LEN         BIT 0x9d
0000            476   _TF4L           BIT 0x9e
0000            477   _TF4H           BIT 0x9f
0000            478   _T5XCLK0        BIT 0xc0
0000            479   _T5XCLK1        BIT 0xc1
0000            480   _TR5            BIT 0xc2
0000            481   _T5SPLIT        BIT 0xc3
0000            482   _TF5CEN         BIT 0xc4
0000            483   _TF5LEN         BIT 0xc5
0000            484   _TF5L           BIT 0xc6
0000            485   _TF5H           BIT 0xc7
0000            486   _RIE            BIT 0xd8
0000            487   _RXTO0          BIT 0xd9
0000            488   _RXTO1          BIT 0xda
0000            489   _RFRQ           BIT 0xdb
0000            490   _TIE            BIT 0xdc
0000            491   _TXHOLD         BIT 0xdd
0000            492   _TXNF1          BIT 0xde
0000            493   _TFRQ           BIT 0xdf
0000            494   ;--------------------------------------------------------
0000            495   ; overlayable register banks
0000            496   ;--------------------------------------------------------
0000            497            rbank0 segment data overlay
0000            498   ;--------------------------------------------------------
0000            499   ; internal ram data
0000            500   ;--------------------------------------------------------
0000            501            rseg R_DSEG
0000            502   _overflow_count:
0000            503            ds 1
0001            504   _LCDprint_PARM_2:
0001            505            ds 1
0002            506   _write_rx_PARM_2:
0002            507            ds 2
0004            508   _write_rx_buff_1_47:
0004            509            ds 3
0007            510   _write_rx_sloc0_1_0:
0007            511            ds 2
0009            512   _display_rx_PARM_2:
0009            513            ds 2
000B            514   _display_period_buff_1_55:
000B            515            ds 16
001B            516   _display_freq_kHz_buff_1_57:
001B            517            ds 16
002B            518   _display_capacitance_nF_buff_1_59:
002B            519            ds 16
003B            520   _calculate_period_s_PARM_2:
003B            521            ds 2
003D            522   _calculate_period_s_PARM_3:
003D            523            ds 2
003F            524   ;--------------------------------------------------------
003F            525   ; overlayable items in internal ram 
003F            526   ;--------------------------------------------------------
0000            527            rseg    R_OSEG
0000            528   ;--------------------------------------------------------
0000            529   ; indirectly addressable internal ram data
0000            530   ;--------------------------------------------------------
0000            531            rseg R_ISEG
0000            532   ;--------------------------------------------------------
0000            533   ; absolute internal ram data
0000            534   ;--------------------------------------------------------
0000            535            DSEG
0000            536   ;--------------------------------------------------------
0000            537   ; bit data
0000            538   ;--------------------------------------------------------
0000            539            rseg R_BSEG
0000            540   _LCDprint_PARM_3:
0000            541            DBIT    1
0001            542   ;--------------------------------------------------------
0001            543   ; paged external ram data
0001            544   ;--------------------------------------------------------
0000            545            rseg R_PSEG
0000            546   ;--------------------------------------------------------
0000            547   ; external ram data
0000            548   ;--------------------------------------------------------
0000            549            rseg R_XSEG
0000            550   ;--------------------------------------------------------
0000            551   ; absolute external ram data
0000            552   ;--------------------------------------------------------
0000            553            XSEG
0000            554   ;--------------------------------------------------------
0000            555   ; external initialized ram data
0000            556   ;--------------------------------------------------------
0000            557            rseg R_IXSEG
0000            558            rseg R_HOME
0000            559            rseg R_GSINIT
0000            560            rseg R_CSEG
0000            561   ;--------------------------------------------------------
0000            562   ; Reset entry point and interrupt vectors
0000            563   ;--------------------------------------------------------
0000            564            CSEG at 0x0000
0000 020000     565            ljmp    _crt0
0003            566   ;--------------------------------------------------------
0003            567   ; global & static initialisations
0003            568   ;--------------------------------------------------------
0000            569            rseg R_HOME
0000            570            rseg R_GSINIT
0000            571            rseg R_GSINIT
0000            572   ;--------------------------------------------------------
0000            573   ; data variables initialization
0000            574   ;--------------------------------------------------------
0000            575            rseg R_DINIT
0000            576            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            577   ;--------------------------------------------------------
0000            578   ; code
0000            579   ;--------------------------------------------------------
0000            580            rseg R_CSEG
0000            581   ;------------------------------------------------------------
0000            582   ;Allocation info for local variables in function '_c51_external_startup'
0000            583   ;------------------------------------------------------------
0000            584   ;------------------------------------------------------------
0000            585   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:45: char _c51_external_startup(void) {
0000            586   ;        -----------------------------------------
0000            587   ;         function _c51_external_startup
0000            588   ;        -----------------------------------------
0000            589   __c51_external_startup:
0000            590            using   0
0000            591   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:47: SFRPAGE = 0x00;
0000 75A700     592            mov     _SFRPAGE,#0x00
0003            593   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:48: WDTCN = 0xDE; // First Key
0003 7597DE     594            mov     _WDTCN,#0xDE
0006            595   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:49: WDTCN = 0xAD; // Second Key
0006 7597AD     596            mov     _WDTCN,#0xAD
0009            597   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:51: VDM0CN |= 0x80;
0009 43FF80     598            orl     _VDM0CN,#0x80
000C            599   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:52: RSTSRC = 0x02;
000C 75EF02     600            mov     _RSTSRC,#0x02
000F            601   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:60: SFRPAGE = 0x10;
000F 75A710     602            mov     _SFRPAGE,#0x10
0012            603   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:61: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     604            mov     _PFE0CN,#0x20
0015            605   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:62: SFRPAGE = 0x00;
0015 75A700     606            mov     _SFRPAGE,#0x00
0018            607   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:84: CLKSEL = 0x00;
0018 75A900     608            mov     _CLKSEL,#0x00
001B            609   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:85: CLKSEL = 0x00;
001B 75A900     610            mov     _CLKSEL,#0x00
001E            611   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:86: while ((CLKSEL & 0x80) == 0);
001E            612   L002001?:
001E E5A9       613            mov     a,_CLKSEL
0020 30E7F8     614            jnb     acc.7,L002001?
0023            615   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:87: CLKSEL = 0x03;
0023 75A903     616            mov     _CLKSEL,#0x03
0026            617   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:88: CLKSEL = 0x03;
0026 75A903     618            mov     _CLKSEL,#0x03
0029            619   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:89: while ((CLKSEL & 0x80) == 0);
0029            620   L002004?:
0029 E5A9       621            mov     a,_CLKSEL
002B 30E778     622            jnb     acc.7,L002004?
002E            623   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:94: P0MDOUT |= 0x10; // Enable UART0 TX As Push-Pull Output
002E 43A410     624            orl     _P0MDOUT,#0x10
0031            625   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:95: XBR0     = 0x01; // Enable UART0 on P0.4 (TX) and P0.5 (RX)
0031 75E101     626            mov     _XBR0,#0x01
0034            627   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:96: XBR1     = 0X00; // Enable T0 on P0.0
0034 75E200     628            mov     _XBR1,#0x00
0037            629   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:97: XBR2     = 0x40; // Enable Crossbar and Weak Pull-Ups
0037 75E340     630            mov     _XBR2,#0x40
003A            631   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:104: SCON0 = 0x10;
003A 759810     632            mov     _SCON0,#0x10
003D            633   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:105: CKCON0 |= 0b_0000_0000 ; // Timer 1 Uses SYSCLK / 12
003D 858E8E     634            mov     _CKCON0,_CKCON0
0040            635   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:106: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L)); // Set Timer1 Reload Value, Initial Value
0040 758DE6     636            mov     _TH1,#0xE6
0043            637   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:107: TL1 = TH1;      // Init Timer1
0043 858D8B     638            mov     _TL1,_TH1
0046            639   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:108: TMOD &= ~0xf0;  // TMOD: Timer 1 in 8-bit auto-reload
0046 53890F     640            anl     _TMOD,#0x0F
0049            641   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:109: TMOD |=  0x20;
0049 438920     642            orl     _TMOD,#0x20
004C            643   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:110: TR1 = 1; // Start Timer1
004C D28E       644            setb    _TR1
004E            645   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:111: TI = 1;  // Indicate TX0 Ready
004E D299       646            setb    _TI
0050            647   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:113: return 0;
0050 758200     648            mov     dpl,#0x00
0053 22         649            ret
0054            650   ;------------------------------------------------------------
0054            651   ;Allocation info for local variables in function 'Timer3us'
0054            652   ;------------------------------------------------------------
0054            653   ;us                        Allocated to registers r2 
0054            654   ;i                         Allocated to registers r3 
0054            655   ;------------------------------------------------------------
0054            656   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:119: void Timer3us(unsigned char us) {
0054            657   ;        -----------------------------------------
0054            658   ;         function Timer3us
0054            659   ;        -----------------------------------------
0054            660   _Timer3us:
0054 AA82       661            mov     r2,dpl
0056            662   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:123: CKCON0 |= 0b_0100_0000;
0056 438E40     663            orl     _CKCON0,#0x40
0059            664   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:125: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to Overflow in 1us
0059 7592B8     665            mov     _TMR3RL,#0xB8
005C 7593FF     666            mov     (_TMR3RL >> 8),#0xFF
005F            667   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:126: TMR3 = TMR3RL;                 // Initialize Timer3 for First Overflow
005F 859294     668            mov     _TMR3,_TMR3RL
0062 859395     669            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0065            670   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:128: TMR3CN0 = 0x04;                 // Start Timer3 and Clear Overflow Flag
0065 759104     671            mov     _TMR3CN0,#0x04
0068            672   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:129: for (i = 0; i < us; i++) {      // Count Overflows (#Microseconds)
0068 7B00       673            mov     r3,#0x00
006A            674   L003004?:
006A C3         675            clr     c
006B EB         676            mov     a,r3
006C 9A         677            subb    a,r2
006D 5000       678            jnc     L003007?
006F            679   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:130: while (!(TMR3CN0 & 0x80));  // Wait for Overflow
006F            680   L003001?:
006F E591       681            mov     a,_TMR3CN0
0071 30E778     682            jnb     acc.7,L003001?
0074            683   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:131: TMR3CN0 &= ~(0x80);         // Clear Overflow Indicator
0074 53917F     684            anl     _TMR3CN0,#0x7F
0077            685   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:129: for (i = 0; i < us; i++) {      // Count Overflows (#Microseconds)
0077 0B         686            inc     r3
0078 8000       687            sjmp    L003004?
007A            688   L003007?:
007A            689   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:133: TMR3CN0 = 0 ;                   // Stop Timer3 and Clear Overflow Flag
007A 759100     690            mov     _TMR3CN0,#0x00
007D 22         691            ret
007E            692   ;------------------------------------------------------------
007E            693   ;Allocation info for local variables in function 'waitms'
007E            694   ;------------------------------------------------------------
007E            695   ;ms                        Allocated to registers r2 r3 
007E            696   ;j                         Allocated to registers r2 r3 
007E            697   ;------------------------------------------------------------
007E            698   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:136: void waitms (unsigned int ms) {
007E            699   ;        -----------------------------------------
007E            700   ;         function waitms
007E            701   ;        -----------------------------------------
007E            702   _waitms:
007E AA82       703            mov     r2,dpl
0080 AB83       704            mov     r3,dph
0082            705   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:138: for (j = ms; j != 0; j--) {
0082            706   L004001?:
0082 BA0038     707            cjne    r2,#0x00,L004010?
0085 BB0038     708            cjne    r3,#0x00,L004010?
0088 22         709            ret
0089            710   L004010?:
0089            711   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:139: Timer3us(249);
0089 7582F9     712            mov     dpl,#0xF9
008C C002       713            push    ar2
008E C003       714            push    ar3
0090 120000     715            lcall   _Timer3us
0093            716   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:140: Timer3us(249);
0093 7582F9     717            mov     dpl,#0xF9
0096 120000     718            lcall   _Timer3us
0099            719   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:141: Timer3us(249);
0099 7582F9     720            mov     dpl,#0xF9
009C 120000     721            lcall   _Timer3us
009F            722   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:142: Timer3us(250);
009F 7582FA     723            mov     dpl,#0xFA
00A2 120000     724            lcall   _Timer3us
00A5 D003       725            pop     ar3
00A7 D002       726            pop     ar2
00A9            727   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:138: for (j = ms; j != 0; j--) {
00A9 1A         728            dec     r2
00AA BAFF78     729            cjne    r2,#0xff,L004011?
00AD 1B         730            dec     r3
00AE            731   L004011?:
00AE 8000       732            sjmp    L004001?
00B0            733   ;------------------------------------------------------------
00B0            734   ;Allocation info for local variables in function 'TIMER0_Init'
00B0            735   ;------------------------------------------------------------
00B0            736   ;------------------------------------------------------------
00B0            737   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:146: void TIMER0_Init(void) {
00B0            738   ;        -----------------------------------------
00B0            739   ;         function TIMER0_Init
00B0            740   ;        -----------------------------------------
00B0            741   _TIMER0_Init:
00B0            742   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:147: TMOD &= 0b_1111_0000; // Set the Bits of Timer/Counter 0 to 0
00B0 5389F0     743            anl     _TMOD,#0xF0
00B3            744   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:148: TMOD |= 0b_0000_0001; // Timer/Counter 0 Used As 16-Bit Timer
00B3 438901     745            orl     _TMOD,#0x01
00B6            746   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:149: TR0 = 0; // Stop Timer/Counter 0
00B6 C28C       747            clr     _TR0
00B8 22         748            ret
00B9            749   ;------------------------------------------------------------
00B9            750   ;Allocation info for local variables in function 'Serial_Init'
00B9            751   ;------------------------------------------------------------
00B9            752   ;------------------------------------------------------------
00B9            753   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:152: void Serial_Init(void) {
00B9            754   ;        -----------------------------------------
00B9            755   ;         function Serial_Init
00B9            756   ;        -----------------------------------------
00B9            757   _Serial_Init:
00B9            758   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:153: waitms(500); // Give Putty a chance to start.
00B9 9001F4     759            mov     dptr,#0x01F4
00BC 120000     760            lcall   _waitms
00BF            761   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:154: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
00BF 74B8       762            mov     a,#__str_0
00C1 C0E0       763            push    acc
00C3 74BA       764            mov     a,#(__str_0 >> 8)
00C5 C0E0       765            push    acc
00C7 7480       766            mov     a,#0x80
00C9 C0E0       767            push    acc
00CB 120000     768            lcall   _printf
00CE 1581       769            dec     sp
00D0 1581       770            dec     sp
00D2 1581       771            dec     sp
00D4 22         772            ret
00D5            773   ;------------------------------------------------------------
00D5            774   ;Allocation info for local variables in function 'LCD_pulse'
00D5            775   ;------------------------------------------------------------
00D5            776   ;------------------------------------------------------------
00D5            777   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:157: void LCD_pulse(void) {
00D5            778   ;        -----------------------------------------
00D5            779   ;         function LCD_pulse
00D5            780   ;        -----------------------------------------
00D5            781   _LCD_pulse:
00D5            782   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:158: LCD_E = 1; // Pulse the Enable Pin
00D5 D2A0       783            setb    _P2_0
00D7            784   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:159: Timer3us(40); // Wait for 40us
00D7 758228     785            mov     dpl,#0x28
00DA 120000     786            lcall   _Timer3us
00DD            787   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:160: LCD_E = 0; // Pulse the Enable Pin
00DD C2A0       788            clr     _P2_0
00DF 22         789            ret
00E0            790   ;------------------------------------------------------------
00E0            791   ;Allocation info for local variables in function 'LCD_byte'
00E0            792   ;------------------------------------------------------------
00E0            793   ;x                         Allocated to registers r2 
00E0            794   ;------------------------------------------------------------
00E0            795   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:163: void LCD_byte(unsigned char x) {
00E0            796   ;        -----------------------------------------
00E0            797   ;         function LCD_byte
00E0            798   ;        -----------------------------------------
00E0            799   _LCD_byte:
00E0 AA82       800            mov     r2,dpl
00E2            801   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:166: ACC = x; // Send High Nibble
00E2 8AE0       802            mov     _ACC,r2
00E4            803   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:167: LCD_D7 = ACC_7;
00E4 A2E7       804            mov     c,_ACC_7
00E6 9290       805            mov     _P1_0,c
00E8            806   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:168: LCD_D6 = ACC_6;
00E8 A2E6       807            mov     c,_ACC_6
00EA 9291       808            mov     _P1_1,c
00EC            809   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:169: LCD_D5 = ACC_5;
00EC A2E5       810            mov     c,_ACC_5
00EE 9292       811            mov     _P1_2,c
00F0            812   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:170: LCD_D4 = ACC_4;
00F0 A2E4       813            mov     c,_ACC_4
00F2 9293       814            mov     _P1_3,c
00F4            815   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:171: LCD_pulse();
00F4 C002       816            push    ar2
00F6 120000     817            lcall   _LCD_pulse
00F9            818   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:173: Timer3us(40); // Wait for 40us
00F9 758228     819            mov     dpl,#0x28
00FC 120000     820            lcall   _Timer3us
00FF D002       821            pop     ar2
0101            822   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:175: ACC = x; // Send Low Nibble
0101 8AE0       823            mov     _ACC,r2
0103            824   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:176: LCD_D7 = ACC_3;
0103 A2E3       825            mov     c,_ACC_3
0105 9290       826            mov     _P1_0,c
0107            827   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:177: LCD_D6 = ACC_2;
0107 A2E2       828            mov     c,_ACC_2
0109 9291       829            mov     _P1_1,c
010B            830   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:178: LCD_D5 = ACC_1;
010B A2E1       831            mov     c,_ACC_1
010D 9292       832            mov     _P1_2,c
010F            833   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:179: LCD_D4 = ACC_0;
010F A2E0       834            mov     c,_ACC_0
0111 9293       835            mov     _P1_3,c
0113            836   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:180: LCD_pulse();
0113 020000     837            ljmp    _LCD_pulse
0116            838   ;------------------------------------------------------------
0116            839   ;Allocation info for local variables in function 'WriteData'
0116            840   ;------------------------------------------------------------
0116            841   ;x                         Allocated to registers r2 
0116            842   ;------------------------------------------------------------
0116            843   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:183: void WriteData(unsigned char x) {
0116            844   ;        -----------------------------------------
0116            845   ;         function WriteData
0116            846   ;        -----------------------------------------
0116            847   _WriteData:
0116 AA82       848            mov     r2,dpl
0118            849   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:184: LCD_RS = 1; // Set LCD to Data Mode
0118 D297       850            setb    _P1_7
011A            851   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:185: LCD_byte(x); // Write the Data
011A 8A82       852            mov     dpl,r2
011C 120000     853            lcall   _LCD_byte
011F            854   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:186: waitms(2); // Wait for 2ms
011F 900002     855            mov     dptr,#0x0002
0122 020000     856            ljmp    _waitms
0125            857   ;------------------------------------------------------------
0125            858   ;Allocation info for local variables in function 'WriteCommand'
0125            859   ;------------------------------------------------------------
0125            860   ;x                         Allocated to registers r2 
0125            861   ;------------------------------------------------------------
0125            862   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:189: void WriteCommand(unsigned char x) {
0125            863   ;        -----------------------------------------
0125            864   ;         function WriteCommand
0125            865   ;        -----------------------------------------
0125            866   _WriteCommand:
0125 AA82       867            mov     r2,dpl
0127            868   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:190: LCD_RS = 0; // Set LCD to Command Mode
0127 C297       869            clr     _P1_7
0129            870   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:191: LCD_byte(x); // Write the Command
0129 8A82       871            mov     dpl,r2
012B 120000     872            lcall   _LCD_byte
012E            873   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:192: waitms(5); // Wait for 5ms
012E 900005     874            mov     dptr,#0x0005
0131 020000     875            ljmp    _waitms
0134            876   ;------------------------------------------------------------
0134            877   ;Allocation info for local variables in function 'LCD_4BIT'
0134            878   ;------------------------------------------------------------
0134            879   ;------------------------------------------------------------
0134            880   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:195: void LCD_4BIT(void) {
0134            881   ;        -----------------------------------------
0134            882   ;         function LCD_4BIT
0134            883   ;        -----------------------------------------
0134            884   _LCD_4BIT:
0134            885   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:196: LCD_E = 0; // Resting State of LCD Enable Pin is 0.
0134 C2A0       886            clr     _P2_0
0136            887   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:197: waitms(20); // Wait for 20ms
0136 900014     888            mov     dptr,#0x0014
0139 120000     889            lcall   _waitms
013C            890   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:200: WriteCommand(0x33); // Change to 8-bit Mode
013C 758233     891            mov     dpl,#0x33
013F 120000     892            lcall   _WriteCommand
0142            893   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:201: WriteCommand(0x33); // Change to 8-bit Mode
0142 758233     894            mov     dpl,#0x33
0145 120000     895            lcall   _WriteCommand
0148            896   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:202: WriteCommand(0x32); // Change to 4-bit Mode
0148 758232     897            mov     dpl,#0x32
014B 120000     898            lcall   _WriteCommand
014E            899   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:205: WriteCommand(0x28); // 4-bit, 2 Line, 5x7 Dots
014E 758228     900            mov     dpl,#0x28
0151 120000     901            lcall   _WriteCommand
0154            902   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:206: WriteCommand(0x0c); // Display On, No Cursor, No Blink
0154 75820C     903            mov     dpl,#0x0C
0157 120000     904            lcall   _WriteCommand
015A            905   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:207: WriteCommand(0x01); // Clear Screen Command (Takes Some Time)
015A 758201     906            mov     dpl,#0x01
015D 120000     907            lcall   _WriteCommand
0160            908   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:208: waitms(20); // Wait 20ms for Clear Screen Command to Finish
0160 900014     909            mov     dptr,#0x0014
0163 020000     910            ljmp    _waitms
0166            911   ;------------------------------------------------------------
0166            912   ;Allocation info for local variables in function 'LCDprint'
0166            913   ;------------------------------------------------------------
0166            914   ;line                      Allocated with name '_LCDprint_PARM_2'
0166            915   ;string                    Allocated to registers r2 r3 r4 
0166            916   ;j                         Allocated to registers r5 r6 
0166            917   ;------------------------------------------------------------
0166            918   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:211: void LCDprint(char * string, unsigned char line, bit clear) {
0166            919   ;        -----------------------------------------
0166            920   ;         function LCDprint
0166            921   ;        -----------------------------------------
0166            922   _LCDprint:
0166 AA82       923            mov     r2,dpl
0168 AB83       924            mov     r3,dph
016A ACF0       925            mov     r4,b
016C            926   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:214: WriteCommand(line == 2 ? 0xc0 : 0x80); // Set Cursor
016C 7402       927            mov     a,#0x02
016E B550B8     928            cjne    a,_LCDprint_PARM_2,L012013?
0171 7DC0       929            mov     r5,#0xC0
0173 8000       930            sjmp    L012014?
0175            931   L012013?:
0175 7D80       932            mov     r5,#0x80
0177            933   L012014?:
0177 8D82       934            mov     dpl,r5
0179 C002       935            push    ar2
017B C003       936            push    ar3
017D C004       937            push    ar4
017F 120000     938            lcall   _WriteCommand
0182            939   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:215: waitms(5); // Wait for 5ms
0182 900005     940            mov     dptr,#0x0005
0185 120000     941            lcall   _waitms
0188 D004       942            pop     ar4
018A D003       943            pop     ar3
018C D002       944            pop     ar2
018E            945   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:216: for (j = 0; string[j] != 0; j++) WriteData(string[j]); // Write Message
018E 7D00       946            mov     r5,#0x00
0190 7E00       947            mov     r6,#0x00
0192            948   L012003?:
0192 ED         949            mov     a,r5
0193 2A         950            add     a,r2
0194 FF         951            mov     r7,a
0195 EE         952            mov     a,r6
0196 3B         953            addc    a,r3
0197 F8         954            mov     r0,a
0198 8C01       955            mov     ar1,r4
019A 8F82       956            mov     dpl,r7
019C 8883       957            mov     dph,r0
019E 89F0       958            mov     b,r1
01A0 120000     959            lcall   __gptrget
01A3 FF         960            mov     r7,a
01A4 6000       961            jz      L012006?
01A6 8F82       962            mov     dpl,r7
01A8 C002       963            push    ar2
01AA C003       964            push    ar3
01AC C004       965            push    ar4
01AE C005       966            push    ar5
01B0 C006       967            push    ar6
01B2 120000     968            lcall   _WriteData
01B5 D006       969            pop     ar6
01B7 D005       970            pop     ar5
01B9 D004       971            pop     ar4
01BB D003       972            pop     ar3
01BD D002       973            pop     ar2
01BF 0D         974            inc     r5
01C0 BD0038     975            cjne    r5,#0x00,L012003?
01C3 0E         976            inc     r6
01C4 8000       977            sjmp    L012003?
01C6            978   L012006?:
01C6            979   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:217: if (clear) for (; j < CHARS_PER_LINE; j++) WriteData(' '); // Clear Rest of Line
01C6 30C0F8     980            jnb     _LCDprint_PARM_3,L012011?
01C9 8D02       981            mov     ar2,r5
01CB 8E03       982            mov     ar3,r6
01CD            983   L012007?:
01CD C3         984            clr     c
01CE EA         985            mov     a,r2
01CF 9410       986            subb    a,#0x10
01D1 EB         987            mov     a,r3
01D2 6480       988            xrl     a,#0x80
01D4 9480       989            subb    a,#0x80
01D6 5000       990            jnc     L012011?
01D8 758220     991            mov     dpl,#0x20
01DB C002       992            push    ar2
01DD C003       993            push    ar3
01DF 120000     994            lcall   _WriteData
01E2 D003       995            pop     ar3
01E4 D002       996            pop     ar2
01E6 0A         997            inc     r2
01E7 BA0038     998            cjne    r2,#0x00,L012007?
01EA 0B         999            inc     r3
01EB 8000      1000            sjmp    L012007?
01ED           1001   L012011?:
01ED 22        1002            ret
01EE           1003   ;------------------------------------------------------------
01EE           1004   ;Allocation info for local variables in function 'write_rx'
01EE           1005   ;------------------------------------------------------------
01EE           1006   ;len                       Allocated with name '_write_rx_PARM_2'
01EE           1007   ;buff                      Allocated with name '_write_rx_buff_1_47'
01EE           1008   ;j                         Allocated with name '_write_rx_sloc0_1_0'
01EE           1009   ;c                         Allocated to registers r3 
01EE           1010   ;sloc0                     Allocated with name '_write_rx_sloc0_1_0'
01EE           1011   ;------------------------------------------------------------
01EE           1012   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:220: int write_rx(char* buff, int len) {
01EE           1013   ;        -----------------------------------------
01EE           1014   ;         function write_rx
01EE           1015   ;        -----------------------------------------
01EE           1016   _write_rx:
01EE 858228    1017            mov     _write_rx_buff_1_47,dpl
01F1 858329    1018            mov     (_write_rx_buff_1_47 + 1),dph
01F4 85F02A    1019            mov     (_write_rx_buff_1_47 + 2),b
01F7           1020   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:224: for (j = 0; j < (len-1); j++) {
01F7 E4        1021            clr     a
01F8 F578      1022            mov     _write_rx_sloc0_1_0,a
01FA F579      1023            mov     (_write_rx_sloc0_1_0 + 1),a
01FC E500      1024            mov     a,_write_rx_PARM_2
01FE 24FF      1025            add     a,#0xff
0200 FF        1026            mov     r7,a
0201 E501      1027            mov     a,(_write_rx_PARM_2 + 1)
0203 34FF      1028            addc    a,#0xff
0205 F8        1029            mov     r0,a
0206 7900      1030            mov     r1,#0x00
0208 7A00      1031            mov     r2,#0x00
020A           1032   L013005?:
020A C3        1033            clr     c
020B E9        1034            mov     a,r1
020C 9F        1035            subb    a,r7
020D EA        1036            mov     a,r2
020E 6480      1037            xrl     a,#0x80
0210 88F0      1038            mov     b,r0
0212 63F080    1039            xrl     b,#0x80
0215 95F0      1040            subb    a,b
0217 5000      1041            jnc     L013008?
0219           1042   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:225: c = getchar();
0219 C002      1043            push    ar2
021B C007      1044            push    ar7
021D C000      1045            push    ar0
021F C001      1046            push    ar1
0221 120000    1047            lcall   _getchar
0224 AB82      1048            mov     r3,dpl
0226 D001      1049            pop     ar1
0228 D000      1050            pop     ar0
022A D007      1051            pop     ar7
022C D002      1052            pop     ar2
022E           1053   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:226: if ( (c == '\n') || (c == '\r') ) {
022E BB0A38    1054            cjne    r3,#0x0A,L013015?
0231 8000      1055            sjmp    L013001?
0233           1056   L013015?:
0233 BB0DB8    1057            cjne    r3,#0x0D,L013002?
0236           1058   L013001?:
0236           1059   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:227: buff[j] = 0;
0236 E578      1060            mov     a,_write_rx_sloc0_1_0
0238 2528      1061            add     a,_write_rx_buff_1_47
023A FC        1062            mov     r4,a
023B E579      1063            mov     a,(_write_rx_sloc0_1_0 + 1)
023D 3529      1064            addc    a,(_write_rx_buff_1_47 + 1)
023F FD        1065            mov     r5,a
0240 AE2A      1066            mov     r6,(_write_rx_buff_1_47 + 2)
0242 8C82      1067            mov     dpl,r4
0244 8D83      1068            mov     dph,r5
0246 8EF0      1069            mov     b,r6
0248 E4        1070            clr     a
0249 120000    1071            lcall   __gptrput
024C           1072   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:228: return j;
024C 857882    1073            mov     dpl,_write_rx_sloc0_1_0
024F 857983    1074            mov     dph,(_write_rx_sloc0_1_0 + 1)
0252 22        1075            ret
0253           1076   L013002?:
0253           1077   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:230: buff[j] = c;
0253 E9        1078            mov     a,r1
0254 2528      1079            add     a,_write_rx_buff_1_47
0256 FC        1080            mov     r4,a
0257 EA        1081            mov     a,r2
0258 3529      1082            addc    a,(_write_rx_buff_1_47 + 1)
025A FD        1083            mov     r5,a
025B AE2A      1084            mov     r6,(_write_rx_buff_1_47 + 2)
025D 8C82      1085            mov     dpl,r4
025F 8D83      1086            mov     dph,r5
0261 8EF0      1087            mov     b,r6
0263 EB        1088            mov     a,r3
0264 120000    1089            lcall   __gptrput
0267           1090   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:224: for (j = 0; j < (len-1); j++) {
0267 09        1091            inc     r1
0268 B90038    1092            cjne    r1,#0x00,L013018?
026B 0A        1093            inc     r2
026C           1094   L013018?:
026C 8978      1095            mov     _write_rx_sloc0_1_0,r1
026E 8A79      1096            mov     (_write_rx_sloc0_1_0 + 1),r2
0270 8000      1097            sjmp    L013005?
0272           1098   L013008?:
0272           1099   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:233: buff[j] = 0;
0272 E578      1100            mov     a,_write_rx_sloc0_1_0
0274 2528      1101            add     a,_write_rx_buff_1_47
0276 FA        1102            mov     r2,a
0277 E579      1103            mov     a,(_write_rx_sloc0_1_0 + 1)
0279 3529      1104            addc    a,(_write_rx_buff_1_47 + 1)
027B FB        1105            mov     r3,a
027C AC2A      1106            mov     r4,(_write_rx_buff_1_47 + 2)
027E 8A82      1107            mov     dpl,r2
0280 8B83      1108            mov     dph,r3
0282 8CF0      1109            mov     b,r4
0284 E4        1110            clr     a
0285 120000    1111            lcall   __gptrput
0288           1112   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:234: return len;
0288 850082    1113            mov     dpl,_write_rx_PARM_2
028B 850183    1114            mov     dph,(_write_rx_PARM_2 + 1)
028E 22        1115            ret
028F           1116   ;------------------------------------------------------------
028F           1117   ;Allocation info for local variables in function 'display_rx'
028F           1118   ;------------------------------------------------------------
028F           1119   ;len                       Allocated with name '_display_rx_PARM_2'
028F           1120   ;buff                      Allocated to registers r2 r3 r4 
028F           1121   ;------------------------------------------------------------
028F           1122   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:237: void display_rx(char* buff, int len) {
028F           1123   ;        -----------------------------------------
028F           1124   ;         function display_rx
028F           1125   ;        -----------------------------------------
028F           1126   _display_rx:
028F AA82      1127            mov     r2,dpl
0291 AB83      1128            mov     r3,dph
0293 ACF0      1129            mov     r4,b
0295           1130   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:238: printf("Type Intended Display in Line 2 (16 Char Max): ");
0295 C002      1131            push    ar2
0297 C003      1132            push    ar3
0299 C004      1133            push    ar4
029B 7478      1134            mov     a,#__str_1
029D C0E0      1135            push    acc
029F 74BF      1136            mov     a,#(__str_1 >> 8)
02A1 C0E0      1137            push    acc
02A3 7480      1138            mov     a,#0x80
02A5 C0E0      1139            push    acc
02A7 120000    1140            lcall   _printf
02AA 1581      1141            dec     sp
02AC 1581      1142            dec     sp
02AE 1581      1143            dec     sp
02B0 D004      1144            pop     ar4
02B2 D003      1145            pop     ar3
02B4 D002      1146            pop     ar2
02B6           1147   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:239: write_rx(buff, len);
02B6 85B000    1148            mov     _write_rx_PARM_2,_display_rx_PARM_2
02B9 85B101    1149            mov     (_write_rx_PARM_2 + 1),(_display_rx_PARM_2 + 1)
02BC 8A82      1150            mov     dpl,r2
02BE 8B83      1151            mov     dph,r3
02C0 8CF0      1152            mov     b,r4
02C2 C002      1153            push    ar2
02C4 C003      1154            push    ar3
02C6 C004      1155            push    ar4
02C8 120000    1156            lcall   _write_rx
02CB           1157   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:240: printf("\n");
02CB 74B8      1158            mov     a,#__str_2
02CD C0E0      1159            push    acc
02CF 74BF      1160            mov     a,#(__str_2 >> 8)
02D1 C0E0      1161            push    acc
02D3 7480      1162            mov     a,#0x80
02D5 C0E0      1163            push    acc
02D7 120000    1164            lcall   _printf
02DA 1581      1165            dec     sp
02DC 1581      1166            dec     sp
02DE 1581      1167            dec     sp
02E0 D004      1168            pop     ar4
02E2 D003      1169            pop     ar3
02E4 D002      1170            pop     ar2
02E6           1171   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:241: LCDprint(buff, 1, 1);
02E6 755001    1172            mov     _LCDprint_PARM_2,#0x01
02E9 D2C0      1173            setb    _LCDprint_PARM_3
02EB 8A82      1174            mov     dpl,r2
02ED 8B83      1175            mov     dph,r3
02EF 8CF0      1176            mov     b,r4
02F1 020000    1177            ljmp    _LCDprint
02F4           1178   ;------------------------------------------------------------
02F4           1179   ;Allocation info for local variables in function 'display_period'
02F4           1180   ;------------------------------------------------------------
02F4           1181   ;period                    Allocated to registers r2 r3 r4 r5 
02F4           1182   ;buff                      Allocated with name '_display_period_buff_1_55'
02F4           1183   ;------------------------------------------------------------
02F4           1184   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:244: void display_period(float period) {
02F4           1185   ;        -----------------------------------------
02F4           1186   ;         function display_period
02F4           1187   ;        -----------------------------------------
02F4           1188   _display_period:
02F4 AA82      1189            mov     r2,dpl
02F6 AB83      1190            mov     r3,dph
02F8 ACF0      1191            mov     r4,b
02FA FD        1192            mov     r5,a
02FB           1193   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:246: sprintf(buff, "T: %.3f s", period); // Format the Period Value
02FB C002      1194            push    ar2
02FD C003      1195            push    ar3
02FF C004      1196            push    ar4
0301 C005      1197            push    ar5
0303 7400      1198            mov     a,#__str_3
0305 C0E0      1199            push    acc
0307 74C0      1200            mov     a,#(__str_3 >> 8)
0309 C0E0      1201            push    acc
030B 7480      1202            mov     a,#0x80
030D C0E0      1203            push    acc
030F 74C8      1204            mov     a,#_display_period_buff_1_55
0311 C0E0      1205            push    acc
0313 74B6      1206            mov     a,#(_display_period_buff_1_55 >> 8)
0315 C0E0      1207            push    acc
0317 7440      1208            mov     a,#0x40
0319 C0E0      1209            push    acc
031B 120000    1210            lcall   _sprintf
031E E581      1211            mov     a,sp
0320 24F6      1212            add     a,#0xf6
0322 F581      1213            mov     sp,a
0324           1214   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:247: LCDprint(buff, 2, 1); // Write to LCD
0324 755002    1215            mov     _LCDprint_PARM_2,#0x02
0327 D2C0      1216            setb    _LCDprint_PARM_3
0329 90B6C8    1217            mov     dptr,#_display_period_buff_1_55
032C 75F040    1218            mov     b,#0x40
032F 020000    1219            ljmp    _LCDprint
0332           1220   ;------------------------------------------------------------
0332           1221   ;Allocation info for local variables in function 'display_freq_kHz'
0332           1222   ;------------------------------------------------------------
0332           1223   ;freq_kHz                  Allocated to registers r2 r3 r4 r5 
0332           1224   ;buff                      Allocated with name '_display_freq_kHz_buff_1_57'
0332           1225   ;------------------------------------------------------------
0332           1226   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:250: void display_freq_kHz(float freq_kHz) {
0332           1227   ;        -----------------------------------------
0332           1228   ;         function display_freq_kHz
0332           1229   ;        -----------------------------------------
0332           1230   _display_freq_kHz:
0332 AA82      1231            mov     r2,dpl
0334 AB83      1232            mov     r3,dph
0336 ACF0      1233            mov     r4,b
0338 FD        1234            mov     r5,a
0339           1235   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:252: sprintf(buff, "F: %.3f kHz", freq_kHz); // Format the Frequency Value
0339 C002      1236            push    ar2
033B C003      1237            push    ar3
033D C004      1238            push    ar4
033F C005      1239            push    ar5
0341 7480      1240            mov     a,#__str_4
0343 C0E0      1241            push    acc
0345 74C0      1242            mov     a,#(__str_4 >> 8)
0347 C0E0      1243            push    acc
0349 7480      1244            mov     a,#0x80
034B C0E0      1245            push    acc
034D 7418      1246            mov     a,#_display_freq_kHz_buff_1_57
034F C0E0      1247            push    acc
0351 74B7      1248            mov     a,#(_display_freq_kHz_buff_1_57 >> 8)
0353 C0E0      1249            push    acc
0355 7440      1250            mov     a,#0x40
0357 C0E0      1251            push    acc
0359 120000    1252            lcall   _sprintf
035C E581      1253            mov     a,sp
035E 24F6      1254            add     a,#0xf6
0360 F581      1255            mov     sp,a
0362           1256   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:253: LCDprint(buff, 1, 1); // Write to LCD
0362 755001    1257            mov     _LCDprint_PARM_2,#0x01
0365 D2C0      1258            setb    _LCDprint_PARM_3
0367 90B718    1259            mov     dptr,#_display_freq_kHz_buff_1_57
036A 75F040    1260            mov     b,#0x40
036D 020000    1261            ljmp    _LCDprint
0370           1262   ;------------------------------------------------------------
0370           1263   ;Allocation info for local variables in function 'display_capacitance_nF'
0370           1264   ;------------------------------------------------------------
0370           1265   ;capacitance_nF            Allocated to registers r2 r3 r4 r5 
0370           1266   ;buff                      Allocated with name '_display_capacitance_nF_buff_1_59'
0370           1267   ;------------------------------------------------------------
0370           1268   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:256: void display_capacitance_nF(float capacitance_nF) {
0370           1269   ;        -----------------------------------------
0370           1270   ;         function display_capacitance_nF
0370           1271   ;        -----------------------------------------
0370           1272   _display_capacitance_nF:
0370 AA82      1273            mov     r2,dpl
0372 AB83      1274            mov     r3,dph
0374 ACF0      1275            mov     r4,b
0376 FD        1276            mov     r5,a
0377           1277   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:259: sprintf(buff, "C: %.3f nF", capacitance_nF); // Format the Capacitance Value
0377 C002      1278            push    ar2
0379 C003      1279            push    ar3
037B C004      1280            push    ar4
037D C005      1281            push    ar5
037F 74C0      1282            mov     a,#__str_5
0381 C0E0      1283            push    acc
0383 74C0      1284            mov     a,#(__str_5 >> 8)
0385 C0E0      1285            push    acc
0387 7480      1286            mov     a,#0x80
0389 C0E0      1287            push    acc
038B 7478      1288            mov     a,#_display_capacitance_nF_buff_1_59
038D C0E0      1289            push    acc
038F 74B7      1290            mov     a,#(_display_capacitance_nF_buff_1_59 >> 8)
0391 C0E0      1291            push    acc
0393 7440      1292            mov     a,#0x40
0395 C0E0      1293            push    acc
0397 120000    1294            lcall   _sprintf
039A E581      1295            mov     a,sp
039C 24F6      1296            add     a,#0xf6
039E F581      1297            mov     sp,a
03A0           1298   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:260: LCDprint(buff, 2, 1); // Write to LCD
03A0 755002    1299            mov     _LCDprint_PARM_2,#0x02
03A3 D2C0      1300            setb    _LCDprint_PARM_3
03A5 90B778    1301            mov     dptr,#_display_capacitance_nF_buff_1_59
03A8 75F040    1302            mov     b,#0x40
03AB 020000    1303            ljmp    _LCDprint
03AE           1304   ;------------------------------------------------------------
03AE           1305   ;Allocation info for local variables in function 'calculate_period_s'
03AE           1306   ;------------------------------------------------------------
03AE           1307   ;TH0                       Allocated with name '_calculate_period_s_PARM_2'
03AE           1308   ;TL0                       Allocated with name '_calculate_period_s_PARM_3'
03AE           1309   ;overflow_count            Allocated to registers r2 r3 
03AE           1310   ;------------------------------------------------------------
03AE           1311   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:263: float calculate_period_s(int overflow_count, int TH0, int TL0) {
03AE           1312   ;        -----------------------------------------
03AE           1313   ;         function calculate_period_s
03AE           1314   ;        -----------------------------------------
03AE           1315   _calculate_period_s:
03AE           1316   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:264: return ((overflow_count * MAX_16_BIT)  + (TH0 * MAX_8_BIT) + TL0) * (12.0 / SYSCLK);
03AE 120000    1317            lcall   ___sint2fs
03B1 AA82      1318            mov     r2,dpl
03B3 AB83      1319            mov     r3,dph
03B5 ACF0      1320            mov     r4,b
03B7 FD        1321            mov     r5,a
03B8 C002      1322            push    ar2
03BA C003      1323            push    ar3
03BC C004      1324            push    ar4
03BE C005      1325            push    ar5
03C0 900000    1326            mov     dptr,#0x0000
03C3 75F080    1327            mov     b,#0x80
03C6 7447      1328            mov     a,#0x47
03C8 120000    1329            lcall   ___fsmul
03CB AA82      1330            mov     r2,dpl
03CD AB83      1331            mov     r3,dph
03CF ACF0      1332            mov     r4,b
03D1 FD        1333            mov     r5,a
03D2 E581      1334            mov     a,sp
03D4 24FC      1335            add     a,#0xfc
03D6 F581      1336            mov     sp,a
03D8 856082    1337            mov     dpl,_calculate_period_s_PARM_2
03DB 856183    1338            mov     dph,(_calculate_period_s_PARM_2 + 1)
03DE C002      1339            push    ar2
03E0 C003      1340            push    ar3
03E2 C004      1341            push    ar4
03E4 C005      1342            push    ar5
03E6 120000    1343            lcall   ___sint2fs
03E9 AE82      1344            mov     r6,dpl
03EB AF83      1345            mov     r7,dph
03ED A8F0      1346            mov     r0,b
03EF F9        1347            mov     r1,a
03F0 C006      1348            push    ar6
03F2 C007      1349            push    ar7
03F4 C000      1350            push    ar0
03F6 C001      1351            push    ar1
03F8 900000    1352            mov     dptr,#0x0000
03FB 75F080    1353            mov     b,#0x80
03FE 7443      1354            mov     a,#0x43
0400 120000    1355            lcall   ___fsmul
0403 AE82      1356            mov     r6,dpl
0405 AF83      1357            mov     r7,dph
0407 A8F0      1358            mov     r0,b
0409 F9        1359            mov     r1,a
040A E581      1360            mov     a,sp
040C 24FC      1361            add     a,#0xfc
040E F581      1362            mov     sp,a
0410 D005      1363            pop     ar5
0412 D004      1364            pop     ar4
0414 D003      1365            pop     ar3
0416 D002      1366            pop     ar2
0418 C006      1367            push    ar6
041A C007      1368            push    ar7
041C C000      1369            push    ar0
041E C001      1370            push    ar1
0420 8A82      1371            mov     dpl,r2
0422 8B83      1372            mov     dph,r3
0424 8CF0      1373            mov     b,r4
0426 ED        1374            mov     a,r5
0427 120000    1375            lcall   ___fsadd
042A AA82      1376            mov     r2,dpl
042C AB83      1377            mov     r3,dph
042E ACF0      1378            mov     r4,b
0430 FD        1379            mov     r5,a
0431 E581      1380            mov     a,sp
0433 24FC      1381            add     a,#0xfc
0435 F581      1382            mov     sp,a
0437 851082    1383            mov     dpl,_calculate_period_s_PARM_3
043A 851183    1384            mov     dph,(_calculate_period_s_PARM_3 + 1)
043D C002      1385            push    ar2
043F C003      1386            push    ar3
0441 C004      1387            push    ar4
0443 C005      1388            push    ar5
0445 120000    1389            lcall   ___sint2fs
0448 AE82      1390            mov     r6,dpl
044A AF83      1391            mov     r7,dph
044C A8F0      1392            mov     r0,b
044E F9        1393            mov     r1,a
044F D005      1394            pop     ar5
0451 D004      1395            pop     ar4
0453 D003      1396            pop     ar3
0455 D002      1397            pop     ar2
0457 C006      1398            push    ar6
0459 C007      1399            push    ar7
045B C000      1400            push    ar0
045D C001      1401            push    ar1
045F 8A82      1402            mov     dpl,r2
0461 8B83      1403            mov     dph,r3
0463 8CF0      1404            mov     b,r4
0465 ED        1405            mov     a,r5
0466 120000    1406            lcall   ___fsadd
0469 AA82      1407            mov     r2,dpl
046B AB83      1408            mov     r3,dph
046D ACF0      1409            mov     r4,b
046F FD        1410            mov     r5,a
0470 E581      1411            mov     a,sp
0472 24FC      1412            add     a,#0xfc
0474 F581      1413            mov     sp,a
0476 C002      1414            push    ar2
0478 C003      1415            push    ar3
047A C004      1416            push    ar4
047C C005      1417            push    ar5
047E 90F4FC    1418            mov     dptr,#0xF4FC
0481 75F032    1419            mov     b,#0x32
0484 7434      1420            mov     a,#0x34
0486 120000    1421            lcall   ___fsmul
0489 AA82      1422            mov     r2,dpl
048B AB83      1423            mov     r3,dph
048D ACF0      1424            mov     r4,b
048F FD        1425            mov     r5,a
0490 E581      1426            mov     a,sp
0492 24FC      1427            add     a,#0xfc
0494 F581      1428            mov     sp,a
0496 8A82      1429            mov     dpl,r2
0498 8B83      1430            mov     dph,r3
049A 8CF0      1431            mov     b,r4
049C ED        1432            mov     a,r5
049D 22        1433            ret
049E           1434   ;------------------------------------------------------------
049E           1435   ;Allocation info for local variables in function 'calculate_freq_Hz'
049E           1436   ;------------------------------------------------------------
049E           1437   ;period_s                  Allocated to registers r2 r3 r4 r5 
049E           1438   ;------------------------------------------------------------
049E           1439   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:267: float calculate_freq_Hz(float period_s) {
049E           1440   ;        -----------------------------------------
049E           1441   ;         function calculate_freq_Hz
049E           1442   ;        -----------------------------------------
049E           1443   _calculate_freq_Hz:
049E AA82      1444            mov     r2,dpl
04A0 AB83      1445            mov     r3,dph
04A2 ACF0      1446            mov     r4,b
04A4 FD        1447            mov     r5,a
04A5           1448   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:268: return (1.0 / period_s);
04A5 C002      1449            push    ar2
04A7 C003      1450            push    ar3
04A9 C004      1451            push    ar4
04AB C005      1452            push    ar5
04AD 900000    1453            mov     dptr,#0x0000
04B0 75F080    1454            mov     b,#0x80
04B3 743F      1455            mov     a,#0x3F
04B5 120000    1456            lcall   ___fsdiv
04B8 AA82      1457            mov     r2,dpl
04BA AB83      1458            mov     r3,dph
04BC ACF0      1459            mov     r4,b
04BE FD        1460            mov     r5,a
04BF E581      1461            mov     a,sp
04C1 24FC      1462            add     a,#0xfc
04C3 F581      1463            mov     sp,a
04C5 8A82      1464            mov     dpl,r2
04C7 8B83      1465            mov     dph,r3
04C9 8CF0      1466            mov     b,r4
04CB ED        1467            mov     a,r5
04CC 22        1468            ret
04CD           1469   ;------------------------------------------------------------
04CD           1470   ;Allocation info for local variables in function 'calculate_capacitance_nF'
04CD           1471   ;------------------------------------------------------------
04CD           1472   ;period_s                  Allocated to registers r2 r3 r4 r5 
04CD           1473   ;------------------------------------------------------------
04CD           1474   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:271: float calculate_capacitance_nF(float period_s) {
04CD           1475   ;        -----------------------------------------
04CD           1476   ;         function calculate_capacitance_nF
04CD           1477   ;        -----------------------------------------
04CD           1478   _calculate_capacitance_nF:
04CD AA82      1479            mov     r2,dpl
04CF AB83      1480            mov     r3,dph
04D1 ACF0      1481            mov     r4,b
04D3 FD        1482            mov     r5,a
04D4           1483   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:272: return (1.44 * period_s / (R_A + 2 * R_B)) * GIGA_MULTIPLIER; // Convert to Nanofarads
04D4 C002      1484            push    ar2
04D6 C003      1485            push    ar3
04D8 C004      1486            push    ar4
04DA C005      1487            push    ar5
04DC 9051EC    1488            mov     dptr,#0x51EC
04DF 75F0B8    1489            mov     b,#0xB8
04E2 743F      1490            mov     a,#0x3F
04E4 120000    1491            lcall   ___fsmul
04E7 AA82      1492            mov     r2,dpl
04E9 AB83      1493            mov     r3,dph
04EB ACF0      1494            mov     r4,b
04ED FD        1495            mov     r5,a
04EE E581      1496            mov     a,sp
04F0 24FC      1497            add     a,#0xfc
04F2 F581      1498            mov     sp,a
04F4 E4        1499            clr     a
04F5 C0E0      1500            push    acc
04F7 74A0      1501            mov     a,#0xA0
04F9 C0E0      1502            push    acc
04FB 748C      1503            mov     a,#0x8C
04FD C0E0      1504            push    acc
04FF 7445      1505            mov     a,#0x45
0501 C0E0      1506            push    acc
0503 8A82      1507            mov     dpl,r2
0505 8B83      1508            mov     dph,r3
0507 8CF0      1509            mov     b,r4
0509 ED        1510            mov     a,r5
050A 120000    1511            lcall   ___fsdiv
050D AA82      1512            mov     r2,dpl
050F AB83      1513            mov     r3,dph
0511 ACF0      1514            mov     r4,b
0513 FD        1515            mov     r5,a
0514 E581      1516            mov     a,sp
0516 24FC      1517            add     a,#0xfc
0518 F581      1518            mov     sp,a
051A C002      1519            push    ar2
051C C003      1520            push    ar3
051E C004      1521            push    ar4
0520 C005      1522            push    ar5
0522 906B28    1523            mov     dptr,#0x6B28
0525 75F06E    1524            mov     b,#0x6E
0528 744E      1525            mov     a,#0x4E
052A 120000    1526            lcall   ___fsmul
052D AA82      1527            mov     r2,dpl
052F AB83      1528            mov     r3,dph
0531 ACF0      1529            mov     r4,b
0533 FD        1530            mov     r5,a
0534 E581      1531            mov     a,sp
0536 24FC      1532            add     a,#0xfc
0538 F581      1533            mov     sp,a
053A 8A82      1534            mov     dpl,r2
053C 8B83      1535            mov     dph,r3
053E 8CF0      1536            mov     b,r4
0540 ED        1537            mov     a,r5
0541 22        1538            ret
0542           1539   ;------------------------------------------------------------
0542           1540   ;Allocation info for local variables in function 'main'
0542           1541   ;------------------------------------------------------------
0542           1542   ;period_s                  Allocated to registers r2 r3 r4 r5 
0542           1543   ;freq_Hz                   Allocated to registers r6 r7 r0 r1 
0542           1544   ;capacitance_nF            Allocated to registers r2 r3 r4 r5 
0542           1545   ;------------------------------------------------------------
0542           1546   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:275: void main(void) {
0542           1547   ;        -----------------------------------------
0542           1548   ;         function main
0542           1549   ;        -----------------------------------------
0542           1550   _main:
0542           1551   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:279: TIMER0_Init(); // Initialize Timer 0
0542 120000    1552            lcall   _TIMER0_Init
0545           1553   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:280: Serial_Init(); // Initialize Serial Communication
0545 120000    1554            lcall   _Serial_Init
0548           1555   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:281: LCD_4BIT();     // Configure the LCD
0548 120000    1556            lcall   _LCD_4BIT
054B           1557   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:288: );
054B           1558   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:287: __FILE__, __DATE__, __TIME__
054B           1559   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:286: "Compiled: %s, %s\n\r\n",
054B 7400      1560            mov     a,#__str_9
054D C0E0      1561            push    acc
054F 74C2      1562            mov     a,#(__str_9 >> 8)
0551 C0E0      1563            push    acc
0553 7480      1564            mov     a,#0x80
0555 C0E0      1565            push    acc
0557 7440      1566            mov     a,#__str_8
0559 C0E0      1567            push    acc
055B 74C2      1568            mov     a,#(__str_8 >> 8)
055D C0E0      1569            push    acc
055F 7480      1570            mov     a,#0x80
0561 C0E0      1571            push    acc
0563 7480      1572            mov     a,#__str_7
0565 C0E0      1573            push    acc
0567 74C2      1574            mov     a,#(__str_7 >> 8)
0569 C0E0      1575            push    acc
056B 7480      1576            mov     a,#0x80
056D C0E0      1577            push    acc
056F 74C0      1578            mov     a,#__str_6
0571 C0E0      1579            push    acc
0573 74C2      1580            mov     a,#(__str_6 >> 8)
0575 C0E0      1581            push    acc
0577 7480      1582            mov     a,#0x80
0579 C0E0      1583            push    acc
057B 120000    1584            lcall   _printf
057E E581      1585            mov     a,sp
0580 24F4      1586            add     a,#0xf4
0582 F581      1587            mov     sp,a
0584           1588   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:290: while(1) {
0584           1589   L021018?:
0584           1590   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:292: TL0 = 0;
0584 758A00    1591            mov     _TL0,#0x00
0587           1592   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:293: TH0 = 0;
0587 758C00    1593            mov     _TH0,#0x00
058A           1594   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:294: TF0 = 0;
058A C28D      1595            clr     _TF0
058C           1596   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:295: overflow_count = 0;
058C 759000    1597            mov     _overflow_count,#0x00
058F           1598   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:297: while (EFM8_SIGNAL != 0); // Wait for Signal == 0
058F           1599   L021001?:
058F 208140    1600            jb      _P0_1,L021001?
0592           1601   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:298: while (EFM8_SIGNAL != 1); // Wait for Signal == 1
0592           1602   L021004?:
0592 308180    1603            jnb     _P0_1,L021004?
0595           1604   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:300: TR0 = 1; // Start Timer
0595 D28C      1605            setb    _TR0
0597           1606   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:302: while (EFM8_SIGNAL != 0) { // Wait for Signal == 0
0597           1607   L021009?:
0597 308100    1608            jnb     _P0_1,L021014?
059A           1609   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:303: if (TF0 == 1) { // Did 16-Bit Timer Overflow?
059A           1610   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:304: TF0 = 0;
059A 108D40    1611            jbc     _TF0,L021035?
059D 8000      1612            sjmp    L021009?
059F           1613   L021035?:
059F           1614   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:305: overflow_count++;
059F 0590      1615            inc     _overflow_count
05A1           1616   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:308: while (EFM8_SIGNAL != 1) { // Wait for Signal == 1
05A1 8000      1617            sjmp    L021009?
05A3           1618   L021014?:
05A3 208180    1619            jb      _P0_1,L021016?
05A6           1620   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:309: if (TF0 == 1) { // Did 16-Bit Timer Overflow?
05A6           1621   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:310: TF0 = 0;
05A6 108DC0    1622            jbc     _TF0,L021037?
05A9 8000      1623            sjmp    L021014?
05AB           1624   L021037?:
05AB           1625   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:311: overflow_count++;
05AB 0590      1626            inc     _overflow_count
05AD 8000      1627            sjmp    L021014?
05AF           1628   L021016?:
05AF           1629   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:315: TR0 = 0; // Stop Timer 0. The 24-bit number [overflow_count-TH0-TL0] has the period!
05AF C28C      1630            clr     _TR0
05B1           1631   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:316: period_s = calculate_period_s(overflow_count, TH0, TL0);
05B1 AA90      1632            mov     r2,_overflow_count
05B3 7B00      1633            mov     r3,#0x00
05B5 858C60    1634            mov     _calculate_period_s_PARM_2,_TH0
05B8 756100    1635            mov     (_calculate_period_s_PARM_2 + 1),#0x00
05BB 858A10    1636            mov     _calculate_period_s_PARM_3,_TL0
05BE 751100    1637            mov     (_calculate_period_s_PARM_3 + 1),#0x00
05C1 8A82      1638            mov     dpl,r2
05C3 8B83      1639            mov     dph,r3
05C5 120000    1640            lcall   _calculate_period_s
05C8           1641   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:317: freq_Hz = calculate_freq_Hz(period_s);
05C8 AA82      1642            mov     r2,dpl
05CA AB83      1643            mov     r3,dph
05CC ACF0      1644            mov     r4,b
05CE FD        1645            mov     r5,a
05CF C002      1646            push    ar2
05D1 C003      1647            push    ar3
05D3 C004      1648            push    ar4
05D5 C005      1649            push    ar5
05D7 120000    1650            lcall   _calculate_freq_Hz
05DA AE82      1651            mov     r6,dpl
05DC AF83      1652            mov     r7,dph
05DE A8F0      1653            mov     r0,b
05E0 F9        1654            mov     r1,a
05E1 D005      1655            pop     ar5
05E3 D004      1656            pop     ar4
05E5 D003      1657            pop     ar3
05E7 D002      1658            pop     ar2
05E9           1659   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:318: capacitance_nF = calculate_capacitance_nF(period_s);
05E9 8A82      1660            mov     dpl,r2
05EB 8B83      1661            mov     dph,r3
05ED 8CF0      1662            mov     b,r4
05EF ED        1663            mov     a,r5
05F0 C006      1664            push    ar6
05F2 C007      1665            push    ar7
05F4 C000      1666            push    ar0
05F6 C001      1667            push    ar1
05F8 120000    1668            lcall   _calculate_capacitance_nF
05FB AA82      1669            mov     r2,dpl
05FD AB83      1670            mov     r3,dph
05FF ACF0      1671            mov     r4,b
0601 FD        1672            mov     r5,a
0602 D001      1673            pop     ar1
0604 D000      1674            pop     ar0
0606 D007      1675            pop     ar7
0608 D006      1676            pop     ar6
060A           1677   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:326: waitms(250); // Wait for 250 ms
060A 9000FA    1678            mov     dptr,#0x00FA
060D C002      1679            push    ar2
060F C003      1680            push    ar3
0611 C004      1681            push    ar4
0613 C005      1682            push    ar5
0615 C006      1683            push    ar6
0617 C007      1684            push    ar7
0619 C000      1685            push    ar0
061B C001      1686            push    ar1
061D 120000    1687            lcall   _waitms
0620 D001      1688            pop     ar1
0622 D000      1689            pop     ar0
0624 D007      1690            pop     ar7
0626 D006      1691            pop     ar6
0628           1692   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:327: printf("\nF(kHz) = %f\r\n", freq_Hz / KILO_MULTIPLIER); // Print Frequency to Serial Port
0628 E4        1693            clr     a
0629 C0E0      1694            push    acc
062B C0E0      1695            push    acc
062D 747A      1696            mov     a,#0x7A
062F C0E0      1697            push    acc
0631 7444      1698            mov     a,#0x44
0633 C0E0      1699            push    acc
0635 8E82      1700            mov     dpl,r6
0637 8F83      1701            mov     dph,r7
0639 88F0      1702            mov     b,r0
063B E9        1703            mov     a,r1
063C 120000    1704            lcall   ___fsdiv
063F AE82      1705            mov     r6,dpl
0641 AF83      1706            mov     r7,dph
0643 A8F0      1707            mov     r0,b
0645 F9        1708            mov     r1,a
0646 E581      1709            mov     a,sp
0648 24FC      1710            add     a,#0xfc
064A F581      1711            mov     sp,a
064C C006      1712            push    ar6
064E C007      1713            push    ar7
0650 C000      1714            push    ar0
0652 C001      1715            push    ar1
0654 C006      1716            push    ar6
0656 C007      1717            push    ar7
0658 C000      1718            push    ar0
065A C001      1719            push    ar1
065C 7400      1720            mov     a,#__str_10
065E C0E0      1721            push    acc
0660 74C5      1722            mov     a,#(__str_10 >> 8)
0662 C0E0      1723            push    acc
0664 7480      1724            mov     a,#0x80
0666 C0E0      1725            push    acc
0668 120000    1726            lcall   _printf
066B E581      1727            mov     a,sp
066D 24F9      1728            add     a,#0xf9
066F F581      1729            mov     sp,a
0671 D001      1730            pop     ar1
0673 D000      1731            pop     ar0
0675 D007      1732            pop     ar7
0677 D006      1733            pop     ar6
0679           1734   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:328: display_freq_kHz(freq_Hz / KILO_MULTIPLIER); // Display Frequency on LCD
0679 8E82      1735            mov     dpl,r6
067B 8F83      1736            mov     dph,r7
067D 88F0      1737            mov     b,r0
067F E9        1738            mov     a,r1
0680 120000    1739            lcall   _display_freq_kHz
0683           1740   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:330: waitms(250); // Wait for 250 ms
0683 9000FA    1741            mov     dptr,#0x00FA
0686 120000    1742            lcall   _waitms
0689 D005      1743            pop     ar5
068B D004      1744            pop     ar4
068D D003      1745            pop     ar3
068F D002      1746            pop     ar2
0691           1747   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:331: printf("\rC(nF) = %f\r\n", capacitance_nF); // Print Capacitance in Nanofarads
0691 C002      1748            push    ar2
0693 C003      1749            push    ar3
0695 C004      1750            push    ar4
0697 C005      1751            push    ar5
0699 C002      1752            push    ar2
069B C003      1753            push    ar3
069D C004      1754            push    ar4
069F C005      1755            push    ar5
06A1 7440      1756            mov     a,#__str_11
06A3 C0E0      1757            push    acc
06A5 74C5      1758            mov     a,#(__str_11 >> 8)
06A7 C0E0      1759            push    acc
06A9 7480      1760            mov     a,#0x80
06AB C0E0      1761            push    acc
06AD 120000    1762            lcall   _printf
06B0 E581      1763            mov     a,sp
06B2 24F9      1764            add     a,#0xf9
06B4 F581      1765            mov     sp,a
06B6 D005      1766            pop     ar5
06B8 D004      1767            pop     ar4
06BA D003      1768            pop     ar3
06BC D002      1769            pop     ar2
06BE           1770   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:334: display_capacitance_nF(capacitance_nF);
06BE 8A82      1771            mov     dpl,r2
06C0 8B83      1772            mov     dph,r3
06C2 8CF0      1773            mov     b,r4
06C4 ED        1774            mov     a,r5
06C5 120000    1775            lcall   _display_capacitance_nF
06C8 020000    1776            ljmp    L021018?
06CB           1777            rseg R_CSEG
06CB           1778   
0000           1779            rseg R_XINIT
0000           1780   
0000           1781            rseg R_CONST
0000           1782   __str_0:
0000 1B        1783            db 0x1B
0001 5B324A    1784            db '[2J'
0004 00        1785            db 0x00
0005           1786   __str_1:
0005 54797065  1787            db 'Type Intended Display in Line 2 (16 Char Max): '
     20496E74
     656E6465
     64204469
     73706C61
     7920696E
     204C696E
     65203220
     28313620
     43686172
     204D6178
     293A20
0034 00        1788            db 0x00
0035           1789   __str_2:
0035 0A        1790            db 0x0A
0036 00        1791            db 0x00
0037           1792   __str_3:
0037 543A2025  1793            db 'T: %.3f s'
     2E336620
     73
0040 00        1794            db 0x00
0041           1795   __str_4:
0041 463A2025  1796            db 'F: %.3f kHz'
     2E336620
     6B487A
004C 00        1797            db 0x00
004D           1798   __str_5:
004D 433A2025  1799            db 'C: %.3f nF'
     2E336620
     6E46
0057 00        1800            db 0x00
0058           1801   __str_6:
0058 0D        1802            db 0x0D
0059 45464D38  1803            db 'EFM8 Period measurement at pin P0.1 using Timer 0.'
     20506572
     696F6420
     6D656173
     7572656D
     656E7420
     61742070
     696E2050
     302E3120
     7573696E
     67205469
     6D657220
     302E
008B 0A        1804            db 0x0A
008C 46696C65  1805            db 'File: %s'
     3A202573
0094 0A        1806            db 0x0A
0095 436F6D70  1807            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
00A5 0A        1808            db 0x0A
00A6 0D        1809            db 0x0D
00A7 0A        1810            db 0x0A
00A8 00        1811            db 0x00
00A9           1812   __str_7:
00A9 433A      1813            db 'C:'
00AB 5C        1814            db 0x5C
00AC 4D756E74  1815            db 'Muntakim_Files'
     616B696D
     5F46696C
     6573
00BA 5C        1816            db 0x5C
00BB 5363686F  1817            db 'School'
     6F6C
00C1 5C        1818            db 0x5C
00C2 5363686F  1819            db 'School_Work'
     6F6C5F57
     6F726B
00CD 5C        1820            db 0x5C
00CE 456E6769  1821            db 'Engineering_Bachelors'
     6E656572
     696E675F
     42616368
     656C6F72
     73
00E3 5C        1822            db 0x5C
00E4 32        1823            db '2'
00E5 303233    1824            db '023'
00E8 5C        1825            db 0x5C
00E9 454C4543  1826            db 'ELEC_291'
     5F323931
00F1 5C        1827            db 0x5C
00F2 4C61625F  1828            db 'Lab_4'
     34
00F7 5C        1829            db 0x5C
00F8 454C4543  1830            db 'ELEC291_Lab4'
     3239315F
     4C616234
0104 5C        1831            db 0x5C
0105 4C616234  1832            db 'Lab4.c'
     2E63
010B 00        1833            db 0x00
010C           1834   __str_8:
010C 46656220  1835            db 'Feb 26 2024'
     32362032
     303234
0117 00        1836            db 0x00
0118           1837   __str_9:
0118 31393A31  1838            db '19:14:55'
     343A3535
0120 00        1839            db 0x00
0121           1840   __str_10:
0121 0A        1841            db 0x0A
0122 46286B48  1842            db 'F(kHz) = %f'
     7A29203D
     202566
012D 0D        1843            db 0x0D
012E 0A        1844            db 0x0A
012F 00        1845            db 0x00
0130           1846   __str_11:
0130 0D        1847            db 0x0D
0131 43286E46  1848            db 'C(nF) = %f'
     29203D20
     2566
013B 0D        1849            db 0x0D
013C 0A        1850            db 0x0A
013D 00        1851            db 0x00
013E           1852   
0003           1853            CSEG
0003           1854   
0003           1855   end
