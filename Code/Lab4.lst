0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Tue Feb 20 22:25:56 2024
0000              5   ;--------------------------------------------------------
                  5   $name Lab4
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _display_period
0000             29            public _display_rx
0000             30            public _write_rx
0000             31            public _LCDprint
0000             32            public _LCD_4BIT
0000             33            public _WriteCommand
0000             34            public _WriteData
0000             35            public _LCD_byte
0000             36            public _LCD_pulse
0000             37            public _Serial_Init
0000             38            public _TIMER0_Init
0000             39            public _waitms
0000             40            public _Timer3us
0000             41            public __c51_external_startup
0000             42            public _LCDprint_PARM_3
0000             43            public _display_rx_PARM_2
0000             44            public _write_rx_PARM_2
0000             45            public _LCDprint_PARM_2
0000             46            public _overflow_count
0000             47   ;--------------------------------------------------------
0000             48   ; Special Function Registers
0000             49   ;--------------------------------------------------------
0000             50   _ACC            DATA 0xe0
0000             51   _ADC0ASAH       DATA 0xb6
0000             52   _ADC0ASAL       DATA 0xb5
0000             53   _ADC0ASCF       DATA 0xa1
0000             54   _ADC0ASCT       DATA 0xc7
0000             55   _ADC0CF0        DATA 0xbc
0000             56   _ADC0CF1        DATA 0xb9
0000             57   _ADC0CF2        DATA 0xdf
0000             58   _ADC0CN0        DATA 0xe8
0000             59   _ADC0CN1        DATA 0xb2
0000             60   _ADC0CN2        DATA 0xb3
0000             61   _ADC0GTH        DATA 0xc4
0000             62   _ADC0GTL        DATA 0xc3
0000             63   _ADC0H          DATA 0xbe
0000             64   _ADC0L          DATA 0xbd
0000             65   _ADC0LTH        DATA 0xc6
0000             66   _ADC0LTL        DATA 0xc5
0000             67   _ADC0MX         DATA 0xbb
0000             68   _B              DATA 0xf0
0000             69   _CKCON0         DATA 0x8e
0000             70   _CKCON1         DATA 0xa6
0000             71   _CLEN0          DATA 0xc6
0000             72   _CLIE0          DATA 0xc7
0000             73   _CLIF0          DATA 0xe8
0000             74   _CLKSEL         DATA 0xa9
0000             75   _CLOUT0         DATA 0xd1
0000             76   _CLU0CF         DATA 0xb1
0000             77   _CLU0FN         DATA 0xaf
0000             78   _CLU0MX         DATA 0x84
0000             79   _CLU1CF         DATA 0xb3
0000             80   _CLU1FN         DATA 0xb2
0000             81   _CLU1MX         DATA 0x85
0000             82   _CLU2CF         DATA 0xb6
0000             83   _CLU2FN         DATA 0xb5
0000             84   _CLU2MX         DATA 0x91
0000             85   _CLU3CF         DATA 0xbf
0000             86   _CLU3FN         DATA 0xbe
0000             87   _CLU3MX         DATA 0xae
0000             88   _CMP0CN0        DATA 0x9b
0000             89   _CMP0CN1        DATA 0x99
0000             90   _CMP0MD         DATA 0x9d
0000             91   _CMP0MX         DATA 0x9f
0000             92   _CMP1CN0        DATA 0xbf
0000             93   _CMP1CN1        DATA 0xac
0000             94   _CMP1MD         DATA 0xab
0000             95   _CMP1MX         DATA 0xaa
0000             96   _CRC0CN0        DATA 0xce
0000             97   _CRC0CN1        DATA 0x86
0000             98   _CRC0CNT        DATA 0xd3
0000             99   _CRC0DAT        DATA 0xcb
0000            100   _CRC0FLIP       DATA 0xcf
0000            101   _CRC0IN         DATA 0xca
0000            102   _CRC0ST         DATA 0xd2
0000            103   _DAC0CF0        DATA 0x91
0000            104   _DAC0CF1        DATA 0x92
0000            105   _DAC0H          DATA 0x85
0000            106   _DAC0L          DATA 0x84
0000            107   _DAC1CF0        DATA 0x93
0000            108   _DAC1CF1        DATA 0x94
0000            109   _DAC1H          DATA 0x8a
0000            110   _DAC1L          DATA 0x89
0000            111   _DAC2CF0        DATA 0x95
0000            112   _DAC2CF1        DATA 0x96
0000            113   _DAC2H          DATA 0x8c
0000            114   _DAC2L          DATA 0x8b
0000            115   _DAC3CF0        DATA 0x9a
0000            116   _DAC3CF1        DATA 0x9c
0000            117   _DAC3H          DATA 0x8e
0000            118   _DAC3L          DATA 0x8d
0000            119   _DACGCF0        DATA 0x88
0000            120   _DACGCF1        DATA 0x98
0000            121   _DACGCF2        DATA 0xa2
0000            122   _DERIVID        DATA 0xad
0000            123   _DEVICEID       DATA 0xb5
0000            124   _DPH            DATA 0x83
0000            125   _DPL            DATA 0x82
0000            126   _EIE1           DATA 0xe6
0000            127   _EIE2           DATA 0xf3
0000            128   _EIP1           DATA 0xbb
0000            129   _EIP1H          DATA 0xee
0000            130   _EIP2           DATA 0xed
0000            131   _EIP2H          DATA 0xf6
0000            132   _EMI0CN         DATA 0xe7
0000            133   _FLKEY          DATA 0xb7
0000            134   _HFO0CAL        DATA 0xc7
0000            135   _HFO1CAL        DATA 0xd6
0000            136   _HFOCN          DATA 0xef
0000            137   _I2C0ADM        DATA 0xff
0000            138   _I2C0CN0        DATA 0xba
0000            139   _I2C0DIN        DATA 0xbc
0000            140   _I2C0DOUT       DATA 0xbb
0000            141   _I2C0FCN0       DATA 0xad
0000            142   _I2C0FCN1       DATA 0xab
0000            143   _I2C0FCT        DATA 0xf5
0000            144   _I2C0SLAD       DATA 0xbd
0000            145   _I2C0STAT       DATA 0xb9
0000            146   _IE             DATA 0xa8
0000            147   _IP             DATA 0xb8
0000            148   _IPH            DATA 0xf2
0000            149   _IT01CF         DATA 0xe4
0000            150   _LFO0CN         DATA 0xb1
0000            151   _P0             DATA 0x80
0000            152   _P0MASK         DATA 0xfe
0000            153   _P0MAT          DATA 0xfd
0000            154   _P0MDIN         DATA 0xf1
0000            155   _P0MDOUT        DATA 0xa4
0000            156   _P0SKIP         DATA 0xd4
0000            157   _P1             DATA 0x90
0000            158   _P1MASK         DATA 0xee
0000            159   _P1MAT          DATA 0xed
0000            160   _P1MDIN         DATA 0xf2
0000            161   _P1MDOUT        DATA 0xa5
0000            162   _P1SKIP         DATA 0xd5
0000            163   _P2             DATA 0xa0
0000            164   _P2MASK         DATA 0xfc
0000            165   _P2MAT          DATA 0xfb
0000            166   _P2MDIN         DATA 0xf3
0000            167   _P2MDOUT        DATA 0xa6
0000            168   _P2SKIP         DATA 0xcc
0000            169   _P3             DATA 0xb0
0000            170   _P3MDIN         DATA 0xf4
0000            171   _P3MDOUT        DATA 0x9c
0000            172   _PCA0CENT       DATA 0x9e
0000            173   _PCA0CLR        DATA 0x9c
0000            174   _PCA0CN0        DATA 0xd8
0000            175   _PCA0CPH0       DATA 0xfc
0000            176   _PCA0CPH1       DATA 0xea
0000            177   _PCA0CPH2       DATA 0xec
0000            178   _PCA0CPH3       DATA 0xf5
0000            179   _PCA0CPH4       DATA 0x85
0000            180   _PCA0CPH5       DATA 0xde
0000            181   _PCA0CPL0       DATA 0xfb
0000            182   _PCA0CPL1       DATA 0xe9
0000            183   _PCA0CPL2       DATA 0xeb
0000            184   _PCA0CPL3       DATA 0xf4
0000            185   _PCA0CPL4       DATA 0x84
0000            186   _PCA0CPL5       DATA 0xdd
0000            187   _PCA0CPM0       DATA 0xda
0000            188   _PCA0CPM1       DATA 0xdb
0000            189   _PCA0CPM2       DATA 0xdc
0000            190   _PCA0CPM3       DATA 0xae
0000            191   _PCA0CPM4       DATA 0xaf
0000            192   _PCA0CPM5       DATA 0xcc
0000            193   _PCA0H          DATA 0xfa
0000            194   _PCA0L          DATA 0xf9
0000            195   _PCA0MD         DATA 0xd9
0000            196   _PCA0POL        DATA 0x96
0000            197   _PCA0PWM        DATA 0xf7
0000            198   _PCON0          DATA 0x87
0000            199   _PCON1          DATA 0xcd
0000            200   _PFE0CN         DATA 0xc1
0000            201   _PRTDRV         DATA 0xf6
0000            202   _PSCTL          DATA 0x8f
0000            203   _PSTAT0         DATA 0xaa
0000            204   _PSW            DATA 0xd0
0000            205   _REF0CN         DATA 0xd1
0000            206   _REG0CN         DATA 0xc9
0000            207   _REVID          DATA 0xb6
0000            208   _RSTSRC         DATA 0xef
0000            209   _SBCON1         DATA 0x94
0000            210   _SBRLH1         DATA 0x96
0000            211   _SBRLL1         DATA 0x95
0000            212   _SBUF           DATA 0x99
0000            213   _SBUF0          DATA 0x99
0000            214   _SBUF1          DATA 0x92
0000            215   _SCON           DATA 0x98
0000            216   _SCON0          DATA 0x98
0000            217   _SCON1          DATA 0xc8
0000            218   _SFRPAGE        DATA 0xa7
0000            219   _SFRPGCN        DATA 0xbc
0000            220   _SFRSTACK       DATA 0xd7
0000            221   _SMB0ADM        DATA 0xd6
0000            222   _SMB0ADR        DATA 0xd7
0000            223   _SMB0CF         DATA 0xc1
0000            224   _SMB0CN0        DATA 0xc0
0000            225   _SMB0DAT        DATA 0xc2
0000            226   _SMB0FCN0       DATA 0xc3
0000            227   _SMB0FCN1       DATA 0xc4
0000            228   _SMB0FCT        DATA 0xef
0000            229   _SMB0RXLN       DATA 0xc5
0000            230   _SMB0TC         DATA 0xac
0000            231   _SMOD1          DATA 0x93
0000            232   _SP             DATA 0x81
0000            233   _SPI0CFG        DATA 0xa1
0000            234   _SPI0CKR        DATA 0xa2
0000            235   _SPI0CN0        DATA 0xf8
0000            236   _SPI0DAT        DATA 0xa3
0000            237   _SPI0FCN0       DATA 0x9a
0000            238   _SPI0FCN1       DATA 0x9b
0000            239   _SPI0FCT        DATA 0xf7
0000            240   _SPI0PCF        DATA 0xdf
0000            241   _TCON           DATA 0x88
0000            242   _TH0            DATA 0x8c
0000            243   _TH1            DATA 0x8d
0000            244   _TL0            DATA 0x8a
0000            245   _TL1            DATA 0x8b
0000            246   _TMOD           DATA 0x89
0000            247   _TMR2CN0        DATA 0xc8
0000            248   _TMR2CN1        DATA 0xfd
0000            249   _TMR2H          DATA 0xcf
0000            250   _TMR2L          DATA 0xce
0000            251   _TMR2RLH        DATA 0xcb
0000            252   _TMR2RLL        DATA 0xca
0000            253   _TMR3CN0        DATA 0x91
0000            254   _TMR3CN1        DATA 0xfe
0000            255   _TMR3H          DATA 0x95
0000            256   _TMR3L          DATA 0x94
0000            257   _TMR3RLH        DATA 0x93
0000            258   _TMR3RLL        DATA 0x92
0000            259   _TMR4CN0        DATA 0x98
0000            260   _TMR4CN1        DATA 0xff
0000            261   _TMR4H          DATA 0xa5
0000            262   _TMR4L          DATA 0xa4
0000            263   _TMR4RLH        DATA 0xa3
0000            264   _TMR4RLL        DATA 0xa2
0000            265   _TMR5CN0        DATA 0xc0
0000            266   _TMR5CN1        DATA 0xf1
0000            267   _TMR5H          DATA 0xd5
0000            268   _TMR5L          DATA 0xd4
0000            269   _TMR5RLH        DATA 0xd3
0000            270   _TMR5RLL        DATA 0xd2
0000            271   _UART0PCF       DATA 0xd9
0000            272   _UART1FCN0      DATA 0x9d
0000            273   _UART1FCN1      DATA 0xd8
0000            274   _UART1FCT       DATA 0xfa
0000            275   _UART1LIN       DATA 0x9e
0000            276   _UART1PCF       DATA 0xda
0000            277   _VDM0CN         DATA 0xff
0000            278   _WDTCN          DATA 0x97
0000            279   _XBR0           DATA 0xe1
0000            280   _XBR1           DATA 0xe2
0000            281   _XBR2           DATA 0xe3
0000            282   _XOSC0CN        DATA 0x86
0000            283   _DPTR           DATA 0x8382
0000            284   _TMR2RL         DATA 0xcbca
0000            285   _TMR3RL         DATA 0x9392
0000            286   _TMR4RL         DATA 0xa3a2
0000            287   _TMR5RL         DATA 0xd3d2
0000            288   _TMR0           DATA 0x8c8a
0000            289   _TMR1           DATA 0x8d8b
0000            290   _TMR2           DATA 0xcfce
0000            291   _TMR3           DATA 0x9594
0000            292   _TMR4           DATA 0xa5a4
0000            293   _TMR5           DATA 0xd5d4
0000            294   _SBRL1          DATA 0x9695
0000            295   _PCA0           DATA 0xfaf9
0000            296   _PCA0CP0        DATA 0xfcfb
0000            297   _PCA0CP1        DATA 0xeae9
0000            298   _PCA0CP2        DATA 0xeceb
0000            299   _PCA0CP3        DATA 0xf5f4
0000            300   _PCA0CP4        DATA 0x8584
0000            301   _PCA0CP5        DATA 0xdedd
0000            302   _ADC0ASA        DATA 0xb6b5
0000            303   _ADC0GT         DATA 0xc4c3
0000            304   _ADC0           DATA 0xbebd
0000            305   _ADC0LT         DATA 0xc6c5
0000            306   _DAC0           DATA 0x8584
0000            307   _DAC1           DATA 0x8a89
0000            308   _DAC2           DATA 0x8c8b
0000            309   _DAC3           DATA 0x8e8d
0000            310   ;--------------------------------------------------------
0000            311   ; special function bits
0000            312   ;--------------------------------------------------------
0000            313   _ACC_0          BIT 0xe0
0000            314   _ACC_1          BIT 0xe1
0000            315   _ACC_2          BIT 0xe2
0000            316   _ACC_3          BIT 0xe3
0000            317   _ACC_4          BIT 0xe4
0000            318   _ACC_5          BIT 0xe5
0000            319   _ACC_6          BIT 0xe6
0000            320   _ACC_7          BIT 0xe7
0000            321   _TEMPE          BIT 0xe8
0000            322   _ADGN0          BIT 0xe9
0000            323   _ADGN1          BIT 0xea
0000            324   _ADWINT         BIT 0xeb
0000            325   _ADBUSY         BIT 0xec
0000            326   _ADINT          BIT 0xed
0000            327   _IPOEN          BIT 0xee
0000            328   _ADEN           BIT 0xef
0000            329   _B_0            BIT 0xf0
0000            330   _B_1            BIT 0xf1
0000            331   _B_2            BIT 0xf2
0000            332   _B_3            BIT 0xf3
0000            333   _B_4            BIT 0xf4
0000            334   _B_5            BIT 0xf5
0000            335   _B_6            BIT 0xf6
0000            336   _B_7            BIT 0xf7
0000            337   _C0FIF          BIT 0xe8
0000            338   _C0RIF          BIT 0xe9
0000            339   _C1FIF          BIT 0xea
0000            340   _C1RIF          BIT 0xeb
0000            341   _C2FIF          BIT 0xec
0000            342   _C2RIF          BIT 0xed
0000            343   _C3FIF          BIT 0xee
0000            344   _C3RIF          BIT 0xef
0000            345   _D1SRC0         BIT 0x88
0000            346   _D1SRC1         BIT 0x89
0000            347   _D1AMEN         BIT 0x8a
0000            348   _D01REFSL       BIT 0x8b
0000            349   _D3SRC0         BIT 0x8c
0000            350   _D3SRC1         BIT 0x8d
0000            351   _D3AMEN         BIT 0x8e
0000            352   _D23REFSL       BIT 0x8f
0000            353   _D0UDIS         BIT 0x98
0000            354   _D1UDIS         BIT 0x99
0000            355   _D2UDIS         BIT 0x9a
0000            356   _D3UDIS         BIT 0x9b
0000            357   _EX0            BIT 0xa8
0000            358   _ET0            BIT 0xa9
0000            359   _EX1            BIT 0xaa
0000            360   _ET1            BIT 0xab
0000            361   _ES0            BIT 0xac
0000            362   _ET2            BIT 0xad
0000            363   _ESPI0          BIT 0xae
0000            364   _EA             BIT 0xaf
0000            365   _PX0            BIT 0xb8
0000            366   _PT0            BIT 0xb9
0000            367   _PX1            BIT 0xba
0000            368   _PT1            BIT 0xbb
0000            369   _PS0            BIT 0xbc
0000            370   _PT2            BIT 0xbd
0000            371   _PSPI0          BIT 0xbe
0000            372   _P0_0           BIT 0x80
0000            373   _P0_1           BIT 0x81
0000            374   _P0_2           BIT 0x82
0000            375   _P0_3           BIT 0x83
0000            376   _P0_4           BIT 0x84
0000            377   _P0_5           BIT 0x85
0000            378   _P0_6           BIT 0x86
0000            379   _P0_7           BIT 0x87
0000            380   _P1_0           BIT 0x90
0000            381   _P1_1           BIT 0x91
0000            382   _P1_2           BIT 0x92
0000            383   _P1_3           BIT 0x93
0000            384   _P1_4           BIT 0x94
0000            385   _P1_5           BIT 0x95
0000            386   _P1_6           BIT 0x96
0000            387   _P1_7           BIT 0x97
0000            388   _P2_0           BIT 0xa0
0000            389   _P2_1           BIT 0xa1
0000            390   _P2_2           BIT 0xa2
0000            391   _P2_3           BIT 0xa3
0000            392   _P2_4           BIT 0xa4
0000            393   _P2_5           BIT 0xa5
0000            394   _P2_6           BIT 0xa6
0000            395   _P3_0           BIT 0xb0
0000            396   _P3_1           BIT 0xb1
0000            397   _P3_2           BIT 0xb2
0000            398   _P3_3           BIT 0xb3
0000            399   _P3_4           BIT 0xb4
0000            400   _P3_7           BIT 0xb7
0000            401   _CCF0           BIT 0xd8
0000            402   _CCF1           BIT 0xd9
0000            403   _CCF2           BIT 0xda
0000            404   _CCF3           BIT 0xdb
0000            405   _CCF4           BIT 0xdc
0000            406   _CCF5           BIT 0xdd
0000            407   _CR             BIT 0xde
0000            408   _CF             BIT 0xdf
0000            409   _PARITY         BIT 0xd0
0000            410   _F1             BIT 0xd1
0000            411   _OV             BIT 0xd2
0000            412   _RS0            BIT 0xd3
0000            413   _RS1            BIT 0xd4
0000            414   _F0             BIT 0xd5
0000            415   _AC             BIT 0xd6
0000            416   _CY             BIT 0xd7
0000            417   _RI             BIT 0x98
0000            418   _TI             BIT 0x99
0000            419   _RB8            BIT 0x9a
0000            420   _TB8            BIT 0x9b
0000            421   _REN            BIT 0x9c
0000            422   _CE             BIT 0x9d
0000            423   _SMODE          BIT 0x9e
0000            424   _RI1            BIT 0xc8
0000            425   _TI1            BIT 0xc9
0000            426   _RBX1           BIT 0xca
0000            427   _TBX1           BIT 0xcb
0000            428   _REN1           BIT 0xcc
0000            429   _PERR1          BIT 0xcd
0000            430   _OVR1           BIT 0xce
0000            431   _SI             BIT 0xc0
0000            432   _ACK            BIT 0xc1
0000            433   _ARBLOST        BIT 0xc2
0000            434   _ACKRQ          BIT 0xc3
0000            435   _STO            BIT 0xc4
0000            436   _STA            BIT 0xc5
0000            437   _TXMODE         BIT 0xc6
0000            438   _MASTER         BIT 0xc7
0000            439   _SPIEN          BIT 0xf8
0000            440   _TXNF           BIT 0xf9
0000            441   _NSSMD0         BIT 0xfa
0000            442   _NSSMD1         BIT 0xfb
0000            443   _RXOVRN         BIT 0xfc
0000            444   _MODF           BIT 0xfd
0000            445   _WCOL           BIT 0xfe
0000            446   _SPIF           BIT 0xff
0000            447   _IT0            BIT 0x88
0000            448   _IE0            BIT 0x89
0000            449   _IT1            BIT 0x8a
0000            450   _IE1            BIT 0x8b
0000            451   _TR0            BIT 0x8c
0000            452   _TF0            BIT 0x8d
0000            453   _TR1            BIT 0x8e
0000            454   _TF1            BIT 0x8f
0000            455   _T2XCLK0        BIT 0xc8
0000            456   _T2XCLK1        BIT 0xc9
0000            457   _TR2            BIT 0xca
0000            458   _T2SPLIT        BIT 0xcb
0000            459   _TF2CEN         BIT 0xcc
0000            460   _TF2LEN         BIT 0xcd
0000            461   _TF2L           BIT 0xce
0000            462   _TF2H           BIT 0xcf
0000            463   _T4XCLK0        BIT 0x98
0000            464   _T4XCLK1        BIT 0x99
0000            465   _TR4            BIT 0x9a
0000            466   _T4SPLIT        BIT 0x9b
0000            467   _TF4CEN         BIT 0x9c
0000            468   _TF4LEN         BIT 0x9d
0000            469   _TF4L           BIT 0x9e
0000            470   _TF4H           BIT 0x9f
0000            471   _T5XCLK0        BIT 0xc0
0000            472   _T5XCLK1        BIT 0xc1
0000            473   _TR5            BIT 0xc2
0000            474   _T5SPLIT        BIT 0xc3
0000            475   _TF5CEN         BIT 0xc4
0000            476   _TF5LEN         BIT 0xc5
0000            477   _TF5L           BIT 0xc6
0000            478   _TF5H           BIT 0xc7
0000            479   _RIE            BIT 0xd8
0000            480   _RXTO0          BIT 0xd9
0000            481   _RXTO1          BIT 0xda
0000            482   _RFRQ           BIT 0xdb
0000            483   _TIE            BIT 0xdc
0000            484   _TXHOLD         BIT 0xdd
0000            485   _TXNF1          BIT 0xde
0000            486   _TFRQ           BIT 0xdf
0000            487   ;--------------------------------------------------------
0000            488   ; overlayable register banks
0000            489   ;--------------------------------------------------------
0000            490            rbank0 segment data overlay
0000            491   ;--------------------------------------------------------
0000            492   ; internal ram data
0000            493   ;--------------------------------------------------------
0000            494            rseg R_DSEG
0000            495   _overflow_count:
0000            496            ds 1
0001            497   _LCDprint_PARM_2:
0001            498            ds 1
0002            499   _write_rx_PARM_2:
0002            500            ds 2
0004            501   _write_rx_buff_1_47:
0004            502            ds 3
0007            503   _write_rx_sloc0_1_0:
0007            504            ds 2
0009            505   _display_rx_PARM_2:
0009            506            ds 2
000B            507   _display_period_buff_1_55:
000B            508            ds 16
001B            509   _main_rx_buff_1_57:
001B            510            ds 16
002B            511   ;--------------------------------------------------------
002B            512   ; overlayable items in internal ram 
002B            513   ;--------------------------------------------------------
0000            514            rseg    R_OSEG
0000            515   ;--------------------------------------------------------
0000            516   ; indirectly addressable internal ram data
0000            517   ;--------------------------------------------------------
0000            518            rseg R_ISEG
0000            519   ;--------------------------------------------------------
0000            520   ; absolute internal ram data
0000            521   ;--------------------------------------------------------
0000            522            DSEG
0000            523   ;--------------------------------------------------------
0000            524   ; bit data
0000            525   ;--------------------------------------------------------
0000            526            rseg R_BSEG
0000            527   _LCDprint_PARM_3:
0000            528            DBIT    1
0001            529   ;--------------------------------------------------------
0001            530   ; paged external ram data
0001            531   ;--------------------------------------------------------
0000            532            rseg R_PSEG
0000            533   ;--------------------------------------------------------
0000            534   ; external ram data
0000            535   ;--------------------------------------------------------
0000            536            rseg R_XSEG
0000            537   ;--------------------------------------------------------
0000            538   ; absolute external ram data
0000            539   ;--------------------------------------------------------
0000            540            XSEG
0000            541   ;--------------------------------------------------------
0000            542   ; external initialized ram data
0000            543   ;--------------------------------------------------------
0000            544            rseg R_IXSEG
0000            545            rseg R_HOME
0000            546            rseg R_GSINIT
0000            547            rseg R_CSEG
0000            548   ;--------------------------------------------------------
0000            549   ; Reset entry point and interrupt vectors
0000            550   ;--------------------------------------------------------
0000            551            CSEG at 0x0000
0000 020000     552            ljmp    _crt0
0003            553   ;--------------------------------------------------------
0003            554   ; global & static initialisations
0003            555   ;--------------------------------------------------------
0000            556            rseg R_HOME
0000            557            rseg R_GSINIT
0000            558            rseg R_GSINIT
0000            559   ;--------------------------------------------------------
0000            560   ; data variables initialization
0000            561   ;--------------------------------------------------------
0000            562            rseg R_DINIT
0000            563            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            564   ;--------------------------------------------------------
0000            565   ; code
0000            566   ;--------------------------------------------------------
0000            567            rseg R_CSEG
0000            568   ;------------------------------------------------------------
0000            569   ;Allocation info for local variables in function '_c51_external_startup'
0000            570   ;------------------------------------------------------------
0000            571   ;------------------------------------------------------------
0000            572   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:28: char _c51_external_startup(void) {
0000            573   ;        -----------------------------------------
0000            574   ;         function _c51_external_startup
0000            575   ;        -----------------------------------------
0000            576   __c51_external_startup:
0000            577            using   0
0000            578   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:30: SFRPAGE = 0x00;
0000 75A700     579            mov     _SFRPAGE,#0x00
0003            580   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:31: WDTCN = 0xDE; // First Key
0003 7597DE     581            mov     _WDTCN,#0xDE
0006            582   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:32: WDTCN = 0xAD; // Second Key
0006 7597AD     583            mov     _WDTCN,#0xAD
0009            584   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:34: VDM0CN |= 0x80;
0009 43FF80     585            orl     _VDM0CN,#0x80
000C            586   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:35: RSTSRC = 0x02;
000C 75EF02     587            mov     _RSTSRC,#0x02
000F            588   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:43: SFRPAGE = 0x10;
000F 75A710     589            mov     _SFRPAGE,#0x10
0012            590   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:44: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     591            mov     _PFE0CN,#0x20
0015            592   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:45: SFRPAGE = 0x00;
0015 75A700     593            mov     _SFRPAGE,#0x00
0018            594   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:67: CLKSEL = 0x00;
0018 75A900     595            mov     _CLKSEL,#0x00
001B            596   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:68: CLKSEL = 0x00;
001B 75A900     597            mov     _CLKSEL,#0x00
001E            598   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:69: while ((CLKSEL & 0x80) == 0);
001E            599   L002001?:
001E E5A9       600            mov     a,_CLKSEL
0020 30E768     601            jnb     acc.7,L002001?
0023            602   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:70: CLKSEL = 0x03;
0023 75A903     603            mov     _CLKSEL,#0x03
0026            604   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:71: CLKSEL = 0x03;
0026 75A903     605            mov     _CLKSEL,#0x03
0029            606   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:72: while ((CLKSEL & 0x80) == 0);
0029            607   L002004?:
0029 E5A9       608            mov     a,_CLKSEL
002B 30E7E8     609            jnb     acc.7,L002004?
002E            610   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:77: P0MDOUT |= 0x10; // Enable UART0 TX As Push-Pull Output
002E 43A410     611            orl     _P0MDOUT,#0x10
0031            612   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:78: XBR0     = 0x01; // Enable UART0 on P0.4 (TX) and P0.5 (RX)
0031 75E101     613            mov     _XBR0,#0x01
0034            614   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:79: XBR1     = 0X00; // Enable T0 on P0.0
0034 75E200     615            mov     _XBR1,#0x00
0037            616   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:80: XBR2     = 0x40; // Enable Crossbar and Weak Pull-Ups
0037 75E340     617            mov     _XBR2,#0x40
003A            618   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:87: SCON0 = 0x10;
003A 759810     619            mov     _SCON0,#0x10
003D            620   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:88: CKCON0 |= 0b_0000_0000 ; // Timer 1 Uses SYSCLK / 12
003D 858E8E     621            mov     _CKCON0,_CKCON0
0040            622   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:89: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L)); // Set Timer1 Reload Value, Initial Value
0040 758DE6     623            mov     _TH1,#0xE6
0043            624   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:90: TL1 = TH1;          // Init Timer1
0043 858D8B     625            mov     _TL1,_TH1
0046            626   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:91: TMOD &= ~0xf0;  // TMOD: Timer 1 in 8-bit auto-reload
0046 53890F     627            anl     _TMOD,#0x0F
0049            628   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:92: TMOD |=  0x20;
0049 438920     629            orl     _TMOD,#0x20
004C            630   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:93: TR1 = 1; // Start Timer1
004C D28E       631            setb    _TR1
004E            632   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:94: TI = 1;  // Indicate TX0 Ready
004E D299       633            setb    _TI
0050            634   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:96: return 0;
0050 758200     635            mov     dpl,#0x00
0053 22         636            ret
0054            637   ;------------------------------------------------------------
0054            638   ;Allocation info for local variables in function 'Timer3us'
0054            639   ;------------------------------------------------------------
0054            640   ;us                        Allocated to registers r2 
0054            641   ;i                         Allocated to registers r3 
0054            642   ;------------------------------------------------------------
0054            643   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:102: void Timer3us(unsigned char us) {
0054            644   ;        -----------------------------------------
0054            645   ;         function Timer3us
0054            646   ;        -----------------------------------------
0054            647   _Timer3us:
0054 AA82       648            mov     r2,dpl
0056            649   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:106: CKCON0 |= 0b_0100_0000;
0056 438E40     650            orl     _CKCON0,#0x40
0059            651   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:108: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to Overflow in 1us
0059 7592B8     652            mov     _TMR3RL,#0xB8
005C 7593FF     653            mov     (_TMR3RL >> 8),#0xFF
005F            654   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:109: TMR3 = TMR3RL;                 // Initialize Timer3 for First Overflow
005F 859294     655            mov     _TMR3,_TMR3RL
0062 859395     656            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0065            657   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:111: TMR3CN0 = 0x04;                 // Start Timer3 and Clear Overflow Flag
0065 759104     658            mov     _TMR3CN0,#0x04
0068            659   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:112: for (i = 0; i < us; i++) {      // Count Overflows (#Microseconds)
0068 7B00       660            mov     r3,#0x00
006A            661   L003004?:
006A C3         662            clr     c
006B EB         663            mov     a,r3
006C 9A         664            subb    a,r2
006D 5000       665            jnc     L003007?
006F            666   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:113: while (!(TMR3CN0 & 0x80));  // Wait for Overflow
006F            667   L003001?:
006F E591       668            mov     a,_TMR3CN0
0071 30E7E8     669            jnb     acc.7,L003001?
0074            670   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:114: TMR3CN0 &= ~(0x80);         // Clear Overflow Indicator
0074 53917F     671            anl     _TMR3CN0,#0x7F
0077            672   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:112: for (i = 0; i < us; i++) {      // Count Overflows (#Microseconds)
0077 0B         673            inc     r3
0078 8000       674            sjmp    L003004?
007A            675   L003007?:
007A            676   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:116: TMR3CN0 = 0 ;                   // Stop Timer3 and Clear Overflow Flag
007A 759100     677            mov     _TMR3CN0,#0x00
007D 22         678            ret
007E            679   ;------------------------------------------------------------
007E            680   ;Allocation info for local variables in function 'waitms'
007E            681   ;------------------------------------------------------------
007E            682   ;ms                        Allocated to registers r2 r3 
007E            683   ;j                         Allocated to registers r2 r3 
007E            684   ;------------------------------------------------------------
007E            685   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:119: void waitms (unsigned int ms) {
007E            686   ;        -----------------------------------------
007E            687   ;         function waitms
007E            688   ;        -----------------------------------------
007E            689   _waitms:
007E AA82       690            mov     r2,dpl
0080 AB83       691            mov     r3,dph
0082            692   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:121: for (j = ms; j != 0; j--) {
0082            693   L004001?:
0082 BA00A8     694            cjne    r2,#0x00,L004010?
0085 BB00A8     695            cjne    r3,#0x00,L004010?
0088 22         696            ret
0089            697   L004010?:
0089            698   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:122: Timer3us(249);
0089 7582F9     699            mov     dpl,#0xF9
008C C002       700            push    ar2
008E C003       701            push    ar3
0090 120000     702            lcall   _Timer3us
0093            703   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:123: Timer3us(249);
0093 7582F9     704            mov     dpl,#0xF9
0096 120000     705            lcall   _Timer3us
0099            706   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:124: Timer3us(249);
0099 7582F9     707            mov     dpl,#0xF9
009C 120000     708            lcall   _Timer3us
009F            709   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:125: Timer3us(250);
009F 7582FA     710            mov     dpl,#0xFA
00A2 120000     711            lcall   _Timer3us
00A5 D003       712            pop     ar3
00A7 D002       713            pop     ar2
00A9            714   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:121: for (j = ms; j != 0; j--) {
00A9 1A         715            dec     r2
00AA BAFFE8     716            cjne    r2,#0xff,L004011?
00AD 1B         717            dec     r3
00AE            718   L004011?:
00AE 8000       719            sjmp    L004001?
00B0            720   ;------------------------------------------------------------
00B0            721   ;Allocation info for local variables in function 'TIMER0_Init'
00B0            722   ;------------------------------------------------------------
00B0            723   ;------------------------------------------------------------
00B0            724   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:129: void TIMER0_Init(void) {
00B0            725   ;        -----------------------------------------
00B0            726   ;         function TIMER0_Init
00B0            727   ;        -----------------------------------------
00B0            728   _TIMER0_Init:
00B0            729   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:130: TMOD &= 0b_1111_0000; // Set the Bits of Timer/Counter 0 to 0
00B0 5389F0     730            anl     _TMOD,#0xF0
00B3            731   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:131: TMOD |= 0b_0000_0001; // Timer/Counter 0 Used As 16-Bit Timer
00B3 438901     732            orl     _TMOD,#0x01
00B6            733   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:132: TR0 = 0; // Stop Timer/Counter 0
00B6 C28C       734            clr     _TR0
00B8 22         735            ret
00B9            736   ;------------------------------------------------------------
00B9            737   ;Allocation info for local variables in function 'Serial_Init'
00B9            738   ;------------------------------------------------------------
00B9            739   ;------------------------------------------------------------
00B9            740   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:135: void Serial_Init(void) {
00B9            741   ;        -----------------------------------------
00B9            742   ;         function Serial_Init
00B9            743   ;        -----------------------------------------
00B9            744   _Serial_Init:
00B9            745   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:136: waitms(500); // Give Putty a chance to start.
00B9 9001F4     746            mov     dptr,#0x01F4
00BC 120000     747            lcall   _waitms
00BF            748   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:137: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
00BF 7428       749            mov     a,#__str_0
00C1 C0E0       750            push    acc
00C3 74B8       751            mov     a,#(__str_0 >> 8)
00C5 C0E0       752            push    acc
00C7 7480       753            mov     a,#0x80
00C9 C0E0       754            push    acc
00CB 120000     755            lcall   _printf
00CE 1581       756            dec     sp
00D0 1581       757            dec     sp
00D2 1581       758            dec     sp
00D4 22         759            ret
00D5            760   ;------------------------------------------------------------
00D5            761   ;Allocation info for local variables in function 'LCD_pulse'
00D5            762   ;------------------------------------------------------------
00D5            763   ;------------------------------------------------------------
00D5            764   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:140: void LCD_pulse(void) {
00D5            765   ;        -----------------------------------------
00D5            766   ;         function LCD_pulse
00D5            767   ;        -----------------------------------------
00D5            768   _LCD_pulse:
00D5            769   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:141: LCD_E = 1; // Pulse the Enable Pin
00D5 D2A5       770            setb    _P2_5
00D7            771   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:142: Timer3us(40); // Wait for 40us
00D7 758228     772            mov     dpl,#0x28
00DA 120000     773            lcall   _Timer3us
00DD            774   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:143: LCD_E = 0; // Pulse the Enable Pin
00DD C2A5       775            clr     _P2_5
00DF 22         776            ret
00E0            777   ;------------------------------------------------------------
00E0            778   ;Allocation info for local variables in function 'LCD_byte'
00E0            779   ;------------------------------------------------------------
00E0            780   ;x                         Allocated to registers r2 
00E0            781   ;------------------------------------------------------------
00E0            782   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:146: void LCD_byte(unsigned char x) {
00E0            783   ;        -----------------------------------------
00E0            784   ;         function LCD_byte
00E0            785   ;        -----------------------------------------
00E0            786   _LCD_byte:
00E0 AA82       787            mov     r2,dpl
00E2            788   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:149: ACC = x; // Send High Nibble
00E2 8AE0       789            mov     _ACC,r2
00E4            790   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:150: LCD_D7 = ACC_7;
00E4 A2E7       791            mov     c,_ACC_7
00E6 92A1       792            mov     _P2_1,c
00E8            793   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:151: LCD_D6 = ACC_6;
00E8 A2E6       794            mov     c,_ACC_6
00EA 92A2       795            mov     _P2_2,c
00EC            796   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:152: LCD_D5 = ACC_5;
00EC A2E5       797            mov     c,_ACC_5
00EE 92A3       798            mov     _P2_3,c
00F0            799   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:153: LCD_D4 = ACC_4;
00F0 A2E4       800            mov     c,_ACC_4
00F2 92A4       801            mov     _P2_4,c
00F4            802   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:154: LCD_pulse();
00F4 C002       803            push    ar2
00F6 120000     804            lcall   _LCD_pulse
00F9            805   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:156: Timer3us(40); // Wait for 40us
00F9 758228     806            mov     dpl,#0x28
00FC 120000     807            lcall   _Timer3us
00FF D002       808            pop     ar2
0101            809   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:158: ACC = x; // Send Low Nibble
0101 8AE0       810            mov     _ACC,r2
0103            811   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:159: LCD_D7 = ACC_3;
0103 A2E3       812            mov     c,_ACC_3
0105 92A1       813            mov     _P2_1,c
0107            814   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:160: LCD_D6 = ACC_2;
0107 A2E2       815            mov     c,_ACC_2
0109 92A2       816            mov     _P2_2,c
010B            817   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:161: LCD_D5 = ACC_1;
010B A2E1       818            mov     c,_ACC_1
010D 92A3       819            mov     _P2_3,c
010F            820   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:162: LCD_D4 = ACC_0;
010F A2E0       821            mov     c,_ACC_0
0111 92A4       822            mov     _P2_4,c
0113            823   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:163: LCD_pulse();
0113 020000     824            ljmp    _LCD_pulse
0116            825   ;------------------------------------------------------------
0116            826   ;Allocation info for local variables in function 'WriteData'
0116            827   ;------------------------------------------------------------
0116            828   ;x                         Allocated to registers r2 
0116            829   ;------------------------------------------------------------
0116            830   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:166: void WriteData(unsigned char x) {
0116            831   ;        -----------------------------------------
0116            832   ;         function WriteData
0116            833   ;        -----------------------------------------
0116            834   _WriteData:
0116 AA82       835            mov     r2,dpl
0118            836   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:167: LCD_RS = 1; // Set LCD to Data Mode
0118 D2A6       837            setb    _P2_6
011A            838   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:168: LCD_byte(x); // Write the Data
011A 8A82       839            mov     dpl,r2
011C 120000     840            lcall   _LCD_byte
011F            841   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:169: waitms(2); // Wait for 2ms
011F 900002     842            mov     dptr,#0x0002
0122 020000     843            ljmp    _waitms
0125            844   ;------------------------------------------------------------
0125            845   ;Allocation info for local variables in function 'WriteCommand'
0125            846   ;------------------------------------------------------------
0125            847   ;x                         Allocated to registers r2 
0125            848   ;------------------------------------------------------------
0125            849   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:172: void WriteCommand(unsigned char x) {
0125            850   ;        -----------------------------------------
0125            851   ;         function WriteCommand
0125            852   ;        -----------------------------------------
0125            853   _WriteCommand:
0125 AA82       854            mov     r2,dpl
0127            855   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:173: LCD_RS = 0; // Set LCD to Command Mode
0127 C2A6       856            clr     _P2_6
0129            857   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:174: LCD_byte(x); // Write the Command
0129 8A82       858            mov     dpl,r2
012B 120000     859            lcall   _LCD_byte
012E            860   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:175: waitms(5); // Wait for 5ms
012E 900005     861            mov     dptr,#0x0005
0131 020000     862            ljmp    _waitms
0134            863   ;------------------------------------------------------------
0134            864   ;Allocation info for local variables in function 'LCD_4BIT'
0134            865   ;------------------------------------------------------------
0134            866   ;------------------------------------------------------------
0134            867   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:178: void LCD_4BIT(void) {
0134            868   ;        -----------------------------------------
0134            869   ;         function LCD_4BIT
0134            870   ;        -----------------------------------------
0134            871   _LCD_4BIT:
0134            872   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:179: LCD_E = 0; // Resting State of LCD Enable Pin is 0.
0134 C2A5       873            clr     _P2_5
0136            874   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:180: waitms(20); // Wait for 20ms
0136 900014     875            mov     dptr,#0x0014
0139 120000     876            lcall   _waitms
013C            877   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:183: WriteCommand(0x33); // Change to 8-bit Mode
013C 758233     878            mov     dpl,#0x33
013F 120000     879            lcall   _WriteCommand
0142            880   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:184: WriteCommand(0x33); // Change to 8-bit Mode
0142 758233     881            mov     dpl,#0x33
0145 120000     882            lcall   _WriteCommand
0148            883   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:185: WriteCommand(0x32); // Change to 4-bit Mode
0148 758232     884            mov     dpl,#0x32
014B 120000     885            lcall   _WriteCommand
014E            886   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:188: WriteCommand(0x28); // 4-bit, 2 Line, 5x7 Dots
014E 758228     887            mov     dpl,#0x28
0151 120000     888            lcall   _WriteCommand
0154            889   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:189: WriteCommand(0x0c); // Display On, No Cursor, No Blink
0154 75820C     890            mov     dpl,#0x0C
0157 120000     891            lcall   _WriteCommand
015A            892   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:190: WriteCommand(0x01); // Clear Screen Command (Takes Some Time)
015A 758201     893            mov     dpl,#0x01
015D 120000     894            lcall   _WriteCommand
0160            895   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:191: waitms(20); // Wait 20ms for Clear Screen Command to Finish
0160 900014     896            mov     dptr,#0x0014
0163 020000     897            ljmp    _waitms
0166            898   ;------------------------------------------------------------
0166            899   ;Allocation info for local variables in function 'LCDprint'
0166            900   ;------------------------------------------------------------
0166            901   ;line                      Allocated with name '_LCDprint_PARM_2'
0166            902   ;string                    Allocated to registers r2 r3 r4 
0166            903   ;j                         Allocated to registers r5 r6 
0166            904   ;------------------------------------------------------------
0166            905   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:194: void LCDprint(char * string, unsigned char line, bit clear) {
0166            906   ;        -----------------------------------------
0166            907   ;         function LCDprint
0166            908   ;        -----------------------------------------
0166            909   _LCDprint:
0166 AA82       910            mov     r2,dpl
0168 AB83       911            mov     r3,dph
016A ACF0       912            mov     r4,b
016C            913   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:197: WriteCommand(line == 2 ? 0xc0 : 0x80); // Set Cursor
016C 7402       914            mov     a,#0x02
016E B52028     915            cjne    a,_LCDprint_PARM_2,L012013?
0171 7DC0       916            mov     r5,#0xC0
0173 8000       917            sjmp    L012014?
0175            918   L012013?:
0175 7D80       919            mov     r5,#0x80
0177            920   L012014?:
0177 8D82       921            mov     dpl,r5
0179 C002       922            push    ar2
017B C003       923            push    ar3
017D C004       924            push    ar4
017F 120000     925            lcall   _WriteCommand
0182            926   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:198: waitms(5); // Wait for 5ms
0182 900005     927            mov     dptr,#0x0005
0185 120000     928            lcall   _waitms
0188 D004       929            pop     ar4
018A D003       930            pop     ar3
018C D002       931            pop     ar2
018E            932   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:199: for (j = 0; string[j] != 0; j++) WriteData(string[j]); // Write Message
018E 7D00       933            mov     r5,#0x00
0190 7E00       934            mov     r6,#0x00
0192            935   L012003?:
0192 ED         936            mov     a,r5
0193 2A         937            add     a,r2
0194 FF         938            mov     r7,a
0195 EE         939            mov     a,r6
0196 3B         940            addc    a,r3
0197 F8         941            mov     r0,a
0198 8C01       942            mov     ar1,r4
019A 8F82       943            mov     dpl,r7
019C 8883       944            mov     dph,r0
019E 89F0       945            mov     b,r1
01A0 120000     946            lcall   __gptrget
01A3 FF         947            mov     r7,a
01A4 6000       948            jz      L012006?
01A6 8F82       949            mov     dpl,r7
01A8 C002       950            push    ar2
01AA C003       951            push    ar3
01AC C004       952            push    ar4
01AE C005       953            push    ar5
01B0 C006       954            push    ar6
01B2 120000     955            lcall   _WriteData
01B5 D006       956            pop     ar6
01B7 D005       957            pop     ar5
01B9 D004       958            pop     ar4
01BB D003       959            pop     ar3
01BD D002       960            pop     ar2
01BF 0D         961            inc     r5
01C0 BD00A8     962            cjne    r5,#0x00,L012003?
01C3 0E         963            inc     r6
01C4 8000       964            sjmp    L012003?
01C6            965   L012006?:
01C6            966   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:200: if (clear) for (; j < CHARS_PER_LINE; j++) WriteData(' '); // Clear Rest of Line
01C6 303068     967            jnb     _LCDprint_PARM_3,L012011?
01C9 8D02       968            mov     ar2,r5
01CB 8E03       969            mov     ar3,r6
01CD            970   L012007?:
01CD C3         971            clr     c
01CE EA         972            mov     a,r2
01CF 9410       973            subb    a,#0x10
01D1 EB         974            mov     a,r3
01D2 6480       975            xrl     a,#0x80
01D4 9480       976            subb    a,#0x80
01D6 5000       977            jnc     L012011?
01D8 758220     978            mov     dpl,#0x20
01DB C002       979            push    ar2
01DD C003       980            push    ar3
01DF 120000     981            lcall   _WriteData
01E2 D003       982            pop     ar3
01E4 D002       983            pop     ar2
01E6 0A         984            inc     r2
01E7 BA00A8     985            cjne    r2,#0x00,L012007?
01EA 0B         986            inc     r3
01EB 8000       987            sjmp    L012007?
01ED            988   L012011?:
01ED 22         989            ret
01EE            990   ;------------------------------------------------------------
01EE            991   ;Allocation info for local variables in function 'write_rx'
01EE            992   ;------------------------------------------------------------
01EE            993   ;len                       Allocated with name '_write_rx_PARM_2'
01EE            994   ;buff                      Allocated with name '_write_rx_buff_1_47'
01EE            995   ;j                         Allocated with name '_write_rx_sloc0_1_0'
01EE            996   ;c                         Allocated to registers r3 
01EE            997   ;sloc0                     Allocated with name '_write_rx_sloc0_1_0'
01EE            998   ;------------------------------------------------------------
01EE            999   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:203: int write_rx(char* buff, int len) {
01EE           1000   ;        -----------------------------------------
01EE           1001   ;         function write_rx
01EE           1002   ;        -----------------------------------------
01EE           1003   _write_rx:
01EE 8582F8    1004            mov     _write_rx_buff_1_47,dpl
01F1 8583F9    1005            mov     (_write_rx_buff_1_47 + 1),dph
01F4 85F0FA    1006            mov     (_write_rx_buff_1_47 + 2),b
01F7           1007   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:207: for (j = 0; j < (len-1); j++) {
01F7 E4        1008            clr     a
01F8 F548      1009            mov     _write_rx_sloc0_1_0,a
01FA F549      1010            mov     (_write_rx_sloc0_1_0 + 1),a
01FC E5D0      1011            mov     a,_write_rx_PARM_2
01FE 24FF      1012            add     a,#0xff
0200 FF        1013            mov     r7,a
0201 E5D1      1014            mov     a,(_write_rx_PARM_2 + 1)
0203 34FF      1015            addc    a,#0xff
0205 F8        1016            mov     r0,a
0206 7900      1017            mov     r1,#0x00
0208 7A00      1018            mov     r2,#0x00
020A           1019   L013005?:
020A C3        1020            clr     c
020B E9        1021            mov     a,r1
020C 9F        1022            subb    a,r7
020D EA        1023            mov     a,r2
020E 6480      1024            xrl     a,#0x80
0210 88F0      1025            mov     b,r0
0212 63F080    1026            xrl     b,#0x80
0215 95F0      1027            subb    a,b
0217 5000      1028            jnc     L013008?
0219           1029   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:208: c = getchar();
0219 C002      1030            push    ar2
021B C007      1031            push    ar7
021D C000      1032            push    ar0
021F C001      1033            push    ar1
0221 120000    1034            lcall   _getchar
0224 AB82      1035            mov     r3,dpl
0226 D001      1036            pop     ar1
0228 D000      1037            pop     ar0
022A D007      1038            pop     ar7
022C D002      1039            pop     ar2
022E           1040   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:209: if ( (c == '\n') || (c == '\r') ) {
022E BB0AA8    1041            cjne    r3,#0x0A,L013015?
0231 8000      1042            sjmp    L013001?
0233           1043   L013015?:
0233 BB0D28    1044            cjne    r3,#0x0D,L013002?
0236           1045   L013001?:
0236           1046   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:210: buff[j] = 0;
0236 E548      1047            mov     a,_write_rx_sloc0_1_0
0238 25F8      1048            add     a,_write_rx_buff_1_47
023A FC        1049            mov     r4,a
023B E549      1050            mov     a,(_write_rx_sloc0_1_0 + 1)
023D 35F9      1051            addc    a,(_write_rx_buff_1_47 + 1)
023F FD        1052            mov     r5,a
0240 AEFA      1053            mov     r6,(_write_rx_buff_1_47 + 2)
0242 8C82      1054            mov     dpl,r4
0244 8D83      1055            mov     dph,r5
0246 8EF0      1056            mov     b,r6
0248 E4        1057            clr     a
0249 120000    1058            lcall   __gptrput
024C           1059   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:211: return j;
024C 854882    1060            mov     dpl,_write_rx_sloc0_1_0
024F 854983    1061            mov     dph,(_write_rx_sloc0_1_0 + 1)
0252 22        1062            ret
0253           1063   L013002?:
0253           1064   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:213: buff[j] = c;
0253 E9        1065            mov     a,r1
0254 25F8      1066            add     a,_write_rx_buff_1_47
0256 FC        1067            mov     r4,a
0257 EA        1068            mov     a,r2
0258 35F9      1069            addc    a,(_write_rx_buff_1_47 + 1)
025A FD        1070            mov     r5,a
025B AEFA      1071            mov     r6,(_write_rx_buff_1_47 + 2)
025D 8C82      1072            mov     dpl,r4
025F 8D83      1073            mov     dph,r5
0261 8EF0      1074            mov     b,r6
0263 EB        1075            mov     a,r3
0264 120000    1076            lcall   __gptrput
0267           1077   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:207: for (j = 0; j < (len-1); j++) {
0267 09        1078            inc     r1
0268 B900A8    1079            cjne    r1,#0x00,L013018?
026B 0A        1080            inc     r2
026C           1081   L013018?:
026C 8948      1082            mov     _write_rx_sloc0_1_0,r1
026E 8A49      1083            mov     (_write_rx_sloc0_1_0 + 1),r2
0270 8000      1084            sjmp    L013005?
0272           1085   L013008?:
0272           1086   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:216: buff[j] = 0;
0272 E548      1087            mov     a,_write_rx_sloc0_1_0
0274 25F8      1088            add     a,_write_rx_buff_1_47
0276 FA        1089            mov     r2,a
0277 E549      1090            mov     a,(_write_rx_sloc0_1_0 + 1)
0279 35F9      1091            addc    a,(_write_rx_buff_1_47 + 1)
027B FB        1092            mov     r3,a
027C ACFA      1093            mov     r4,(_write_rx_buff_1_47 + 2)
027E 8A82      1094            mov     dpl,r2
0280 8B83      1095            mov     dph,r3
0282 8CF0      1096            mov     b,r4
0284 E4        1097            clr     a
0285 120000    1098            lcall   __gptrput
0288           1099   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:217: return len;
0288 85D082    1100            mov     dpl,_write_rx_PARM_2
028B 85D183    1101            mov     dph,(_write_rx_PARM_2 + 1)
028E 22        1102            ret
028F           1103   ;------------------------------------------------------------
028F           1104   ;Allocation info for local variables in function 'display_rx'
028F           1105   ;------------------------------------------------------------
028F           1106   ;len                       Allocated with name '_display_rx_PARM_2'
028F           1107   ;buff                      Allocated to registers r2 r3 r4 
028F           1108   ;------------------------------------------------------------
028F           1109   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:220: void display_rx(char* buff, int len) {
028F           1110   ;        -----------------------------------------
028F           1111   ;         function display_rx
028F           1112   ;        -----------------------------------------
028F           1113   _display_rx:
028F AA82      1114            mov     r2,dpl
0291 AB83      1115            mov     r3,dph
0293 ACF0      1116            mov     r4,b
0295           1117   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:221: printf("Type Intended Display in Line 2 (16 Char Max): ");
0295 C002      1118            push    ar2
0297 C003      1119            push    ar3
0299 C004      1120            push    ar4
029B 74E8      1121            mov     a,#__str_1
029D C0E0      1122            push    acc
029F 74BC      1123            mov     a,#(__str_1 >> 8)
02A1 C0E0      1124            push    acc
02A3 7480      1125            mov     a,#0x80
02A5 C0E0      1126            push    acc
02A7 120000    1127            lcall   _printf
02AA 1581      1128            dec     sp
02AC 1581      1129            dec     sp
02AE 1581      1130            dec     sp
02B0 D004      1131            pop     ar4
02B2 D003      1132            pop     ar3
02B4 D002      1133            pop     ar2
02B6           1134   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:222: write_rx(buff, len);
02B6 8580D0    1135            mov     _write_rx_PARM_2,_display_rx_PARM_2
02B9 8581D1    1136            mov     (_write_rx_PARM_2 + 1),(_display_rx_PARM_2 + 1)
02BC 8A82      1137            mov     dpl,r2
02BE 8B83      1138            mov     dph,r3
02C0 8CF0      1139            mov     b,r4
02C2 C002      1140            push    ar2
02C4 C003      1141            push    ar3
02C6 C004      1142            push    ar4
02C8 120000    1143            lcall   _write_rx
02CB           1144   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:223: printf("\n");
02CB 7428      1145            mov     a,#__str_2
02CD C0E0      1146            push    acc
02CF 74BD      1147            mov     a,#(__str_2 >> 8)
02D1 C0E0      1148            push    acc
02D3 7480      1149            mov     a,#0x80
02D5 C0E0      1150            push    acc
02D7 120000    1151            lcall   _printf
02DA 1581      1152            dec     sp
02DC 1581      1153            dec     sp
02DE 1581      1154            dec     sp
02E0 D004      1155            pop     ar4
02E2 D003      1156            pop     ar3
02E4 D002      1157            pop     ar2
02E6           1158   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:224: LCDprint(buff, 1, 1);
02E6 752001    1159            mov     _LCDprint_PARM_2,#0x01
02E9 D230      1160            setb    _LCDprint_PARM_3
02EB 8A82      1161            mov     dpl,r2
02ED 8B83      1162            mov     dph,r3
02EF 8CF0      1163            mov     b,r4
02F1 020000    1164            ljmp    _LCDprint
02F4           1165   ;------------------------------------------------------------
02F4           1166   ;Allocation info for local variables in function 'display_period'
02F4           1167   ;------------------------------------------------------------
02F4           1168   ;period                    Allocated to registers r2 r3 r4 r5 
02F4           1169   ;buff                      Allocated with name '_display_period_buff_1_55'
02F4           1170   ;------------------------------------------------------------
02F4           1171   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:227: void display_period(float period) {
02F4           1172   ;        -----------------------------------------
02F4           1173   ;         function display_period
02F4           1174   ;        -----------------------------------------
02F4           1175   _display_period:
02F4           1176   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:229: sprintf(buff, "PERIOD: %i", (int)period); // Format the Period Value
02F4 120000    1177            lcall   ___fs2sint
02F7 AA82      1178            mov     r2,dpl
02F9 AB83      1179            mov     r3,dph
02FB C002      1180            push    ar2
02FD C003      1181            push    ar3
02FF 74A8      1182            mov     a,#__str_3
0301 C0E0      1183            push    acc
0303 74BD      1184            mov     a,#(__str_3 >> 8)
0305 C0E0      1185            push    acc
0307 7480      1186            mov     a,#0x80
0309 C0E0      1187            push    acc
030B 7498      1188            mov     a,#_display_period_buff_1_55
030D C0E0      1189            push    acc
030F 74B4      1190            mov     a,#(_display_period_buff_1_55 >> 8)
0311 C0E0      1191            push    acc
0313 7440      1192            mov     a,#0x40
0315 C0E0      1193            push    acc
0317 120000    1194            lcall   _sprintf
031A E581      1195            mov     a,sp
031C 24F8      1196            add     a,#0xf8
031E F581      1197            mov     sp,a
0320           1198   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:230: LCDprint(buff, 2, 1); // Write to LCD
0320 752002    1199            mov     _LCDprint_PARM_2,#0x02
0323 D230      1200            setb    _LCDprint_PARM_3
0325 90B498    1201            mov     dptr,#_display_period_buff_1_55
0328 75F040    1202            mov     b,#0x40
032B 020000    1203            ljmp    _LCDprint
032E           1204   ;------------------------------------------------------------
032E           1205   ;Allocation info for local variables in function 'main'
032E           1206   ;------------------------------------------------------------
032E           1207   ;period                    Allocated to registers r2 r3 r4 r5 
032E           1208   ;rx_buff                   Allocated with name '_main_rx_buff_1_57'
032E           1209   ;------------------------------------------------------------
032E           1210   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:233: void main(void) {
032E           1211   ;        -----------------------------------------
032E           1212   ;         function main
032E           1213   ;        -----------------------------------------
032E           1214   _main:
032E           1215   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:237: TIMER0_Init(); // Initialize Timer 0
032E 120000    1216            lcall   _TIMER0_Init
0331           1217   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:238: Serial_Init(); // Initialize Serial Communication
0331 120000    1218            lcall   _Serial_Init
0334           1219   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:239: LCD_4BIT();        // Configure the LCD
0334 120000    1220            lcall   _LCD_4BIT
0337           1221   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:241: LCDprint("LCD 4-Bit Test", 1, 1);
0337 752001    1222            mov     _LCDprint_PARM_2,#0x01
033A D230      1223            setb    _LCDprint_PARM_3
033C 90BE28    1224            mov     dptr,#__str_4
033F 75F080    1225            mov     b,#0x80
0342 120000    1226            lcall   _LCDprint
0345           1227   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:242: LCDprint("Hello, World!", 2, 1);
0345 752002    1228            mov     _LCDprint_PARM_2,#0x02
0348 D230      1229            setb    _LCDprint_PARM_3
034A 90BE68    1230            mov     dptr,#__str_5
034D 75F080    1231            mov     b,#0x80
0350 120000    1232            lcall   _LCDprint
0353           1233   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:249: );
0353           1234   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:248: __FILE__, __DATE__, __TIME__
0353           1235   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:247: "Compiled: %s, %s\n\n",
0353 74A8      1236            mov     a,#__str_9
0355 C0E0      1237            push    acc
0357 74BE      1238            mov     a,#(__str_9 >> 8)
0359 C0E0      1239            push    acc
035B 7480      1240            mov     a,#0x80
035D C0E0      1241            push    acc
035F 74E8      1242            mov     a,#__str_8
0361 C0E0      1243            push    acc
0363 74BE      1244            mov     a,#(__str_8 >> 8)
0365 C0E0      1245            push    acc
0367 7480      1246            mov     a,#0x80
0369 C0E0      1247            push    acc
036B 7428      1248            mov     a,#__str_7
036D C0E0      1249            push    acc
036F 74BF      1250            mov     a,#(__str_7 >> 8)
0371 C0E0      1251            push    acc
0373 7480      1252            mov     a,#0x80
0375 C0E0      1253            push    acc
0377 7468      1254            mov     a,#__str_6
0379 C0E0      1255            push    acc
037B 74BF      1256            mov     a,#(__str_6 >> 8)
037D C0E0      1257            push    acc
037F 7480      1258            mov     a,#0x80
0381 C0E0      1259            push    acc
0383 120000    1260            lcall   _printf
0386 E581      1261            mov     a,sp
0388 24F4      1262            add     a,#0xf4
038A F581      1263            mov     sp,a
038C           1264   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:251: while(1) {
038C           1265   L016018?:
038C           1266   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:253: TL0 = 0;
038C 758A00    1267            mov     _TL0,#0x00
038F           1268   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:254: TH0 = 0;
038F 758C00    1269            mov     _TH0,#0x00
0392           1270   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:255: TF0 = 0;
0392 C28D      1271            clr     _TF0
0394           1272   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:256: overflow_count = 0;
0394 756000    1273            mov     _overflow_count,#0x00
0397           1274   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:258: while (EFM8_SIGNAL != 0); // Wait for Signal == 0
0397           1275   L016001?:
0397 2081E8    1276            jb      _P0_1,L016001?
039A           1277   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:259: while (EFM8_SIGNAL != 1); // Wait for Signal == 1
039A           1278   L016004?:
039A 308128    1279            jnb     _P0_1,L016004?
039D           1280   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:261: TR0 = 1; // Start Timer
039D D28C      1281            setb    _TR0
039F           1282   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:263: while (EFM8_SIGNAL != 0) { // Wait for Signal == 0
039F           1283   L016009?:
039F 3081A8    1284            jnb     _P0_1,L016014?
03A2           1285   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:264: if (TF0 == 1) { // Did 16-Bit Timer Overflow?
03A2           1286   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:265: TF0 = 0;
03A2 108DE8    1287            jbc     _TF0,L016035?
03A5 8000      1288            sjmp    L016009?
03A7           1289   L016035?:
03A7           1290   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:266: overflow_count++;
03A7 0560      1291            inc     _overflow_count
03A9           1292   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:269: while (EFM8_SIGNAL != 1) { // Wait for Signal == 1
03A9 8000      1293            sjmp    L016009?
03AB           1294   L016014?:
03AB 208128    1295            jb      _P0_1,L016016?
03AE           1296   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:270: if (TF0 == 1) { // Did 16-Bit Timer Overflow?
03AE           1297   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:271: TF0 = 0;
03AE 108D68    1298            jbc     _TF0,L016037?
03B1 8000      1299            sjmp    L016014?
03B3           1300   L016037?:
03B3           1301   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:272: overflow_count++;
03B3 0560      1302            inc     _overflow_count
03B5 8000      1303            sjmp    L016014?
03B7           1304   L016016?:
03B7           1305   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:276: TR0 = 0; // Stop Timer 0. The 24-bit number [overflow_count-TH0-TL0] has the period!
03B7 C28C      1306            clr     _TR0
03B9           1307   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:277: period = (overflow_count * (2^16)  + TH0 * (2^8) + TL0) * (12.0 / SYSCLK);
03B9 E560      1308            mov     a,_overflow_count
03BB 75F012    1309            mov     b,#0x12
03BE A4        1310            mul     ab
03BF FA        1311            mov     r2,a
03C0 ABF0      1312            mov     r3,b
03C2 E58C      1313            mov     a,_TH0
03C4 75F00A    1314            mov     b,#0x0A
03C7 A4        1315            mul     ab
03C8 2A        1316            add     a,r2
03C9 FA        1317            mov     r2,a
03CA EB        1318            mov     a,r3
03CB 35F0      1319            addc    a,b
03CD FB        1320            mov     r3,a
03CE AC8A      1321            mov     r4,_TL0
03D0 7D00      1322            mov     r5,#0x00
03D2 EC        1323            mov     a,r4
03D3 2A        1324            add     a,r2
03D4 F582      1325            mov     dpl,a
03D6 ED        1326            mov     a,r5
03D7 3B        1327            addc    a,r3
03D8 F583      1328            mov     dph,a
03DA 120000    1329            lcall   ___sint2fs
03DD AA82      1330            mov     r2,dpl
03DF AB83      1331            mov     r3,dph
03E1 ACF0      1332            mov     r4,b
03E3 FD        1333            mov     r5,a
03E4 C002      1334            push    ar2
03E6 C003      1335            push    ar3
03E8 C004      1336            push    ar4
03EA C005      1337            push    ar5
03EC 90F4FC    1338            mov     dptr,#0xF4FC
03EF 75F032    1339            mov     b,#0x32
03F2 7434      1340            mov     a,#0x34
03F4 120000    1341            lcall   ___fsmul
03F7 AA82      1342            mov     r2,dpl
03F9 AB83      1343            mov     r3,dph
03FB ACF0      1344            mov     r4,b
03FD FD        1345            mov     r5,a
03FE E581      1346            mov     a,sp
0400 24FC      1347            add     a,#0xfc
0402 F581      1348            mov     sp,a
0404           1349   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:279: waitms(1000); // Wait for 1 Second
0404 9003E8    1350            mov     dptr,#0x03E8
0407 C002      1351            push    ar2
0409 C003      1352            push    ar3
040B C004      1353            push    ar4
040D C005      1354            push    ar5
040F 120000    1355            lcall   _waitms
0412 D005      1356            pop     ar5
0414 D004      1357            pop     ar4
0416 D003      1358            pop     ar3
0418 D002      1359            pop     ar2
041A           1360   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:281: printf("\rT = %f ms    ", period * 1000.0); // Print Period to Serial Port
041A C002      1361            push    ar2
041C C003      1362            push    ar3
041E C004      1363            push    ar4
0420 C005      1364            push    ar5
0422 C002      1365            push    ar2
0424 C003      1366            push    ar3
0426 C004      1367            push    ar4
0428 C005      1368            push    ar5
042A 900000    1369            mov     dptr,#0x0000
042D 75F07A    1370            mov     b,#0x7A
0430 7444      1371            mov     a,#0x44
0432 120000    1372            lcall   ___fsmul
0435 AE82      1373            mov     r6,dpl
0437 AF83      1374            mov     r7,dph
0439 A8F0      1375            mov     r0,b
043B F9        1376            mov     r1,a
043C E581      1377            mov     a,sp
043E 24FC      1378            add     a,#0xfc
0440 F581      1379            mov     sp,a
0442 C006      1380            push    ar6
0444 C007      1381            push    ar7
0446 C000      1382            push    ar0
0448 C001      1383            push    ar1
044A 7428      1384            mov     a,#__str_10
044C C0E0      1385            push    acc
044E 74C2      1386            mov     a,#(__str_10 >> 8)
0450 C0E0      1387            push    acc
0452 7480      1388            mov     a,#0x80
0454 C0E0      1389            push    acc
0456 120000    1390            lcall   _printf
0459 E581      1391            mov     a,sp
045B 24F9      1392            add     a,#0xf9
045D F581      1393            mov     sp,a
045F           1394   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:282: display_rx(rx_buff, sizeof(rx_buff)); // Display on LCD
045F 758010    1395            mov     _display_rx_PARM_2,#0x10
0462 E4        1396            clr     a
0463 F581      1397            mov     (_display_rx_PARM_2 + 1),a
0465 90B4E8    1398            mov     dptr,#_main_rx_buff_1_57
0468 75F040    1399            mov     b,#0x40
046B 120000    1400            lcall   _display_rx
046E D005      1401            pop     ar5
0470 D004      1402            pop     ar4
0472 D003      1403            pop     ar3
0474 D002      1404            pop     ar2
0476           1405   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Code\Lab4.c:283: display_period(period); // Display Period on LCD
0476 8A82      1406            mov     dpl,r2
0478 8B83      1407            mov     dph,r3
047A 8CF0      1408            mov     b,r4
047C ED        1409            mov     a,r5
047D 120000    1410            lcall   _display_period
0480 020000    1411            ljmp    L016018?
0483           1412            rseg R_CSEG
0483           1413   
0000           1414            rseg R_XINIT
0000           1415   
0000           1416            rseg R_CONST
0000           1417   __str_0:
0000 1B        1418            db 0x1B
0001 5B324A    1419            db '[2J'
0004 00        1420            db 0x00
0005           1421   __str_1:
0005 54797065  1422            db 'Type Intended Display in Line 2 (16 Char Max): '
     20496E74
     656E6465
     64204469
     73706C61
     7920696E
     204C696E
     65203220
     28313620
     43686172
     204D6178
     293A20
0034 00        1423            db 0x00
0035           1424   __str_2:
0035 0A        1425            db 0x0A
0036 00        1426            db 0x00
0037           1427   __str_3:
0037 50455249  1428            db 'PERIOD: %i'
     4F443A20
     2569
0041 00        1429            db 0x00
0042           1430   __str_4:
0042 4C434420  1431            db 'LCD 4-Bit Test'
     342D4269
     74205465
     7374
0050 00        1432            db 0x00
0051           1433   __str_5:
0051 48656C6C  1434            db 'Hello, World!'
     6F2C2057
     6F726C64
     21
005E 00        1435            db 0x00
005F           1436   __str_6:
005F 45464D38  1437            db 'EFM8 Period measurement at pin P0.1 using Timer 0.'
     20506572
     696F6420
     6D656173
     7572656D
     656E7420
     61742070
     696E2050
     302E3120
     7573696E
     67205469
     6D657220
     302E
0091 0A        1438            db 0x0A
0092 46696C65  1439            db 'File: %s'
     3A202573
009A 0A        1440            db 0x0A
009B 436F6D70  1441            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
00AB 0A        1442            db 0x0A
00AC 0A        1443            db 0x0A
00AD 00        1444            db 0x00
00AE           1445   __str_7:
00AE 433A      1446            db 'C:'
00B0 5C        1447            db 0x5C
00B1 4D756E74  1448            db 'Muntakim_Files'
     616B696D
     5F46696C
     6573
00BF 5C        1449            db 0x5C
00C0 5363686F  1450            db 'School'
     6F6C
00C6 5C        1451            db 0x5C
00C7 5363686F  1452            db 'School_Work'
     6F6C5F57
     6F726B
00D2 5C        1453            db 0x5C
00D3 456E6769  1454            db 'Engineering_Bachelors'
     6E656572
     696E675F
     42616368
     656C6F72
     73
00E8 5C        1455            db 0x5C
00E9 32        1456            db '2'
00EA 303233    1457            db '023'
00ED 5C        1458            db 0x5C
00EE 454C4543  1459            db 'ELEC_291'
     5F323931
00F6 5C        1460            db 0x5C
00F7 4C61625F  1461            db 'Lab_4'
     34
00FC 5C        1462            db 0x5C
00FD 454C4543  1463            db 'ELEC291_Lab4'
     3239315F
     4C616234
0109 5C        1464            db 0x5C
010A 436F6465  1465            db 'Code'
010E 5C        1466            db 0x5C
010F 4C616234  1467            db 'Lab4.c'
     2E63
0115 00        1468            db 0x00
0116           1469   __str_8:
0116 46656220  1470            db 'Feb 20 2024'
     32302032
     303234
0121 00        1471            db 0x00
0122           1472   __str_9:
0122 32323A32  1473            db '22:25:56'
     353A3536
012A 00        1474            db 0x00
012B           1475   __str_10:
012B 0D        1476            db 0x0D
012C 54203D20  1477            db 'T = %f ms    '
     2566206D
     73202020
     20
0139 00        1478            db 0x00
013A           1479   
0003           1480            CSEG
0003           1481   
0003           1482   end
