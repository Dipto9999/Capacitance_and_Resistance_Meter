0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Tue Feb 27 15:33:13 2024
0000              5   ;--------------------------------------------------------
                  5   $name Lab4
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _calculate_capacitance_nF
0000             29            public _calculate_freq_Hz
0000             30            public _calculate_period_s
0000             31            public _display_capacitance_nF
0000             32            public _display_freq_kHz
0000             33            public _display_period
0000             34            public _display_rx
0000             35            public _write_rx
0000             36            public _LCDprint
0000             37            public _LCD_4BIT
0000             38            public _WriteCommand
0000             39            public _WriteData
0000             40            public _LCD_byte
0000             41            public _LCD_pulse
0000             42            public _Serial_Init
0000             43            public _TIMER0_Init
0000             44            public _waitms
0000             45            public _Timer3us
0000             46            public __c51_external_startup
0000             47            public _LCDprint_PARM_3
0000             48            public _calculate_period_s_PARM_3
0000             49            public _calculate_period_s_PARM_2
0000             50            public _display_rx_PARM_2
0000             51            public _write_rx_PARM_2
0000             52            public _LCDprint_PARM_2
0000             53            public _overflow_count
0000             54   ;--------------------------------------------------------
0000             55   ; Special Function Registers
0000             56   ;--------------------------------------------------------
0000             57   _ACC            DATA 0xe0
0000             58   _ADC0ASAH       DATA 0xb6
0000             59   _ADC0ASAL       DATA 0xb5
0000             60   _ADC0ASCF       DATA 0xa1
0000             61   _ADC0ASCT       DATA 0xc7
0000             62   _ADC0CF0        DATA 0xbc
0000             63   _ADC0CF1        DATA 0xb9
0000             64   _ADC0CF2        DATA 0xdf
0000             65   _ADC0CN0        DATA 0xe8
0000             66   _ADC0CN1        DATA 0xb2
0000             67   _ADC0CN2        DATA 0xb3
0000             68   _ADC0GTH        DATA 0xc4
0000             69   _ADC0GTL        DATA 0xc3
0000             70   _ADC0H          DATA 0xbe
0000             71   _ADC0L          DATA 0xbd
0000             72   _ADC0LTH        DATA 0xc6
0000             73   _ADC0LTL        DATA 0xc5
0000             74   _ADC0MX         DATA 0xbb
0000             75   _B              DATA 0xf0
0000             76   _CKCON0         DATA 0x8e
0000             77   _CKCON1         DATA 0xa6
0000             78   _CLEN0          DATA 0xc6
0000             79   _CLIE0          DATA 0xc7
0000             80   _CLIF0          DATA 0xe8
0000             81   _CLKSEL         DATA 0xa9
0000             82   _CLOUT0         DATA 0xd1
0000             83   _CLU0CF         DATA 0xb1
0000             84   _CLU0FN         DATA 0xaf
0000             85   _CLU0MX         DATA 0x84
0000             86   _CLU1CF         DATA 0xb3
0000             87   _CLU1FN         DATA 0xb2
0000             88   _CLU1MX         DATA 0x85
0000             89   _CLU2CF         DATA 0xb6
0000             90   _CLU2FN         DATA 0xb5
0000             91   _CLU2MX         DATA 0x91
0000             92   _CLU3CF         DATA 0xbf
0000             93   _CLU3FN         DATA 0xbe
0000             94   _CLU3MX         DATA 0xae
0000             95   _CMP0CN0        DATA 0x9b
0000             96   _CMP0CN1        DATA 0x99
0000             97   _CMP0MD         DATA 0x9d
0000             98   _CMP0MX         DATA 0x9f
0000             99   _CMP1CN0        DATA 0xbf
0000            100   _CMP1CN1        DATA 0xac
0000            101   _CMP1MD         DATA 0xab
0000            102   _CMP1MX         DATA 0xaa
0000            103   _CRC0CN0        DATA 0xce
0000            104   _CRC0CN1        DATA 0x86
0000            105   _CRC0CNT        DATA 0xd3
0000            106   _CRC0DAT        DATA 0xcb
0000            107   _CRC0FLIP       DATA 0xcf
0000            108   _CRC0IN         DATA 0xca
0000            109   _CRC0ST         DATA 0xd2
0000            110   _DAC0CF0        DATA 0x91
0000            111   _DAC0CF1        DATA 0x92
0000            112   _DAC0H          DATA 0x85
0000            113   _DAC0L          DATA 0x84
0000            114   _DAC1CF0        DATA 0x93
0000            115   _DAC1CF1        DATA 0x94
0000            116   _DAC1H          DATA 0x8a
0000            117   _DAC1L          DATA 0x89
0000            118   _DAC2CF0        DATA 0x95
0000            119   _DAC2CF1        DATA 0x96
0000            120   _DAC2H          DATA 0x8c
0000            121   _DAC2L          DATA 0x8b
0000            122   _DAC3CF0        DATA 0x9a
0000            123   _DAC3CF1        DATA 0x9c
0000            124   _DAC3H          DATA 0x8e
0000            125   _DAC3L          DATA 0x8d
0000            126   _DACGCF0        DATA 0x88
0000            127   _DACGCF1        DATA 0x98
0000            128   _DACGCF2        DATA 0xa2
0000            129   _DERIVID        DATA 0xad
0000            130   _DEVICEID       DATA 0xb5
0000            131   _DPH            DATA 0x83
0000            132   _DPL            DATA 0x82
0000            133   _EIE1           DATA 0xe6
0000            134   _EIE2           DATA 0xf3
0000            135   _EIP1           DATA 0xbb
0000            136   _EIP1H          DATA 0xee
0000            137   _EIP2           DATA 0xed
0000            138   _EIP2H          DATA 0xf6
0000            139   _EMI0CN         DATA 0xe7
0000            140   _FLKEY          DATA 0xb7
0000            141   _HFO0CAL        DATA 0xc7
0000            142   _HFO1CAL        DATA 0xd6
0000            143   _HFOCN          DATA 0xef
0000            144   _I2C0ADM        DATA 0xff
0000            145   _I2C0CN0        DATA 0xba
0000            146   _I2C0DIN        DATA 0xbc
0000            147   _I2C0DOUT       DATA 0xbb
0000            148   _I2C0FCN0       DATA 0xad
0000            149   _I2C0FCN1       DATA 0xab
0000            150   _I2C0FCT        DATA 0xf5
0000            151   _I2C0SLAD       DATA 0xbd
0000            152   _I2C0STAT       DATA 0xb9
0000            153   _IE             DATA 0xa8
0000            154   _IP             DATA 0xb8
0000            155   _IPH            DATA 0xf2
0000            156   _IT01CF         DATA 0xe4
0000            157   _LFO0CN         DATA 0xb1
0000            158   _P0             DATA 0x80
0000            159   _P0MASK         DATA 0xfe
0000            160   _P0MAT          DATA 0xfd
0000            161   _P0MDIN         DATA 0xf1
0000            162   _P0MDOUT        DATA 0xa4
0000            163   _P0SKIP         DATA 0xd4
0000            164   _P1             DATA 0x90
0000            165   _P1MASK         DATA 0xee
0000            166   _P1MAT          DATA 0xed
0000            167   _P1MDIN         DATA 0xf2
0000            168   _P1MDOUT        DATA 0xa5
0000            169   _P1SKIP         DATA 0xd5
0000            170   _P2             DATA 0xa0
0000            171   _P2MASK         DATA 0xfc
0000            172   _P2MAT          DATA 0xfb
0000            173   _P2MDIN         DATA 0xf3
0000            174   _P2MDOUT        DATA 0xa6
0000            175   _P2SKIP         DATA 0xcc
0000            176   _P3             DATA 0xb0
0000            177   _P3MDIN         DATA 0xf4
0000            178   _P3MDOUT        DATA 0x9c
0000            179   _PCA0CENT       DATA 0x9e
0000            180   _PCA0CLR        DATA 0x9c
0000            181   _PCA0CN0        DATA 0xd8
0000            182   _PCA0CPH0       DATA 0xfc
0000            183   _PCA0CPH1       DATA 0xea
0000            184   _PCA0CPH2       DATA 0xec
0000            185   _PCA0CPH3       DATA 0xf5
0000            186   _PCA0CPH4       DATA 0x85
0000            187   _PCA0CPH5       DATA 0xde
0000            188   _PCA0CPL0       DATA 0xfb
0000            189   _PCA0CPL1       DATA 0xe9
0000            190   _PCA0CPL2       DATA 0xeb
0000            191   _PCA0CPL3       DATA 0xf4
0000            192   _PCA0CPL4       DATA 0x84
0000            193   _PCA0CPL5       DATA 0xdd
0000            194   _PCA0CPM0       DATA 0xda
0000            195   _PCA0CPM1       DATA 0xdb
0000            196   _PCA0CPM2       DATA 0xdc
0000            197   _PCA0CPM3       DATA 0xae
0000            198   _PCA0CPM4       DATA 0xaf
0000            199   _PCA0CPM5       DATA 0xcc
0000            200   _PCA0H          DATA 0xfa
0000            201   _PCA0L          DATA 0xf9
0000            202   _PCA0MD         DATA 0xd9
0000            203   _PCA0POL        DATA 0x96
0000            204   _PCA0PWM        DATA 0xf7
0000            205   _PCON0          DATA 0x87
0000            206   _PCON1          DATA 0xcd
0000            207   _PFE0CN         DATA 0xc1
0000            208   _PRTDRV         DATA 0xf6
0000            209   _PSCTL          DATA 0x8f
0000            210   _PSTAT0         DATA 0xaa
0000            211   _PSW            DATA 0xd0
0000            212   _REF0CN         DATA 0xd1
0000            213   _REG0CN         DATA 0xc9
0000            214   _REVID          DATA 0xb6
0000            215   _RSTSRC         DATA 0xef
0000            216   _SBCON1         DATA 0x94
0000            217   _SBRLH1         DATA 0x96
0000            218   _SBRLL1         DATA 0x95
0000            219   _SBUF           DATA 0x99
0000            220   _SBUF0          DATA 0x99
0000            221   _SBUF1          DATA 0x92
0000            222   _SCON           DATA 0x98
0000            223   _SCON0          DATA 0x98
0000            224   _SCON1          DATA 0xc8
0000            225   _SFRPAGE        DATA 0xa7
0000            226   _SFRPGCN        DATA 0xbc
0000            227   _SFRSTACK       DATA 0xd7
0000            228   _SMB0ADM        DATA 0xd6
0000            229   _SMB0ADR        DATA 0xd7
0000            230   _SMB0CF         DATA 0xc1
0000            231   _SMB0CN0        DATA 0xc0
0000            232   _SMB0DAT        DATA 0xc2
0000            233   _SMB0FCN0       DATA 0xc3
0000            234   _SMB0FCN1       DATA 0xc4
0000            235   _SMB0FCT        DATA 0xef
0000            236   _SMB0RXLN       DATA 0xc5
0000            237   _SMB0TC         DATA 0xac
0000            238   _SMOD1          DATA 0x93
0000            239   _SP             DATA 0x81
0000            240   _SPI0CFG        DATA 0xa1
0000            241   _SPI0CKR        DATA 0xa2
0000            242   _SPI0CN0        DATA 0xf8
0000            243   _SPI0DAT        DATA 0xa3
0000            244   _SPI0FCN0       DATA 0x9a
0000            245   _SPI0FCN1       DATA 0x9b
0000            246   _SPI0FCT        DATA 0xf7
0000            247   _SPI0PCF        DATA 0xdf
0000            248   _TCON           DATA 0x88
0000            249   _TH0            DATA 0x8c
0000            250   _TH1            DATA 0x8d
0000            251   _TL0            DATA 0x8a
0000            252   _TL1            DATA 0x8b
0000            253   _TMOD           DATA 0x89
0000            254   _TMR2CN0        DATA 0xc8
0000            255   _TMR2CN1        DATA 0xfd
0000            256   _TMR2H          DATA 0xcf
0000            257   _TMR2L          DATA 0xce
0000            258   _TMR2RLH        DATA 0xcb
0000            259   _TMR2RLL        DATA 0xca
0000            260   _TMR3CN0        DATA 0x91
0000            261   _TMR3CN1        DATA 0xfe
0000            262   _TMR3H          DATA 0x95
0000            263   _TMR3L          DATA 0x94
0000            264   _TMR3RLH        DATA 0x93
0000            265   _TMR3RLL        DATA 0x92
0000            266   _TMR4CN0        DATA 0x98
0000            267   _TMR4CN1        DATA 0xff
0000            268   _TMR4H          DATA 0xa5
0000            269   _TMR4L          DATA 0xa4
0000            270   _TMR4RLH        DATA 0xa3
0000            271   _TMR4RLL        DATA 0xa2
0000            272   _TMR5CN0        DATA 0xc0
0000            273   _TMR5CN1        DATA 0xf1
0000            274   _TMR5H          DATA 0xd5
0000            275   _TMR5L          DATA 0xd4
0000            276   _TMR5RLH        DATA 0xd3
0000            277   _TMR5RLL        DATA 0xd2
0000            278   _UART0PCF       DATA 0xd9
0000            279   _UART1FCN0      DATA 0x9d
0000            280   _UART1FCN1      DATA 0xd8
0000            281   _UART1FCT       DATA 0xfa
0000            282   _UART1LIN       DATA 0x9e
0000            283   _UART1PCF       DATA 0xda
0000            284   _VDM0CN         DATA 0xff
0000            285   _WDTCN          DATA 0x97
0000            286   _XBR0           DATA 0xe1
0000            287   _XBR1           DATA 0xe2
0000            288   _XBR2           DATA 0xe3
0000            289   _XOSC0CN        DATA 0x86
0000            290   _DPTR           DATA 0x8382
0000            291   _TMR2RL         DATA 0xcbca
0000            292   _TMR3RL         DATA 0x9392
0000            293   _TMR4RL         DATA 0xa3a2
0000            294   _TMR5RL         DATA 0xd3d2
0000            295   _TMR0           DATA 0x8c8a
0000            296   _TMR1           DATA 0x8d8b
0000            297   _TMR2           DATA 0xcfce
0000            298   _TMR3           DATA 0x9594
0000            299   _TMR4           DATA 0xa5a4
0000            300   _TMR5           DATA 0xd5d4
0000            301   _SBRL1          DATA 0x9695
0000            302   _PCA0           DATA 0xfaf9
0000            303   _PCA0CP0        DATA 0xfcfb
0000            304   _PCA0CP1        DATA 0xeae9
0000            305   _PCA0CP2        DATA 0xeceb
0000            306   _PCA0CP3        DATA 0xf5f4
0000            307   _PCA0CP4        DATA 0x8584
0000            308   _PCA0CP5        DATA 0xdedd
0000            309   _ADC0ASA        DATA 0xb6b5
0000            310   _ADC0GT         DATA 0xc4c3
0000            311   _ADC0           DATA 0xbebd
0000            312   _ADC0LT         DATA 0xc6c5
0000            313   _DAC0           DATA 0x8584
0000            314   _DAC1           DATA 0x8a89
0000            315   _DAC2           DATA 0x8c8b
0000            316   _DAC3           DATA 0x8e8d
0000            317   ;--------------------------------------------------------
0000            318   ; special function bits
0000            319   ;--------------------------------------------------------
0000            320   _ACC_0          BIT 0xe0
0000            321   _ACC_1          BIT 0xe1
0000            322   _ACC_2          BIT 0xe2
0000            323   _ACC_3          BIT 0xe3
0000            324   _ACC_4          BIT 0xe4
0000            325   _ACC_5          BIT 0xe5
0000            326   _ACC_6          BIT 0xe6
0000            327   _ACC_7          BIT 0xe7
0000            328   _TEMPE          BIT 0xe8
0000            329   _ADGN0          BIT 0xe9
0000            330   _ADGN1          BIT 0xea
0000            331   _ADWINT         BIT 0xeb
0000            332   _ADBUSY         BIT 0xec
0000            333   _ADINT          BIT 0xed
0000            334   _IPOEN          BIT 0xee
0000            335   _ADEN           BIT 0xef
0000            336   _B_0            BIT 0xf0
0000            337   _B_1            BIT 0xf1
0000            338   _B_2            BIT 0xf2
0000            339   _B_3            BIT 0xf3
0000            340   _B_4            BIT 0xf4
0000            341   _B_5            BIT 0xf5
0000            342   _B_6            BIT 0xf6
0000            343   _B_7            BIT 0xf7
0000            344   _C0FIF          BIT 0xe8
0000            345   _C0RIF          BIT 0xe9
0000            346   _C1FIF          BIT 0xea
0000            347   _C1RIF          BIT 0xeb
0000            348   _C2FIF          BIT 0xec
0000            349   _C2RIF          BIT 0xed
0000            350   _C3FIF          BIT 0xee
0000            351   _C3RIF          BIT 0xef
0000            352   _D1SRC0         BIT 0x88
0000            353   _D1SRC1         BIT 0x89
0000            354   _D1AMEN         BIT 0x8a
0000            355   _D01REFSL       BIT 0x8b
0000            356   _D3SRC0         BIT 0x8c
0000            357   _D3SRC1         BIT 0x8d
0000            358   _D3AMEN         BIT 0x8e
0000            359   _D23REFSL       BIT 0x8f
0000            360   _D0UDIS         BIT 0x98
0000            361   _D1UDIS         BIT 0x99
0000            362   _D2UDIS         BIT 0x9a
0000            363   _D3UDIS         BIT 0x9b
0000            364   _EX0            BIT 0xa8
0000            365   _ET0            BIT 0xa9
0000            366   _EX1            BIT 0xaa
0000            367   _ET1            BIT 0xab
0000            368   _ES0            BIT 0xac
0000            369   _ET2            BIT 0xad
0000            370   _ESPI0          BIT 0xae
0000            371   _EA             BIT 0xaf
0000            372   _PX0            BIT 0xb8
0000            373   _PT0            BIT 0xb9
0000            374   _PX1            BIT 0xba
0000            375   _PT1            BIT 0xbb
0000            376   _PS0            BIT 0xbc
0000            377   _PT2            BIT 0xbd
0000            378   _PSPI0          BIT 0xbe
0000            379   _P0_0           BIT 0x80
0000            380   _P0_1           BIT 0x81
0000            381   _P0_2           BIT 0x82
0000            382   _P0_3           BIT 0x83
0000            383   _P0_4           BIT 0x84
0000            384   _P0_5           BIT 0x85
0000            385   _P0_6           BIT 0x86
0000            386   _P0_7           BIT 0x87
0000            387   _P1_0           BIT 0x90
0000            388   _P1_1           BIT 0x91
0000            389   _P1_2           BIT 0x92
0000            390   _P1_3           BIT 0x93
0000            391   _P1_4           BIT 0x94
0000            392   _P1_5           BIT 0x95
0000            393   _P1_6           BIT 0x96
0000            394   _P1_7           BIT 0x97
0000            395   _P2_0           BIT 0xa0
0000            396   _P2_1           BIT 0xa1
0000            397   _P2_2           BIT 0xa2
0000            398   _P2_3           BIT 0xa3
0000            399   _P2_4           BIT 0xa4
0000            400   _P2_5           BIT 0xa5
0000            401   _P2_6           BIT 0xa6
0000            402   _P3_0           BIT 0xb0
0000            403   _P3_1           BIT 0xb1
0000            404   _P3_2           BIT 0xb2
0000            405   _P3_3           BIT 0xb3
0000            406   _P3_4           BIT 0xb4
0000            407   _P3_7           BIT 0xb7
0000            408   _CCF0           BIT 0xd8
0000            409   _CCF1           BIT 0xd9
0000            410   _CCF2           BIT 0xda
0000            411   _CCF3           BIT 0xdb
0000            412   _CCF4           BIT 0xdc
0000            413   _CCF5           BIT 0xdd
0000            414   _CR             BIT 0xde
0000            415   _CF             BIT 0xdf
0000            416   _PARITY         BIT 0xd0
0000            417   _F1             BIT 0xd1
0000            418   _OV             BIT 0xd2
0000            419   _RS0            BIT 0xd3
0000            420   _RS1            BIT 0xd4
0000            421   _F0             BIT 0xd5
0000            422   _AC             BIT 0xd6
0000            423   _CY             BIT 0xd7
0000            424   _RI             BIT 0x98
0000            425   _TI             BIT 0x99
0000            426   _RB8            BIT 0x9a
0000            427   _TB8            BIT 0x9b
0000            428   _REN            BIT 0x9c
0000            429   _CE             BIT 0x9d
0000            430   _SMODE          BIT 0x9e
0000            431   _RI1            BIT 0xc8
0000            432   _TI1            BIT 0xc9
0000            433   _RBX1           BIT 0xca
0000            434   _TBX1           BIT 0xcb
0000            435   _REN1           BIT 0xcc
0000            436   _PERR1          BIT 0xcd
0000            437   _OVR1           BIT 0xce
0000            438   _SI             BIT 0xc0
0000            439   _ACK            BIT 0xc1
0000            440   _ARBLOST        BIT 0xc2
0000            441   _ACKRQ          BIT 0xc3
0000            442   _STO            BIT 0xc4
0000            443   _STA            BIT 0xc5
0000            444   _TXMODE         BIT 0xc6
0000            445   _MASTER         BIT 0xc7
0000            446   _SPIEN          BIT 0xf8
0000            447   _TXNF           BIT 0xf9
0000            448   _NSSMD0         BIT 0xfa
0000            449   _NSSMD1         BIT 0xfb
0000            450   _RXOVRN         BIT 0xfc
0000            451   _MODF           BIT 0xfd
0000            452   _WCOL           BIT 0xfe
0000            453   _SPIF           BIT 0xff
0000            454   _IT0            BIT 0x88
0000            455   _IE0            BIT 0x89
0000            456   _IT1            BIT 0x8a
0000            457   _IE1            BIT 0x8b
0000            458   _TR0            BIT 0x8c
0000            459   _TF0            BIT 0x8d
0000            460   _TR1            BIT 0x8e
0000            461   _TF1            BIT 0x8f
0000            462   _T2XCLK0        BIT 0xc8
0000            463   _T2XCLK1        BIT 0xc9
0000            464   _TR2            BIT 0xca
0000            465   _T2SPLIT        BIT 0xcb
0000            466   _TF2CEN         BIT 0xcc
0000            467   _TF2LEN         BIT 0xcd
0000            468   _TF2L           BIT 0xce
0000            469   _TF2H           BIT 0xcf
0000            470   _T4XCLK0        BIT 0x98
0000            471   _T4XCLK1        BIT 0x99
0000            472   _TR4            BIT 0x9a
0000            473   _T4SPLIT        BIT 0x9b
0000            474   _TF4CEN         BIT 0x9c
0000            475   _TF4LEN         BIT 0x9d
0000            476   _TF4L           BIT 0x9e
0000            477   _TF4H           BIT 0x9f
0000            478   _T5XCLK0        BIT 0xc0
0000            479   _T5XCLK1        BIT 0xc1
0000            480   _TR5            BIT 0xc2
0000            481   _T5SPLIT        BIT 0xc3
0000            482   _TF5CEN         BIT 0xc4
0000            483   _TF5LEN         BIT 0xc5
0000            484   _TF5L           BIT 0xc6
0000            485   _TF5H           BIT 0xc7
0000            486   _RIE            BIT 0xd8
0000            487   _RXTO0          BIT 0xd9
0000            488   _RXTO1          BIT 0xda
0000            489   _RFRQ           BIT 0xdb
0000            490   _TIE            BIT 0xdc
0000            491   _TXHOLD         BIT 0xdd
0000            492   _TXNF1          BIT 0xde
0000            493   _TFRQ           BIT 0xdf
0000            494   ;--------------------------------------------------------
0000            495   ; overlayable register banks
0000            496   ;--------------------------------------------------------
0000            497            rbank0 segment data overlay
0000            498   ;--------------------------------------------------------
0000            499   ; internal ram data
0000            500   ;--------------------------------------------------------
0000            501            rseg R_DSEG
0000            502   _overflow_count:
0000            503            ds 1
0001            504   _LCDprint_PARM_2:
0001            505            ds 1
0002            506   _write_rx_PARM_2:
0002            507            ds 2
0004            508   _write_rx_buff_1_47:
0004            509            ds 3
0007            510   _write_rx_sloc0_1_0:
0007            511            ds 2
0009            512   _display_rx_PARM_2:
0009            513            ds 2
000B            514   _display_period_buff_1_55:
000B            515            ds 16
001B            516   _display_freq_kHz_buff_1_57:
001B            517            ds 16
002B            518   _display_capacitance_nF_buff_1_59:
002B            519            ds 16
003B            520   _calculate_period_s_PARM_2:
003B            521            ds 2
003D            522   _calculate_period_s_PARM_3:
003D            523            ds 2
003F            524   _main_capacitance_nF_1_67:
003F            525            ds 4
0043            526   _main_success_count_1_67:
0043            527            ds 2
0045            528   ;--------------------------------------------------------
0045            529   ; overlayable items in internal ram 
0045            530   ;--------------------------------------------------------
0000            531            rseg    R_OSEG
0000            532   ;--------------------------------------------------------
0000            533   ; indirectly addressable internal ram data
0000            534   ;--------------------------------------------------------
0000            535            rseg R_ISEG
0000            536   ;--------------------------------------------------------
0000            537   ; absolute internal ram data
0000            538   ;--------------------------------------------------------
0000            539            DSEG
0000            540   ;--------------------------------------------------------
0000            541   ; bit data
0000            542   ;--------------------------------------------------------
0000            543            rseg R_BSEG
0000            544   _LCDprint_PARM_3:
0000            545            DBIT    1
0001            546   ;--------------------------------------------------------
0001            547   ; paged external ram data
0001            548   ;--------------------------------------------------------
0000            549            rseg R_PSEG
0000            550   ;--------------------------------------------------------
0000            551   ; external ram data
0000            552   ;--------------------------------------------------------
0000            553            rseg R_XSEG
0000            554   ;--------------------------------------------------------
0000            555   ; absolute external ram data
0000            556   ;--------------------------------------------------------
0000            557            XSEG
0000            558   ;--------------------------------------------------------
0000            559   ; external initialized ram data
0000            560   ;--------------------------------------------------------
0000            561            rseg R_IXSEG
0000            562            rseg R_HOME
0000            563            rseg R_GSINIT
0000            564            rseg R_CSEG
0000            565   ;--------------------------------------------------------
0000            566   ; Reset entry point and interrupt vectors
0000            567   ;--------------------------------------------------------
0000            568            CSEG at 0x0000
0000 020000     569            ljmp    _crt0
0003            570   ;--------------------------------------------------------
0003            571   ; global & static initialisations
0003            572   ;--------------------------------------------------------
0000            573            rseg R_HOME
0000            574            rseg R_GSINIT
0000            575            rseg R_GSINIT
0000            576   ;--------------------------------------------------------
0000            577   ; data variables initialization
0000            578   ;--------------------------------------------------------
0000            579            rseg R_DINIT
0000            580            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            581   ;--------------------------------------------------------
0000            582   ; code
0000            583   ;--------------------------------------------------------
0000            584            rseg R_CSEG
0000            585   ;------------------------------------------------------------
0000            586   ;Allocation info for local variables in function '_c51_external_startup'
0000            587   ;------------------------------------------------------------
0000            588   ;------------------------------------------------------------
0000            589   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:54: char _c51_external_startup(void) {
0000            590   ;        -----------------------------------------
0000            591   ;         function _c51_external_startup
0000            592   ;        -----------------------------------------
0000            593   __c51_external_startup:
0000            594            using   0
0000            595   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:56: SFRPAGE = 0x00;
0000 75A700     596            mov     _SFRPAGE,#0x00
0003            597   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:57: WDTCN = 0xDE; // First Key
0003 7597DE     598            mov     _WDTCN,#0xDE
0006            599   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:58: WDTCN = 0xAD; // Second Key
0006 7597AD     600            mov     _WDTCN,#0xAD
0009            601   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:60: VDM0CN |= 0x80;
0009 43FF80     602            orl     _VDM0CN,#0x80
000C            603   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:61: RSTSRC = 0x02;
000C 75EF02     604            mov     _RSTSRC,#0x02
000F            605   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:69: SFRPAGE = 0x10;
000F 75A710     606            mov     _SFRPAGE,#0x10
0012            607   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:70: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     608            mov     _PFE0CN,#0x20
0015            609   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:71: SFRPAGE = 0x00;
0015 75A700     610            mov     _SFRPAGE,#0x00
0018            611   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:93: CLKSEL = 0x00;
0018 75A900     612            mov     _CLKSEL,#0x00
001B            613   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:94: CLKSEL = 0x00;
001B 75A900     614            mov     _CLKSEL,#0x00
001E            615   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:95: while ((CLKSEL & 0x80) == 0);
001E            616   L002001?:
001E E5A9       617            mov     a,_CLKSEL
0020 30E790     618            jnb     acc.7,L002001?
0023            619   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:96: CLKSEL = 0x03;
0023 75A903     620            mov     _CLKSEL,#0x03
0026            621   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:97: CLKSEL = 0x03;
0026 75A903     622            mov     _CLKSEL,#0x03
0029            623   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:98: while ((CLKSEL & 0x80) == 0);
0029            624   L002004?:
0029 E5A9       625            mov     a,_CLKSEL
002B 30E710     626            jnb     acc.7,L002004?
002E            627   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:103: P0MDOUT |= 0x10; // Enable UART0 TX As Push-Pull Output
002E 43A410     628            orl     _P0MDOUT,#0x10
0031            629   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:104: XBR0     = 0x01; // Enable UART0 on P0.4 (TX) and P0.5 (RX)
0031 75E101     630            mov     _XBR0,#0x01
0034            631   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:105: XBR1     = 0X00; // Enable T0 on P0.0
0034 75E200     632            mov     _XBR1,#0x00
0037            633   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:106: XBR2     = 0x40; // Enable Crossbar and Weak Pull-Ups
0037 75E340     634            mov     _XBR2,#0x40
003A            635   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:113: SCON0 = 0x10;
003A 759810     636            mov     _SCON0,#0x10
003D            637   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:114: CKCON0 |= 0b_0000_0000 ; // Timer 1 Uses SYSCLK / 12
003D 858E8E     638            mov     _CKCON0,_CKCON0
0040            639   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:115: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L)); // Set Timer1 Reload Value, Initial Value
0040 758DE6     640            mov     _TH1,#0xE6
0043            641   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:116: TL1 = TH1;      // Init Timer1
0043 858D8B     642            mov     _TL1,_TH1
0046            643   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:117: TMOD &= ~0xf0;  // TMOD: Timer 1 in 8-bit auto-reload
0046 53890F     644            anl     _TMOD,#0x0F
0049            645   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:118: TMOD |=  0x20;
0049 438920     646            orl     _TMOD,#0x20
004C            647   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:119: TR1 = 1; // Start Timer1
004C D28E       648            setb    _TR1
004E            649   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:120: TI = 1;  // Indicate TX0 Ready
004E D299       650            setb    _TI
0050            651   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:122: return 0;
0050 758200     652            mov     dpl,#0x00
0053 22         653            ret
0054            654   ;------------------------------------------------------------
0054            655   ;Allocation info for local variables in function 'Timer3us'
0054            656   ;------------------------------------------------------------
0054            657   ;us                        Allocated to registers r2 
0054            658   ;i                         Allocated to registers r3 
0054            659   ;------------------------------------------------------------
0054            660   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:128: void Timer3us(unsigned char us) {
0054            661   ;        -----------------------------------------
0054            662   ;         function Timer3us
0054            663   ;        -----------------------------------------
0054            664   _Timer3us:
0054 AA82       665            mov     r2,dpl
0056            666   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:132: CKCON0 |= 0b_0100_0000;
0056 438E40     667            orl     _CKCON0,#0x40
0059            668   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:134: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to Overflow in 1us
0059 7592B8     669            mov     _TMR3RL,#0xB8
005C 7593FF     670            mov     (_TMR3RL >> 8),#0xFF
005F            671   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:135: TMR3 = TMR3RL;                 // Initialize Timer3 for First Overflow
005F 859294     672            mov     _TMR3,_TMR3RL
0062 859395     673            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0065            674   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:137: TMR3CN0 = 0x04;                 // Start Timer3 and Clear Overflow Flag
0065 759104     675            mov     _TMR3CN0,#0x04
0068            676   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:138: for (i = 0; i < us; i++) {      // Count Overflows (#Microseconds)
0068 7B00       677            mov     r3,#0x00
006A            678   L003004?:
006A C3         679            clr     c
006B EB         680            mov     a,r3
006C 9A         681            subb    a,r2
006D 5000       682            jnc     L003007?
006F            683   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:139: while (!(TMR3CN0 & 0x80));  // Wait for Overflow
006F            684   L003001?:
006F E591       685            mov     a,_TMR3CN0
0071 30E710     686            jnb     acc.7,L003001?
0074            687   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:140: TMR3CN0 &= ~(0x80);         // Clear Overflow Indicator
0074 53917F     688            anl     _TMR3CN0,#0x7F
0077            689   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:138: for (i = 0; i < us; i++) {      // Count Overflows (#Microseconds)
0077 0B         690            inc     r3
0078 8000       691            sjmp    L003004?
007A            692   L003007?:
007A            693   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:142: TMR3CN0 = 0 ;                   // Stop Timer3 and Clear Overflow Flag
007A 759100     694            mov     _TMR3CN0,#0x00
007D 22         695            ret
007E            696   ;------------------------------------------------------------
007E            697   ;Allocation info for local variables in function 'waitms'
007E            698   ;------------------------------------------------------------
007E            699   ;ms                        Allocated to registers r2 r3 
007E            700   ;j                         Allocated to registers r2 r3 
007E            701   ;------------------------------------------------------------
007E            702   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:145: void waitms (unsigned int ms) {
007E            703   ;        -----------------------------------------
007E            704   ;         function waitms
007E            705   ;        -----------------------------------------
007E            706   _waitms:
007E AA82       707            mov     r2,dpl
0080 AB83       708            mov     r3,dph
0082            709   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:147: for (j = ms; j != 0; j--) {
0082            710   L004001?:
0082 BA00D0     711            cjne    r2,#0x00,L004010?
0085 BB00D0     712            cjne    r3,#0x00,L004010?
0088 22         713            ret
0089            714   L004010?:
0089            715   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:148: Timer3us(249);
0089 7582F9     716            mov     dpl,#0xF9
008C C002       717            push    ar2
008E C003       718            push    ar3
0090 120000     719            lcall   _Timer3us
0093            720   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:149: Timer3us(249);
0093 7582F9     721            mov     dpl,#0xF9
0096 120000     722            lcall   _Timer3us
0099            723   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:150: Timer3us(249);
0099 7582F9     724            mov     dpl,#0xF9
009C 120000     725            lcall   _Timer3us
009F            726   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:151: Timer3us(250);
009F 7582FA     727            mov     dpl,#0xFA
00A2 120000     728            lcall   _Timer3us
00A5 D003       729            pop     ar3
00A7 D002       730            pop     ar2
00A9            731   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:147: for (j = ms; j != 0; j--) {
00A9 1A         732            dec     r2
00AA BAFF10     733            cjne    r2,#0xff,L004011?
00AD 1B         734            dec     r3
00AE            735   L004011?:
00AE 8000       736            sjmp    L004001?
00B0            737   ;------------------------------------------------------------
00B0            738   ;Allocation info for local variables in function 'TIMER0_Init'
00B0            739   ;------------------------------------------------------------
00B0            740   ;------------------------------------------------------------
00B0            741   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:155: void TIMER0_Init(void) {
00B0            742   ;        -----------------------------------------
00B0            743   ;         function TIMER0_Init
00B0            744   ;        -----------------------------------------
00B0            745   _TIMER0_Init:
00B0            746   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:156: TMOD &= 0b_1111_0000; // Set the Bits of Timer/Counter 0 to 0
00B0 5389F0     747            anl     _TMOD,#0xF0
00B3            748   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:157: TMOD |= 0b_0000_0001; // Timer/Counter 0 Used As 16-Bit Timer
00B3 438901     749            orl     _TMOD,#0x01
00B6            750   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:158: TR0 = 0; // Stop Timer/Counter 0
00B6 C28C       751            clr     _TR0
00B8 22         752            ret
00B9            753   ;------------------------------------------------------------
00B9            754   ;Allocation info for local variables in function 'Serial_Init'
00B9            755   ;------------------------------------------------------------
00B9            756   ;------------------------------------------------------------
00B9            757   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:161: void Serial_Init(void) {
00B9            758   ;        -----------------------------------------
00B9            759   ;         function Serial_Init
00B9            760   ;        -----------------------------------------
00B9            761   _Serial_Init:
00B9            762   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:162: waitms(500); // Give Putty a chance to start.
00B9 9001F4     763            mov     dptr,#0x01F4
00BC 120000     764            lcall   _waitms
00BF            765   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:163: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
00BF 7450       766            mov     a,#__str_0
00C1 C0E0       767            push    acc
00C3 74BC       768            mov     a,#(__str_0 >> 8)
00C5 C0E0       769            push    acc
00C7 7480       770            mov     a,#0x80
00C9 C0E0       771            push    acc
00CB 120000     772            lcall   _printf
00CE 1581       773            dec     sp
00D0 1581       774            dec     sp
00D2 1581       775            dec     sp
00D4 22         776            ret
00D5            777   ;------------------------------------------------------------
00D5            778   ;Allocation info for local variables in function 'LCD_pulse'
00D5            779   ;------------------------------------------------------------
00D5            780   ;------------------------------------------------------------
00D5            781   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:166: void LCD_pulse(void) {
00D5            782   ;        -----------------------------------------
00D5            783   ;         function LCD_pulse
00D5            784   ;        -----------------------------------------
00D5            785   _LCD_pulse:
00D5            786   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:167: LCD_E = 1; // Pulse the Enable Pin
00D5 D2A0       787            setb    _P2_0
00D7            788   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:168: Timer3us(40); // Wait for 40us
00D7 758228     789            mov     dpl,#0x28
00DA 120000     790            lcall   _Timer3us
00DD            791   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:169: LCD_E = 0; // Pulse the Enable Pin
00DD C2A0       792            clr     _P2_0
00DF 22         793            ret
00E0            794   ;------------------------------------------------------------
00E0            795   ;Allocation info for local variables in function 'LCD_byte'
00E0            796   ;------------------------------------------------------------
00E0            797   ;x                         Allocated to registers r2 
00E0            798   ;------------------------------------------------------------
00E0            799   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:172: void LCD_byte(unsigned char x) {
00E0            800   ;        -----------------------------------------
00E0            801   ;         function LCD_byte
00E0            802   ;        -----------------------------------------
00E0            803   _LCD_byte:
00E0 AA82       804            mov     r2,dpl
00E2            805   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:175: ACC = x; // Send High Nibble
00E2 8AE0       806            mov     _ACC,r2
00E4            807   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:176: LCD_D7 = ACC_7;
00E4 A2E7       808            mov     c,_ACC_7
00E6 9290       809            mov     _P1_0,c
00E8            810   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:177: LCD_D6 = ACC_6;
00E8 A2E6       811            mov     c,_ACC_6
00EA 9291       812            mov     _P1_1,c
00EC            813   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:178: LCD_D5 = ACC_5;
00EC A2E5       814            mov     c,_ACC_5
00EE 9292       815            mov     _P1_2,c
00F0            816   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:179: LCD_D4 = ACC_4;
00F0 A2E4       817            mov     c,_ACC_4
00F2 9293       818            mov     _P1_3,c
00F4            819   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:180: LCD_pulse();
00F4 C002       820            push    ar2
00F6 120000     821            lcall   _LCD_pulse
00F9            822   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:182: Timer3us(40); // Wait for 40us
00F9 758228     823            mov     dpl,#0x28
00FC 120000     824            lcall   _Timer3us
00FF D002       825            pop     ar2
0101            826   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:184: ACC = x; // Send Low Nibble
0101 8AE0       827            mov     _ACC,r2
0103            828   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:185: LCD_D7 = ACC_3;
0103 A2E3       829            mov     c,_ACC_3
0105 9290       830            mov     _P1_0,c
0107            831   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:186: LCD_D6 = ACC_2;
0107 A2E2       832            mov     c,_ACC_2
0109 9291       833            mov     _P1_1,c
010B            834   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:187: LCD_D5 = ACC_1;
010B A2E1       835            mov     c,_ACC_1
010D 9292       836            mov     _P1_2,c
010F            837   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:188: LCD_D4 = ACC_0;
010F A2E0       838            mov     c,_ACC_0
0111 9293       839            mov     _P1_3,c
0113            840   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:189: LCD_pulse();
0113 020000     841            ljmp    _LCD_pulse
0116            842   ;------------------------------------------------------------
0116            843   ;Allocation info for local variables in function 'WriteData'
0116            844   ;------------------------------------------------------------
0116            845   ;x                         Allocated to registers r2 
0116            846   ;------------------------------------------------------------
0116            847   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:192: void WriteData(unsigned char x) {
0116            848   ;        -----------------------------------------
0116            849   ;         function WriteData
0116            850   ;        -----------------------------------------
0116            851   _WriteData:
0116 AA82       852            mov     r2,dpl
0118            853   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:193: LCD_RS = 1; // Set LCD to Data Mode
0118 D297       854            setb    _P1_7
011A            855   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:194: LCD_byte(x); // Write the Data
011A 8A82       856            mov     dpl,r2
011C 120000     857            lcall   _LCD_byte
011F            858   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:195: waitms(2); // Wait for 2ms
011F 900002     859            mov     dptr,#0x0002
0122 020000     860            ljmp    _waitms
0125            861   ;------------------------------------------------------------
0125            862   ;Allocation info for local variables in function 'WriteCommand'
0125            863   ;------------------------------------------------------------
0125            864   ;x                         Allocated to registers r2 
0125            865   ;------------------------------------------------------------
0125            866   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:198: void WriteCommand(unsigned char x) {
0125            867   ;        -----------------------------------------
0125            868   ;         function WriteCommand
0125            869   ;        -----------------------------------------
0125            870   _WriteCommand:
0125 AA82       871            mov     r2,dpl
0127            872   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:199: LCD_RS = 0; // Set LCD to Command Mode
0127 C297       873            clr     _P1_7
0129            874   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:200: LCD_byte(x); // Write the Command
0129 8A82       875            mov     dpl,r2
012B 120000     876            lcall   _LCD_byte
012E            877   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:201: waitms(5); // Wait for 5ms
012E 900005     878            mov     dptr,#0x0005
0131 020000     879            ljmp    _waitms
0134            880   ;------------------------------------------------------------
0134            881   ;Allocation info for local variables in function 'LCD_4BIT'
0134            882   ;------------------------------------------------------------
0134            883   ;------------------------------------------------------------
0134            884   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:204: void LCD_4BIT(void) {
0134            885   ;        -----------------------------------------
0134            886   ;         function LCD_4BIT
0134            887   ;        -----------------------------------------
0134            888   _LCD_4BIT:
0134            889   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:205: LCD_E = 0; // Resting State of LCD Enable Pin is 0.
0134 C2A0       890            clr     _P2_0
0136            891   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:206: waitms(20); // Wait for 20ms
0136 900014     892            mov     dptr,#0x0014
0139 120000     893            lcall   _waitms
013C            894   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:209: WriteCommand(0x33); // Change to 8-bit Mode
013C 758233     895            mov     dpl,#0x33
013F 120000     896            lcall   _WriteCommand
0142            897   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:210: WriteCommand(0x33); // Change to 8-bit Mode
0142 758233     898            mov     dpl,#0x33
0145 120000     899            lcall   _WriteCommand
0148            900   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:211: WriteCommand(0x32); // Change to 4-bit Mode
0148 758232     901            mov     dpl,#0x32
014B 120000     902            lcall   _WriteCommand
014E            903   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:214: WriteCommand(0x28); // 4-bit, 2 Line, 5x7 Dots
014E 758228     904            mov     dpl,#0x28
0151 120000     905            lcall   _WriteCommand
0154            906   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:215: WriteCommand(0x0c); // Display On, No Cursor, No Blink
0154 75820C     907            mov     dpl,#0x0C
0157 120000     908            lcall   _WriteCommand
015A            909   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:216: WriteCommand(0x01); // Clear Screen Command (Takes Some Time)
015A 758201     910            mov     dpl,#0x01
015D 120000     911            lcall   _WriteCommand
0160            912   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:217: waitms(20); // Wait 20ms for Clear Screen Command to Finish
0160 900014     913            mov     dptr,#0x0014
0163 020000     914            ljmp    _waitms
0166            915   ;------------------------------------------------------------
0166            916   ;Allocation info for local variables in function 'LCDprint'
0166            917   ;------------------------------------------------------------
0166            918   ;line                      Allocated with name '_LCDprint_PARM_2'
0166            919   ;string                    Allocated to registers r2 r3 r4 
0166            920   ;j                         Allocated to registers r5 r6 
0166            921   ;------------------------------------------------------------
0166            922   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:220: void LCDprint(char * string, unsigned char line, bit clear) {
0166            923   ;        -----------------------------------------
0166            924   ;         function LCDprint
0166            925   ;        -----------------------------------------
0166            926   _LCDprint:
0166 AA82       927            mov     r2,dpl
0168 AB83       928            mov     r3,dph
016A ACF0       929            mov     r4,b
016C            930   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:223: WriteCommand(line == 2 ? 0xc0 : 0x80); // Set Cursor
016C 7402       931            mov     a,#0x02
016E B55050     932            cjne    a,_LCDprint_PARM_2,L012013?
0171 7DC0       933            mov     r5,#0xC0
0173 8000       934            sjmp    L012014?
0175            935   L012013?:
0175 7D80       936            mov     r5,#0x80
0177            937   L012014?:
0177 8D82       938            mov     dpl,r5
0179 C002       939            push    ar2
017B C003       940            push    ar3
017D C004       941            push    ar4
017F 120000     942            lcall   _WriteCommand
0182            943   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:224: waitms(5); // Wait for 5ms
0182 900005     944            mov     dptr,#0x0005
0185 120000     945            lcall   _waitms
0188 D004       946            pop     ar4
018A D003       947            pop     ar3
018C D002       948            pop     ar2
018E            949   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:225: for (j = 0; string[j] != 0; j++) WriteData(string[j]); // Write Message
018E 7D00       950            mov     r5,#0x00
0190 7E00       951            mov     r6,#0x00
0192            952   L012003?:
0192 ED         953            mov     a,r5
0193 2A         954            add     a,r2
0194 FF         955            mov     r7,a
0195 EE         956            mov     a,r6
0196 3B         957            addc    a,r3
0197 F8         958            mov     r0,a
0198 8C01       959            mov     ar1,r4
019A 8F82       960            mov     dpl,r7
019C 8883       961            mov     dph,r0
019E 89F0       962            mov     b,r1
01A0 120000     963            lcall   __gptrget
01A3 FF         964            mov     r7,a
01A4 6000       965            jz      L012006?
01A6 8F82       966            mov     dpl,r7
01A8 C002       967            push    ar2
01AA C003       968            push    ar3
01AC C004       969            push    ar4
01AE C005       970            push    ar5
01B0 C006       971            push    ar6
01B2 120000     972            lcall   _WriteData
01B5 D006       973            pop     ar6
01B7 D005       974            pop     ar5
01B9 D004       975            pop     ar4
01BB D003       976            pop     ar3
01BD D002       977            pop     ar2
01BF 0D         978            inc     r5
01C0 BD00D0     979            cjne    r5,#0x00,L012003?
01C3 0E         980            inc     r6
01C4 8000       981            sjmp    L012003?
01C6            982   L012006?:
01C6            983   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:226: if (clear) for (; j < CHARS_PER_LINE; j++) WriteData(' '); // Clear Rest of Line
01C6 30C090     984            jnb     _LCDprint_PARM_3,L012011?
01C9 8D02       985            mov     ar2,r5
01CB 8E03       986            mov     ar3,r6
01CD            987   L012007?:
01CD C3         988            clr     c
01CE EA         989            mov     a,r2
01CF 9410       990            subb    a,#0x10
01D1 EB         991            mov     a,r3
01D2 6480       992            xrl     a,#0x80
01D4 9480       993            subb    a,#0x80
01D6 5000       994            jnc     L012011?
01D8 758220     995            mov     dpl,#0x20
01DB C002       996            push    ar2
01DD C003       997            push    ar3
01DF 120000     998            lcall   _WriteData
01E2 D003       999            pop     ar3
01E4 D002      1000            pop     ar2
01E6 0A        1001            inc     r2
01E7 BA00D0    1002            cjne    r2,#0x00,L012007?
01EA 0B        1003            inc     r3
01EB 8000      1004            sjmp    L012007?
01ED           1005   L012011?:
01ED 22        1006            ret
01EE           1007   ;------------------------------------------------------------
01EE           1008   ;Allocation info for local variables in function 'write_rx'
01EE           1009   ;------------------------------------------------------------
01EE           1010   ;len                       Allocated with name '_write_rx_PARM_2'
01EE           1011   ;buff                      Allocated with name '_write_rx_buff_1_47'
01EE           1012   ;j                         Allocated with name '_write_rx_sloc0_1_0'
01EE           1013   ;c                         Allocated to registers r3 
01EE           1014   ;sloc0                     Allocated with name '_write_rx_sloc0_1_0'
01EE           1015   ;------------------------------------------------------------
01EE           1016   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:229: int write_rx(char* buff, int len) {
01EE           1017   ;        -----------------------------------------
01EE           1018   ;         function write_rx
01EE           1019   ;        -----------------------------------------
01EE           1020   _write_rx:
01EE 858220    1021            mov     _write_rx_buff_1_47,dpl
01F1 858321    1022            mov     (_write_rx_buff_1_47 + 1),dph
01F4 85F022    1023            mov     (_write_rx_buff_1_47 + 2),b
01F7           1024   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:233: for (j = 0; j < (len-1); j++) {
01F7 E4        1025            clr     a
01F8 F570      1026            mov     _write_rx_sloc0_1_0,a
01FA F571      1027            mov     (_write_rx_sloc0_1_0 + 1),a
01FC E500      1028            mov     a,_write_rx_PARM_2
01FE 24FF      1029            add     a,#0xff
0200 FF        1030            mov     r7,a
0201 E501      1031            mov     a,(_write_rx_PARM_2 + 1)
0203 34FF      1032            addc    a,#0xff
0205 F8        1033            mov     r0,a
0206 7900      1034            mov     r1,#0x00
0208 7A00      1035            mov     r2,#0x00
020A           1036   L013005?:
020A C3        1037            clr     c
020B E9        1038            mov     a,r1
020C 9F        1039            subb    a,r7
020D EA        1040            mov     a,r2
020E 6480      1041            xrl     a,#0x80
0210 88F0      1042            mov     b,r0
0212 63F080    1043            xrl     b,#0x80
0215 95F0      1044            subb    a,b
0217 5000      1045            jnc     L013008?
0219           1046   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:234: c = getchar();
0219 C002      1047            push    ar2
021B C007      1048            push    ar7
021D C000      1049            push    ar0
021F C001      1050            push    ar1
0221 120000    1051            lcall   _getchar
0224 AB82      1052            mov     r3,dpl
0226 D001      1053            pop     ar1
0228 D000      1054            pop     ar0
022A D007      1055            pop     ar7
022C D002      1056            pop     ar2
022E           1057   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:235: if ( (c == '\n') || (c == '\r') ) {
022E BB0AD0    1058            cjne    r3,#0x0A,L013015?
0231 8000      1059            sjmp    L013001?
0233           1060   L013015?:
0233 BB0D50    1061            cjne    r3,#0x0D,L013002?
0236           1062   L013001?:
0236           1063   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:236: buff[j] = 0;
0236 E570      1064            mov     a,_write_rx_sloc0_1_0
0238 2520      1065            add     a,_write_rx_buff_1_47
023A FC        1066            mov     r4,a
023B E571      1067            mov     a,(_write_rx_sloc0_1_0 + 1)
023D 3521      1068            addc    a,(_write_rx_buff_1_47 + 1)
023F FD        1069            mov     r5,a
0240 AE22      1070            mov     r6,(_write_rx_buff_1_47 + 2)
0242 8C82      1071            mov     dpl,r4
0244 8D83      1072            mov     dph,r5
0246 8EF0      1073            mov     b,r6
0248 E4        1074            clr     a
0249 120000    1075            lcall   __gptrput
024C           1076   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:237: return j;
024C 857082    1077            mov     dpl,_write_rx_sloc0_1_0
024F 857183    1078            mov     dph,(_write_rx_sloc0_1_0 + 1)
0252 22        1079            ret
0253           1080   L013002?:
0253           1081   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:239: buff[j] = c;
0253 E9        1082            mov     a,r1
0254 2520      1083            add     a,_write_rx_buff_1_47
0256 FC        1084            mov     r4,a
0257 EA        1085            mov     a,r2
0258 3521      1086            addc    a,(_write_rx_buff_1_47 + 1)
025A FD        1087            mov     r5,a
025B AE22      1088            mov     r6,(_write_rx_buff_1_47 + 2)
025D 8C82      1089            mov     dpl,r4
025F 8D83      1090            mov     dph,r5
0261 8EF0      1091            mov     b,r6
0263 EB        1092            mov     a,r3
0264 120000    1093            lcall   __gptrput
0267           1094   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:233: for (j = 0; j < (len-1); j++) {
0267 09        1095            inc     r1
0268 B900D0    1096            cjne    r1,#0x00,L013018?
026B 0A        1097            inc     r2
026C           1098   L013018?:
026C 8970      1099            mov     _write_rx_sloc0_1_0,r1
026E 8A71      1100            mov     (_write_rx_sloc0_1_0 + 1),r2
0270 8000      1101            sjmp    L013005?
0272           1102   L013008?:
0272           1103   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:242: buff[j] = 0;
0272 E570      1104            mov     a,_write_rx_sloc0_1_0
0274 2520      1105            add     a,_write_rx_buff_1_47
0276 FA        1106            mov     r2,a
0277 E571      1107            mov     a,(_write_rx_sloc0_1_0 + 1)
0279 3521      1108            addc    a,(_write_rx_buff_1_47 + 1)
027B FB        1109            mov     r3,a
027C AC22      1110            mov     r4,(_write_rx_buff_1_47 + 2)
027E 8A82      1111            mov     dpl,r2
0280 8B83      1112            mov     dph,r3
0282 8CF0      1113            mov     b,r4
0284 E4        1114            clr     a
0285 120000    1115            lcall   __gptrput
0288           1116   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:243: return len;
0288 850082    1117            mov     dpl,_write_rx_PARM_2
028B 850183    1118            mov     dph,(_write_rx_PARM_2 + 1)
028E 22        1119            ret
028F           1120   ;------------------------------------------------------------
028F           1121   ;Allocation info for local variables in function 'display_rx'
028F           1122   ;------------------------------------------------------------
028F           1123   ;len                       Allocated with name '_display_rx_PARM_2'
028F           1124   ;buff                      Allocated to registers r2 r3 r4 
028F           1125   ;------------------------------------------------------------
028F           1126   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:246: void display_rx(char* buff, int len) {
028F           1127   ;        -----------------------------------------
028F           1128   ;         function display_rx
028F           1129   ;        -----------------------------------------
028F           1130   _display_rx:
028F AA82      1131            mov     r2,dpl
0291 AB83      1132            mov     r3,dph
0293 ACF0      1133            mov     r4,b
0295           1134   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:247: printf("Type Intended Display in Line 2 (16 Char Max): ");
0295 C002      1135            push    ar2
0297 C003      1136            push    ar3
0299 C004      1137            push    ar4
029B 7410      1138            mov     a,#__str_1
029D C0E0      1139            push    acc
029F 74C1      1140            mov     a,#(__str_1 >> 8)
02A1 C0E0      1141            push    acc
02A3 7480      1142            mov     a,#0x80
02A5 C0E0      1143            push    acc
02A7 120000    1144            lcall   _printf
02AA 1581      1145            dec     sp
02AC 1581      1146            dec     sp
02AE 1581      1147            dec     sp
02B0 D004      1148            pop     ar4
02B2 D003      1149            pop     ar3
02B4 D002      1150            pop     ar2
02B6           1151   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:248: write_rx(buff, len);
02B6 85B000    1152            mov     _write_rx_PARM_2,_display_rx_PARM_2
02B9 85B101    1153            mov     (_write_rx_PARM_2 + 1),(_display_rx_PARM_2 + 1)
02BC 8A82      1154            mov     dpl,r2
02BE 8B83      1155            mov     dph,r3
02C0 8CF0      1156            mov     b,r4
02C2 C002      1157            push    ar2
02C4 C003      1158            push    ar3
02C6 C004      1159            push    ar4
02C8 120000    1160            lcall   _write_rx
02CB           1161   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:249: printf("\n");
02CB 7450      1162            mov     a,#__str_2
02CD C0E0      1163            push    acc
02CF 74C1      1164            mov     a,#(__str_2 >> 8)
02D1 C0E0      1165            push    acc
02D3 7480      1166            mov     a,#0x80
02D5 C0E0      1167            push    acc
02D7 120000    1168            lcall   _printf
02DA 1581      1169            dec     sp
02DC 1581      1170            dec     sp
02DE 1581      1171            dec     sp
02E0 D004      1172            pop     ar4
02E2 D003      1173            pop     ar3
02E4 D002      1174            pop     ar2
02E6           1175   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:250: LCDprint(buff, 1, 1);
02E6 755001    1176            mov     _LCDprint_PARM_2,#0x01
02E9 D2C0      1177            setb    _LCDprint_PARM_3
02EB 8A82      1178            mov     dpl,r2
02ED 8B83      1179            mov     dph,r3
02EF 8CF0      1180            mov     b,r4
02F1 020000    1181            ljmp    _LCDprint
02F4           1182   ;------------------------------------------------------------
02F4           1183   ;Allocation info for local variables in function 'display_period'
02F4           1184   ;------------------------------------------------------------
02F4           1185   ;period                    Allocated to registers r2 r3 r4 r5 
02F4           1186   ;buff                      Allocated with name '_display_period_buff_1_55'
02F4           1187   ;------------------------------------------------------------
02F4           1188   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:253: void display_period(float period) {
02F4           1189   ;        -----------------------------------------
02F4           1190   ;         function display_period
02F4           1191   ;        -----------------------------------------
02F4           1192   _display_period:
02F4 AA82      1193            mov     r2,dpl
02F6 AB83      1194            mov     r3,dph
02F8 ACF0      1195            mov     r4,b
02FA FD        1196            mov     r5,a
02FB           1197   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:255: sprintf(buff, "T: %.3f s", period); // Format the Period Value
02FB C002      1198            push    ar2
02FD C003      1199            push    ar3
02FF C004      1200            push    ar4
0301 C005      1201            push    ar5
0303 7490      1202            mov     a,#__str_3
0305 C0E0      1203            push    acc
0307 74C1      1204            mov     a,#(__str_3 >> 8)
0309 C0E0      1205            push    acc
030B 7480      1206            mov     a,#0x80
030D C0E0      1207            push    acc
030F 74C0      1208            mov     a,#_display_period_buff_1_55
0311 C0E0      1209            push    acc
0313 74B7      1210            mov     a,#(_display_period_buff_1_55 >> 8)
0315 C0E0      1211            push    acc
0317 7440      1212            mov     a,#0x40
0319 C0E0      1213            push    acc
031B 120000    1214            lcall   _sprintf
031E E581      1215            mov     a,sp
0320 24F6      1216            add     a,#0xf6
0322 F581      1217            mov     sp,a
0324           1218   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:256: LCDprint(buff, 2, 1); // Write to LCD
0324 755002    1219            mov     _LCDprint_PARM_2,#0x02
0327 D2C0      1220            setb    _LCDprint_PARM_3
0329 90B7C0    1221            mov     dptr,#_display_period_buff_1_55
032C 75F040    1222            mov     b,#0x40
032F 020000    1223            ljmp    _LCDprint
0332           1224   ;------------------------------------------------------------
0332           1225   ;Allocation info for local variables in function 'display_freq_kHz'
0332           1226   ;------------------------------------------------------------
0332           1227   ;freq_kHz                  Allocated to registers r2 r3 r4 r5 
0332           1228   ;buff                      Allocated with name '_display_freq_kHz_buff_1_57'
0332           1229   ;------------------------------------------------------------
0332           1230   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:259: void display_freq_kHz(float freq_kHz) {
0332           1231   ;        -----------------------------------------
0332           1232   ;         function display_freq_kHz
0332           1233   ;        -----------------------------------------
0332           1234   _display_freq_kHz:
0332 AA82      1235            mov     r2,dpl
0334 AB83      1236            mov     r3,dph
0336 ACF0      1237            mov     r4,b
0338 FD        1238            mov     r5,a
0339           1239   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:261: sprintf(buff, "F: %.3f kHz", freq_kHz); // Format the Frequency Value
0339 C002      1240            push    ar2
033B C003      1241            push    ar3
033D C004      1242            push    ar4
033F C005      1243            push    ar5
0341 7410      1244            mov     a,#__str_4
0343 C0E0      1245            push    acc
0345 74C2      1246            mov     a,#(__str_4 >> 8)
0347 C0E0      1247            push    acc
0349 7480      1248            mov     a,#0x80
034B C0E0      1249            push    acc
034D 7410      1250            mov     a,#_display_freq_kHz_buff_1_57
034F C0E0      1251            push    acc
0351 74B8      1252            mov     a,#(_display_freq_kHz_buff_1_57 >> 8)
0353 C0E0      1253            push    acc
0355 7440      1254            mov     a,#0x40
0357 C0E0      1255            push    acc
0359 120000    1256            lcall   _sprintf
035C E581      1257            mov     a,sp
035E 24F6      1258            add     a,#0xf6
0360 F581      1259            mov     sp,a
0362           1260   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:262: LCDprint(buff, 1, 1); // Write to LCD
0362 755001    1261            mov     _LCDprint_PARM_2,#0x01
0365 D2C0      1262            setb    _LCDprint_PARM_3
0367 90B810    1263            mov     dptr,#_display_freq_kHz_buff_1_57
036A 75F040    1264            mov     b,#0x40
036D 020000    1265            ljmp    _LCDprint
0370           1266   ;------------------------------------------------------------
0370           1267   ;Allocation info for local variables in function 'display_capacitance_nF'
0370           1268   ;------------------------------------------------------------
0370           1269   ;capacitance_nF            Allocated to registers r2 r3 r4 r5 
0370           1270   ;buff                      Allocated with name '_display_capacitance_nF_buff_1_59'
0370           1271   ;------------------------------------------------------------
0370           1272   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:265: void display_capacitance_nF(float capacitance_nF) {
0370           1273   ;        -----------------------------------------
0370           1274   ;         function display_capacitance_nF
0370           1275   ;        -----------------------------------------
0370           1276   _display_capacitance_nF:
0370 AA82      1277            mov     r2,dpl
0372 AB83      1278            mov     r3,dph
0374 ACF0      1279            mov     r4,b
0376 FD        1280            mov     r5,a
0377           1281   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:268: sprintf(buff, "C: %.3f nF", capacitance_nF); // Format the Capacitance Value
0377 C002      1282            push    ar2
0379 C003      1283            push    ar3
037B C004      1284            push    ar4
037D C005      1285            push    ar5
037F 7450      1286            mov     a,#__str_5
0381 C0E0      1287            push    acc
0383 74C2      1288            mov     a,#(__str_5 >> 8)
0385 C0E0      1289            push    acc
0387 7480      1290            mov     a,#0x80
0389 C0E0      1291            push    acc
038B 7470      1292            mov     a,#_display_capacitance_nF_buff_1_59
038D C0E0      1293            push    acc
038F 74B8      1294            mov     a,#(_display_capacitance_nF_buff_1_59 >> 8)
0391 C0E0      1295            push    acc
0393 7440      1296            mov     a,#0x40
0395 C0E0      1297            push    acc
0397 120000    1298            lcall   _sprintf
039A E581      1299            mov     a,sp
039C 24F6      1300            add     a,#0xf6
039E F581      1301            mov     sp,a
03A0           1302   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:269: LCDprint(buff, 2, 1); // Write to LCD
03A0 755002    1303            mov     _LCDprint_PARM_2,#0x02
03A3 D2C0      1304            setb    _LCDprint_PARM_3
03A5 90B870    1305            mov     dptr,#_display_capacitance_nF_buff_1_59
03A8 75F040    1306            mov     b,#0x40
03AB 020000    1307            ljmp    _LCDprint
03AE           1308   ;------------------------------------------------------------
03AE           1309   ;Allocation info for local variables in function 'calculate_period_s'
03AE           1310   ;------------------------------------------------------------
03AE           1311   ;TH0                       Allocated with name '_calculate_period_s_PARM_2'
03AE           1312   ;TL0                       Allocated with name '_calculate_period_s_PARM_3'
03AE           1313   ;overflow_count            Allocated to registers r2 r3 
03AE           1314   ;------------------------------------------------------------
03AE           1315   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:272: float calculate_period_s(int overflow_count, int TH0, int TL0) {
03AE           1316   ;        -----------------------------------------
03AE           1317   ;         function calculate_period_s
03AE           1318   ;        -----------------------------------------
03AE           1319   _calculate_period_s:
03AE           1320   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:273: return ((overflow_count * MAX_16_BIT)  + (TH0 * MAX_8_BIT) + TL0) * (12.0 / SYSCLK);
03AE 120000    1321            lcall   ___sint2fs
03B1 AA82      1322            mov     r2,dpl
03B3 AB83      1323            mov     r3,dph
03B5 ACF0      1324            mov     r4,b
03B7 FD        1325            mov     r5,a
03B8 C002      1326            push    ar2
03BA C003      1327            push    ar3
03BC C004      1328            push    ar4
03BE C005      1329            push    ar5
03C0 900000    1330            mov     dptr,#0x0000
03C3 75F080    1331            mov     b,#0x80
03C6 7447      1332            mov     a,#0x47
03C8 120000    1333            lcall   ___fsmul
03CB AA82      1334            mov     r2,dpl
03CD AB83      1335            mov     r3,dph
03CF ACF0      1336            mov     r4,b
03D1 FD        1337            mov     r5,a
03D2 E581      1338            mov     a,sp
03D4 24FC      1339            add     a,#0xfc
03D6 F581      1340            mov     sp,a
03D8 856082    1341            mov     dpl,_calculate_period_s_PARM_2
03DB 856183    1342            mov     dph,(_calculate_period_s_PARM_2 + 1)
03DE C002      1343            push    ar2
03E0 C003      1344            push    ar3
03E2 C004      1345            push    ar4
03E4 C005      1346            push    ar5
03E6 120000    1347            lcall   ___sint2fs
03E9 AE82      1348            mov     r6,dpl
03EB AF83      1349            mov     r7,dph
03ED A8F0      1350            mov     r0,b
03EF F9        1351            mov     r1,a
03F0 C006      1352            push    ar6
03F2 C007      1353            push    ar7
03F4 C000      1354            push    ar0
03F6 C001      1355            push    ar1
03F8 900000    1356            mov     dptr,#0x0000
03FB 75F080    1357            mov     b,#0x80
03FE 7443      1358            mov     a,#0x43
0400 120000    1359            lcall   ___fsmul
0403 AE82      1360            mov     r6,dpl
0405 AF83      1361            mov     r7,dph
0407 A8F0      1362            mov     r0,b
0409 F9        1363            mov     r1,a
040A E581      1364            mov     a,sp
040C 24FC      1365            add     a,#0xfc
040E F581      1366            mov     sp,a
0410 D005      1367            pop     ar5
0412 D004      1368            pop     ar4
0414 D003      1369            pop     ar3
0416 D002      1370            pop     ar2
0418 C006      1371            push    ar6
041A C007      1372            push    ar7
041C C000      1373            push    ar0
041E C001      1374            push    ar1
0420 8A82      1375            mov     dpl,r2
0422 8B83      1376            mov     dph,r3
0424 8CF0      1377            mov     b,r4
0426 ED        1378            mov     a,r5
0427 120000    1379            lcall   ___fsadd
042A AA82      1380            mov     r2,dpl
042C AB83      1381            mov     r3,dph
042E ACF0      1382            mov     r4,b
0430 FD        1383            mov     r5,a
0431 E581      1384            mov     a,sp
0433 24FC      1385            add     a,#0xfc
0435 F581      1386            mov     sp,a
0437 851082    1387            mov     dpl,_calculate_period_s_PARM_3
043A 851183    1388            mov     dph,(_calculate_period_s_PARM_3 + 1)
043D C002      1389            push    ar2
043F C003      1390            push    ar3
0441 C004      1391            push    ar4
0443 C005      1392            push    ar5
0445 120000    1393            lcall   ___sint2fs
0448 AE82      1394            mov     r6,dpl
044A AF83      1395            mov     r7,dph
044C A8F0      1396            mov     r0,b
044E F9        1397            mov     r1,a
044F D005      1398            pop     ar5
0451 D004      1399            pop     ar4
0453 D003      1400            pop     ar3
0455 D002      1401            pop     ar2
0457 C006      1402            push    ar6
0459 C007      1403            push    ar7
045B C000      1404            push    ar0
045D C001      1405            push    ar1
045F 8A82      1406            mov     dpl,r2
0461 8B83      1407            mov     dph,r3
0463 8CF0      1408            mov     b,r4
0465 ED        1409            mov     a,r5
0466 120000    1410            lcall   ___fsadd
0469 AA82      1411            mov     r2,dpl
046B AB83      1412            mov     r3,dph
046D ACF0      1413            mov     r4,b
046F FD        1414            mov     r5,a
0470 E581      1415            mov     a,sp
0472 24FC      1416            add     a,#0xfc
0474 F581      1417            mov     sp,a
0476 C002      1418            push    ar2
0478 C003      1419            push    ar3
047A C004      1420            push    ar4
047C C005      1421            push    ar5
047E 90F4FC    1422            mov     dptr,#0xF4FC
0481 75F032    1423            mov     b,#0x32
0484 7434      1424            mov     a,#0x34
0486 120000    1425            lcall   ___fsmul
0489 AA82      1426            mov     r2,dpl
048B AB83      1427            mov     r3,dph
048D ACF0      1428            mov     r4,b
048F FD        1429            mov     r5,a
0490 E581      1430            mov     a,sp
0492 24FC      1431            add     a,#0xfc
0494 F581      1432            mov     sp,a
0496 8A82      1433            mov     dpl,r2
0498 8B83      1434            mov     dph,r3
049A 8CF0      1435            mov     b,r4
049C ED        1436            mov     a,r5
049D 22        1437            ret
049E           1438   ;------------------------------------------------------------
049E           1439   ;Allocation info for local variables in function 'calculate_freq_Hz'
049E           1440   ;------------------------------------------------------------
049E           1441   ;period_s                  Allocated to registers r2 r3 r4 r5 
049E           1442   ;------------------------------------------------------------
049E           1443   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:276: float calculate_freq_Hz(float period_s) {
049E           1444   ;        -----------------------------------------
049E           1445   ;         function calculate_freq_Hz
049E           1446   ;        -----------------------------------------
049E           1447   _calculate_freq_Hz:
049E AA82      1448            mov     r2,dpl
04A0 AB83      1449            mov     r3,dph
04A2 ACF0      1450            mov     r4,b
04A4 FD        1451            mov     r5,a
04A5           1452   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:277: return (1.0 / period_s);
04A5 C002      1453            push    ar2
04A7 C003      1454            push    ar3
04A9 C004      1455            push    ar4
04AB C005      1456            push    ar5
04AD 900000    1457            mov     dptr,#0x0000
04B0 75F080    1458            mov     b,#0x80
04B3 743F      1459            mov     a,#0x3F
04B5 120000    1460            lcall   ___fsdiv
04B8 AA82      1461            mov     r2,dpl
04BA AB83      1462            mov     r3,dph
04BC ACF0      1463            mov     r4,b
04BE FD        1464            mov     r5,a
04BF E581      1465            mov     a,sp
04C1 24FC      1466            add     a,#0xfc
04C3 F581      1467            mov     sp,a
04C5 8A82      1468            mov     dpl,r2
04C7 8B83      1469            mov     dph,r3
04C9 8CF0      1470            mov     b,r4
04CB ED        1471            mov     a,r5
04CC 22        1472            ret
04CD           1473   ;------------------------------------------------------------
04CD           1474   ;Allocation info for local variables in function 'calculate_capacitance_nF'
04CD           1475   ;------------------------------------------------------------
04CD           1476   ;period_s                  Allocated to registers r2 r3 r4 r5 
04CD           1477   ;------------------------------------------------------------
04CD           1478   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:280: float calculate_capacitance_nF(float period_s) {
04CD           1479   ;        -----------------------------------------
04CD           1480   ;         function calculate_capacitance_nF
04CD           1481   ;        -----------------------------------------
04CD           1482   _calculate_capacitance_nF:
04CD AA82      1483            mov     r2,dpl
04CF AB83      1484            mov     r3,dph
04D1 ACF0      1485            mov     r4,b
04D3 FD        1486            mov     r5,a
04D4           1487   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:281: return (1.44 * period_s / (R_A + 2 * R_B)) * GIGA_MULTIPLIER; // Convert to Nanofarads
04D4 C002      1488            push    ar2
04D6 C003      1489            push    ar3
04D8 C004      1490            push    ar4
04DA C005      1491            push    ar5
04DC 9051EC    1492            mov     dptr,#0x51EC
04DF 75F0B8    1493            mov     b,#0xB8
04E2 743F      1494            mov     a,#0x3F
04E4 120000    1495            lcall   ___fsmul
04E7 AA82      1496            mov     r2,dpl
04E9 AB83      1497            mov     r3,dph
04EB ACF0      1498            mov     r4,b
04ED FD        1499            mov     r5,a
04EE E581      1500            mov     a,sp
04F0 24FC      1501            add     a,#0xfc
04F2 F581      1502            mov     sp,a
04F4 E4        1503            clr     a
04F5 C0E0      1504            push    acc
04F7 74A0      1505            mov     a,#0xA0
04F9 C0E0      1506            push    acc
04FB 748C      1507            mov     a,#0x8C
04FD C0E0      1508            push    acc
04FF 7445      1509            mov     a,#0x45
0501 C0E0      1510            push    acc
0503 8A82      1511            mov     dpl,r2
0505 8B83      1512            mov     dph,r3
0507 8CF0      1513            mov     b,r4
0509 ED        1514            mov     a,r5
050A 120000    1515            lcall   ___fsdiv
050D AA82      1516            mov     r2,dpl
050F AB83      1517            mov     r3,dph
0511 ACF0      1518            mov     r4,b
0513 FD        1519            mov     r5,a
0514 E581      1520            mov     a,sp
0516 24FC      1521            add     a,#0xfc
0518 F581      1522            mov     sp,a
051A C002      1523            push    ar2
051C C003      1524            push    ar3
051E C004      1525            push    ar4
0520 C005      1526            push    ar5
0522 906B28    1527            mov     dptr,#0x6B28
0525 75F06E    1528            mov     b,#0x6E
0528 744E      1529            mov     a,#0x4E
052A 120000    1530            lcall   ___fsmul
052D AA82      1531            mov     r2,dpl
052F AB83      1532            mov     r3,dph
0531 ACF0      1533            mov     r4,b
0533 FD        1534            mov     r5,a
0534 E581      1535            mov     a,sp
0536 24FC      1536            add     a,#0xfc
0538 F581      1537            mov     sp,a
053A 8A82      1538            mov     dpl,r2
053C 8B83      1539            mov     dph,r3
053E 8CF0      1540            mov     b,r4
0540 ED        1541            mov     a,r5
0541 22        1542            ret
0542           1543   ;------------------------------------------------------------
0542           1544   ;Allocation info for local variables in function 'main'
0542           1545   ;------------------------------------------------------------
0542           1546   ;period_s                  Allocated to registers r4 r5 r6 r7 
0542           1547   ;freq_Hz                   Allocated to registers r0 r1 r2 r3 
0542           1548   ;capacitance_nF            Allocated with name '_main_capacitance_nF_1_67'
0542           1549   ;success_count             Allocated with name '_main_success_count_1_67'
0542           1550   ;------------------------------------------------------------
0542           1551   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:297: void main(void) {
0542           1552   ;        -----------------------------------------
0542           1553   ;         function main
0542           1554   ;        -----------------------------------------
0542           1555   _main:
0542           1556   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:299: int success_count = 0;
0542 E4        1557            clr     a
0543 F510      1558            mov     _main_success_count_1_67,a
0545 F511      1559            mov     (_main_success_count_1_67 + 1),a
0547           1560   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:302: TIMER0_Init(); // Initialize Timer 0
0547 120000    1561            lcall   _TIMER0_Init
054A           1562   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:303: Serial_Init(); // Initialize Serial Communication
054A 120000    1563            lcall   _Serial_Init
054D           1564   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:304: LCD_4BIT();     // Configure the LCD
054D 120000    1565            lcall   _LCD_4BIT
0550           1566   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:306: while(1) {
0550           1567   L021029?:
0550           1568   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:308: TL0 = 0;
0550 758A00    1569            mov     _TL0,#0x00
0553           1570   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:309: TH0 = 0;
0553 758C00    1571            mov     _TH0,#0x00
0556           1572   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:310: TF0 = 0;
0556 C28D      1573            clr     _TF0
0558           1574   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:311: overflow_count = 0;
0558 759000    1575            mov     _overflow_count,#0x00
055B           1576   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:313: while (EFM8_SIGNAL != 0); // Wait for Signal == 0
055B           1577   L021001?:
055B 20B3D0    1578            jb      _P3_3,L021001?
055E           1579   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:314: while (EFM8_SIGNAL != 1); // Wait for Signal == 1
055E           1580   L021004?:
055E 30B310    1581            jnb     _P3_3,L021004?
0561           1582   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:316: TR0 = 1; // Start Timer
0561 D28C      1583            setb    _TR0
0563           1584   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:318: while (EFM8_SIGNAL != 0) { // Wait for Signal == 0
0563           1585   L021009?:
0563 30B390    1586            jnb     _P3_3,L021014?
0566           1587   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:319: if (TF0 == 1) { // Did 16-Bit Timer Overflow?
0566           1588   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:320: TF0 = 0;
0566 108DD0    1589            jbc     _TF0,L021050?
0569 8000      1590            sjmp    L021009?
056B           1591   L021050?:
056B           1592   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:321: overflow_count++;
056B 0590      1593            inc     _overflow_count
056D           1594   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:324: while (EFM8_SIGNAL != 1) { // Wait for Signal == 1
056D 8000      1595            sjmp    L021009?
056F           1596   L021014?:
056F 20B310    1597            jb      _P3_3,L021016?
0572           1598   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:325: if (TF0 == 1) { // Did 16-Bit Timer Overflow?
0572           1599   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:326: TF0 = 0;
0572 108D50    1600            jbc     _TF0,L021052?
0575 8000      1601            sjmp    L021014?
0577           1602   L021052?:
0577           1603   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:327: overflow_count++;
0577 0590      1604            inc     _overflow_count
0579 8000      1605            sjmp    L021014?
057B           1606   L021016?:
057B           1607   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:331: TR0 = 0; // Stop Timer 0. The 24-bit number [overflow_count-TH0-TL0] has the period!
057B C28C      1608            clr     _TR0
057D           1609   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:332: period_s = calculate_period_s(overflow_count, TH0, TL0);
057D AC90      1610            mov     r4,_overflow_count
057F 7D00      1611            mov     r5,#0x00
0581 858C60    1612            mov     _calculate_period_s_PARM_2,_TH0
0584 756100    1613            mov     (_calculate_period_s_PARM_2 + 1),#0x00
0587 858A10    1614            mov     _calculate_period_s_PARM_3,_TL0
058A 751100    1615            mov     (_calculate_period_s_PARM_3 + 1),#0x00
058D 8C82      1616            mov     dpl,r4
058F 8D83      1617            mov     dph,r5
0591 120000    1618            lcall   _calculate_period_s
0594           1619   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:333: freq_Hz = calculate_freq_Hz(period_s);
0594 AC82      1620            mov     r4,dpl
0596 AD83      1621            mov     r5,dph
0598 AEF0      1622            mov     r6,b
059A FF        1623            mov     r7,a
059B C004      1624            push    ar4
059D C005      1625            push    ar5
059F C006      1626            push    ar6
05A1 C007      1627            push    ar7
05A3 120000    1628            lcall   _calculate_freq_Hz
05A6 A882      1629            mov     r0,dpl
05A8 A983      1630            mov     r1,dph
05AA AAF0      1631            mov     r2,b
05AC FB        1632            mov     r3,a
05AD D007      1633            pop     ar7
05AF D006      1634            pop     ar6
05B1 D005      1635            pop     ar5
05B3 D004      1636            pop     ar4
05B5           1637   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:334: capacitance_nF = calculate_capacitance_nF(period_s);
05B5 8C82      1638            mov     dpl,r4
05B7 8D83      1639            mov     dph,r5
05B9 8EF0      1640            mov     b,r6
05BB EF        1641            mov     a,r7
05BC C002      1642            push    ar2
05BE C003      1643            push    ar3
05C0 C000      1644            push    ar0
05C2 C001      1645            push    ar1
05C4 120000    1646            lcall   _calculate_capacitance_nF
05C7 8582C0    1647            mov     _main_capacitance_nF_1_67,dpl
05CA 8583C1    1648            mov     (_main_capacitance_nF_1_67 + 1),dph
05CD 85F0C2    1649            mov     (_main_capacitance_nF_1_67 + 2),b
05D0 F5C3      1650            mov     (_main_capacitance_nF_1_67 + 3),a
05D2 D001      1651            pop     ar1
05D4 D000      1652            pop     ar0
05D6 D003      1653            pop     ar3
05D8 D002      1654            pop     ar2
05DA           1655   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:342: if ((freq_Hz <= MIN_FREQ_HZ) || (freq_Hz >= MAX_FREQ_HZ)) {
05DA C002      1656            push    ar2
05DC C003      1657            push    ar3
05DE C000      1658            push    ar0
05E0 C001      1659            push    ar1
05E2 E4        1660            clr     a
05E3 C0E0      1661            push    acc
05E5 C0E0      1662            push    acc
05E7 7448      1663            mov     a,#0x48
05E9 C0E0      1664            push    acc
05EB 7443      1665            mov     a,#0x43
05ED C0E0      1666            push    acc
05EF 8882      1667            mov     dpl,r0
05F1 8983      1668            mov     dph,r1
05F3 8AF0      1669            mov     b,r2
05F5 EB        1670            mov     a,r3
05F6 120000    1671            lcall   ___fsgt
05F9 AC82      1672            mov     r4,dpl
05FB E581      1673            mov     a,sp
05FD 24FC      1674            add     a,#0xfc
05FF F581      1675            mov     sp,a
0601 D001      1676            pop     ar1
0603 D000      1677            pop     ar0
0605 D003      1678            pop     ar3
0607 D002      1679            pop     ar2
0609 EC        1680            mov     a,r4
060A 6000      1681            jz      L021022?
060C C002      1682            push    ar2
060E C003      1683            push    ar3
0610 C004      1684            push    ar4
0612 C000      1685            push    ar0
0614 C001      1686            push    ar1
0616 E4        1687            clr     a
0617 C0E0      1688            push    acc
0619 7450      1689            mov     a,#0x50
061B C0E0      1690            push    acc
061D 74C3      1691            mov     a,#0xC3
061F C0E0      1692            push    acc
0621 7448      1693            mov     a,#0x48
0623 C0E0      1694            push    acc
0625 8882      1695            mov     dpl,r0
0627 8983      1696            mov     dph,r1
0629 8AF0      1697            mov     b,r2
062B EB        1698            mov     a,r3
062C 120000    1699            lcall   ___fslt
062F AD82      1700            mov     r5,dpl
0631 E581      1701            mov     a,sp
0633 24FC      1702            add     a,#0xfc
0635 F581      1703            mov     sp,a
0637 D001      1704            pop     ar1
0639 D000      1705            pop     ar0
063B D004      1706            pop     ar4
063D D003      1707            pop     ar3
063F D002      1708            pop     ar2
0641 ED        1709            mov     a,r5
0642 6000      1710            jz      L021054?
0644 020000    1711            ljmp    L021023?
0647           1712   L021054?:
0647           1713   L021022?:
0647           1714   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:343: success_count = 0;
0647 E4        1715            clr     a
0648 F510      1716            mov     _main_success_count_1_67,a
064A F511      1717            mov     (_main_success_count_1_67 + 1),a
064C           1718   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:345: if (freq_Hz >= MAX_FREQ_HZ) LCDprint("ERROR : LOW C", 1, 1);
064C C002      1719            push    ar2
064E C003      1720            push    ar3
0650 C004      1721            push    ar4
0652 C000      1722            push    ar0
0654 C001      1723            push    ar1
0656 E4        1724            clr     a
0657 C0E0      1725            push    acc
0659 7450      1726            mov     a,#0x50
065B C0E0      1727            push    acc
065D 74C3      1728            mov     a,#0xC3
065F C0E0      1729            push    acc
0661 7448      1730            mov     a,#0x48
0663 C0E0      1731            push    acc
0665 8882      1732            mov     dpl,r0
0667 8983      1733            mov     dph,r1
0669 8AF0      1734            mov     b,r2
066B EB        1735            mov     a,r3
066C 120000    1736            lcall   ___fslt
066F AD82      1737            mov     r5,dpl
0671 E581      1738            mov     a,sp
0673 24FC      1739            add     a,#0xfc
0675 F581      1740            mov     sp,a
0677 D001      1741            pop     ar1
0679 D000      1742            pop     ar0
067B D004      1743            pop     ar4
067D D003      1744            pop     ar3
067F D002      1745            pop     ar2
0681 ED        1746            mov     a,r5
0682 7000      1747            jnz     L021020?
0684 755001    1748            mov     _LCDprint_PARM_2,#0x01
0687 D2C0      1749            setb    _LCDprint_PARM_3
0689 90C710    1750            mov     dptr,#__str_6
068C 75F080    1751            mov     b,#0x80
068F C002      1752            push    ar2
0691 C003      1753            push    ar3
0693 C000      1754            push    ar0
0695 C001      1755            push    ar1
0697 120000    1756            lcall   _LCDprint
069A D001      1757            pop     ar1
069C D000      1758            pop     ar0
069E D003      1759            pop     ar3
06A0 D002      1760            pop     ar2
06A2 8000      1761            sjmp    L021021?
06A4           1762   L021020?:
06A4           1763   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:346: else if (freq_Hz <= MIN_FREQ_HZ) LCDprint("ERROR : HIGH C", 1, 1);
06A4 EC        1764            mov     a,r4
06A5 7000      1765            jnz     L021021?
06A7 755001    1766            mov     _LCDprint_PARM_2,#0x01
06AA D2C0      1767            setb    _LCDprint_PARM_3
06AC 90C790    1768            mov     dptr,#__str_7
06AF 75F080    1769            mov     b,#0x80
06B2 C002      1770            push    ar2
06B4 C003      1771            push    ar3
06B6 C000      1772            push    ar0
06B8 C001      1773            push    ar1
06BA 120000    1774            lcall   _LCDprint
06BD D001      1775            pop     ar1
06BF D000      1776            pop     ar0
06C1 D003      1777            pop     ar3
06C3 D002      1778            pop     ar2
06C5           1779   L021021?:
06C5           1780   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:348: LCDprint("                ", 2, 1);
06C5 755002    1781            mov     _LCDprint_PARM_2,#0x02
06C8 D2C0      1782            setb    _LCDprint_PARM_3
06CA 90C7D0    1783            mov     dptr,#__str_8
06CD 75F080    1784            mov     b,#0x80
06D0 C002      1785            push    ar2
06D2 C003      1786            push    ar3
06D4 C000      1787            push    ar0
06D6 C001      1788            push    ar1
06D8 120000    1789            lcall   _LCDprint
06DB           1790   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:349: waitms(250); // Wait for 250 ms
06DB 9000FA    1791            mov     dptr,#0x00FA
06DE 120000    1792            lcall   _waitms
06E1 D001      1793            pop     ar1
06E3 D000      1794            pop     ar0
06E5 D003      1795            pop     ar3
06E7 D002      1796            pop     ar2
06E9 8000      1797            sjmp    L021024?
06EB           1798   L021023?:
06EB           1799   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:351: success_count += 1;
06EB 0510      1800            inc     _main_success_count_1_67
06ED E4        1801            clr     a
06EE B51050    1802            cjne    a,_main_success_count_1_67,L021057?
06F1 0511      1803            inc     (_main_success_count_1_67 + 1)
06F3           1804   L021057?:
06F3           1805   L021024?:
06F3           1806   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:354: if (success_count >= SUCCESS_THRESHOLD) {
06F3 C3        1807            clr     c
06F4 E510      1808            mov     a,_main_success_count_1_67
06F6 9403      1809            subb    a,#0x03
06F8 E511      1810            mov     a,(_main_success_count_1_67 + 1)
06FA 6480      1811            xrl     a,#0x80
06FC 9480      1812            subb    a,#0x80
06FE 5000      1813            jnc     L021058?
0700 020000    1814            ljmp    L021029?
0703           1815   L021058?:
0703           1816   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:355: waitms(250); // Wait for 250 ms
0703 9000FA    1817            mov     dptr,#0x00FA
0706 C002      1818            push    ar2
0708 C003      1819            push    ar3
070A C000      1820            push    ar0
070C C001      1821            push    ar1
070E 120000    1822            lcall   _waitms
0711 D001      1823            pop     ar1
0713 D000      1824            pop     ar0
0715 D003      1825            pop     ar3
0717 D002      1826            pop     ar2
0719           1827   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:356: printf("\nF(kHz) = %f\r\n", freq_Hz / KILO_MULTIPLIER); // Print Frequency to Serial Port
0719 E4        1828            clr     a
071A C0E0      1829            push    acc
071C C0E0      1830            push    acc
071E 747A      1831            mov     a,#0x7A
0720 C0E0      1832            push    acc
0722 7444      1833            mov     a,#0x44
0724 C0E0      1834            push    acc
0726 8882      1835            mov     dpl,r0
0728 8983      1836            mov     dph,r1
072A 8AF0      1837            mov     b,r2
072C EB        1838            mov     a,r3
072D 120000    1839            lcall   ___fsdiv
0730 AA82      1840            mov     r2,dpl
0732 AB83      1841            mov     r3,dph
0734 ACF0      1842            mov     r4,b
0736 FD        1843            mov     r5,a
0737 E581      1844            mov     a,sp
0739 24FC      1845            add     a,#0xfc
073B F581      1846            mov     sp,a
073D C002      1847            push    ar2
073F C003      1848            push    ar3
0741 C004      1849            push    ar4
0743 C005      1850            push    ar5
0745 C002      1851            push    ar2
0747 C003      1852            push    ar3
0749 C004      1853            push    ar4
074B C005      1854            push    ar5
074D 74D0      1855            mov     a,#__str_9
074F C0E0      1856            push    acc
0751 74C8      1857            mov     a,#(__str_9 >> 8)
0753 C0E0      1858            push    acc
0755 7480      1859            mov     a,#0x80
0757 C0E0      1860            push    acc
0759 120000    1861            lcall   _printf
075C E581      1862            mov     a,sp
075E 24F9      1863            add     a,#0xf9
0760 F581      1864            mov     sp,a
0762 D005      1865            pop     ar5
0764 D004      1866            pop     ar4
0766 D003      1867            pop     ar3
0768 D002      1868            pop     ar2
076A           1869   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:357: display_freq_kHz(freq_Hz / KILO_MULTIPLIER); // Display Frequency on LCD
076A 8A82      1870            mov     dpl,r2
076C 8B83      1871            mov     dph,r3
076E 8CF0      1872            mov     b,r4
0770 ED        1873            mov     a,r5
0771 120000    1874            lcall   _display_freq_kHz
0774           1875   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:359: waitms(250); // Wait for 250 ms
0774 9000FA    1876            mov     dptr,#0x00FA
0777 120000    1877            lcall   _waitms
077A           1878   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:360: printf("\rC(nF) = %f\r\n", capacitance_nF); // Print Capacitance in Nanofarads
077A C0C0      1879            push    _main_capacitance_nF_1_67
077C C0C1      1880            push    (_main_capacitance_nF_1_67 + 1)
077E C0C2      1881            push    (_main_capacitance_nF_1_67 + 2)
0780 C0C3      1882            push    (_main_capacitance_nF_1_67 + 3)
0782 7410      1883            mov     a,#__str_10
0784 C0E0      1884            push    acc
0786 74C9      1885            mov     a,#(__str_10 >> 8)
0788 C0E0      1886            push    acc
078A 7480      1887            mov     a,#0x80
078C C0E0      1888            push    acc
078E 120000    1889            lcall   _printf
0791 E581      1890            mov     a,sp
0793 24F9      1891            add     a,#0xf9
0795 F581      1892            mov     sp,a
0797           1893   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:363: display_capacitance_nF(capacitance_nF);
0797 85C082    1894            mov     dpl,_main_capacitance_nF_1_67
079A 85C183    1895            mov     dph,(_main_capacitance_nF_1_67 + 1)
079D 85C2F0    1896            mov     b,(_main_capacitance_nF_1_67 + 2)
07A0 E5C3      1897            mov     a,(_main_capacitance_nF_1_67 + 3)
07A2 120000    1898            lcall   _display_capacitance_nF
07A5 020000    1899            ljmp    L021029?
07A8           1900            rseg R_CSEG
07A8           1901   
0000           1902            rseg R_XINIT
0000           1903   
0000           1904            rseg R_CONST
0000           1905   __str_0:
0000 1B        1906            db 0x1B
0001 5B324A    1907            db '[2J'
0004 00        1908            db 0x00
0005           1909   __str_1:
0005 54797065  1910            db 'Type Intended Display in Line 2 (16 Char Max): '
     20496E74
     656E6465
     64204469
     73706C61
     7920696E
     204C696E
     65203220
     28313620
     43686172
     204D6178
     293A20
0034 00        1911            db 0x00
0035           1912   __str_2:
0035 0A        1913            db 0x0A
0036 00        1914            db 0x00
0037           1915   __str_3:
0037 543A2025  1916            db 'T: %.3f s'
     2E336620
     73
0040 00        1917            db 0x00
0041           1918   __str_4:
0041 463A2025  1919            db 'F: %.3f kHz'
     2E336620
     6B487A
004C 00        1920            db 0x00
004D           1921   __str_5:
004D 433A2025  1922            db 'C: %.3f nF'
     2E336620
     6E46
0057 00        1923            db 0x00
0058           1924   __str_6:
0058 4552524F  1925            db 'ERROR : LOW C'
     52203A20
     4C4F5720
     43
0065 00        1926            db 0x00
0066           1927   __str_7:
0066 4552524F  1928            db 'ERROR : HIGH C'
     52203A20
     48494748
     2043
0074 00        1929            db 0x00
0075           1930   __str_8:
0075 20202020  1931            db '                '
     20202020
     20202020
     20202020
0085 00        1932            db 0x00
0086           1933   __str_9:
0086 0A        1934            db 0x0A
0087 46286B48  1935            db 'F(kHz) = %f'
     7A29203D
     202566
0092 0D        1936            db 0x0D
0093 0A        1937            db 0x0A
0094 00        1938            db 0x00
0095           1939   __str_10:
0095 0D        1940            db 0x0D
0096 43286E46  1941            db 'C(nF) = %f'
     29203D20
     2566
00A0 0D        1942            db 0x0D
00A1 0A        1943            db 0x0A
00A2 00        1944            db 0x00
00A3           1945   
0003           1946            CSEG
0003           1947   
0003           1948   end
