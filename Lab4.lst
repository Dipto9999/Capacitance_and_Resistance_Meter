0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Thu Feb 22 14:38:00 2024
0000              5   ;--------------------------------------------------------
                  5   $name Lab4
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _calculate_capacitance
0000             29            public _calculate_freq
0000             30            public _calculate_period
0000             31            public _display_capacitance_pF
0000             32            public _display_freq_kHz
0000             33            public _display_rx
0000             34            public _write_rx
0000             35            public _LCDprint
0000             36            public _LCD_4BIT
0000             37            public _WriteCommand
0000             38            public _WriteData
0000             39            public _LCD_byte
0000             40            public _LCD_pulse
0000             41            public _Serial_Init
0000             42            public _TIMER0_Init
0000             43            public _waitms
0000             44            public _Timer3us
0000             45            public __c51_external_startup
0000             46            public _LCDprint_PARM_3
0000             47            public _calculate_freq_PARM_3
0000             48            public _calculate_freq_PARM_2
0000             49            public _calculate_period_PARM_3
0000             50            public _calculate_period_PARM_2
0000             51            public _display_rx_PARM_2
0000             52            public _write_rx_PARM_2
0000             53            public _LCDprint_PARM_2
0000             54            public _overflow_count
0000             55   ;--------------------------------------------------------
0000             56   ; Special Function Registers
0000             57   ;--------------------------------------------------------
0000             58   _ACC            DATA 0xe0
0000             59   _ADC0ASAH       DATA 0xb6
0000             60   _ADC0ASAL       DATA 0xb5
0000             61   _ADC0ASCF       DATA 0xa1
0000             62   _ADC0ASCT       DATA 0xc7
0000             63   _ADC0CF0        DATA 0xbc
0000             64   _ADC0CF1        DATA 0xb9
0000             65   _ADC0CF2        DATA 0xdf
0000             66   _ADC0CN0        DATA 0xe8
0000             67   _ADC0CN1        DATA 0xb2
0000             68   _ADC0CN2        DATA 0xb3
0000             69   _ADC0GTH        DATA 0xc4
0000             70   _ADC0GTL        DATA 0xc3
0000             71   _ADC0H          DATA 0xbe
0000             72   _ADC0L          DATA 0xbd
0000             73   _ADC0LTH        DATA 0xc6
0000             74   _ADC0LTL        DATA 0xc5
0000             75   _ADC0MX         DATA 0xbb
0000             76   _B              DATA 0xf0
0000             77   _CKCON0         DATA 0x8e
0000             78   _CKCON1         DATA 0xa6
0000             79   _CLEN0          DATA 0xc6
0000             80   _CLIE0          DATA 0xc7
0000             81   _CLIF0          DATA 0xe8
0000             82   _CLKSEL         DATA 0xa9
0000             83   _CLOUT0         DATA 0xd1
0000             84   _CLU0CF         DATA 0xb1
0000             85   _CLU0FN         DATA 0xaf
0000             86   _CLU0MX         DATA 0x84
0000             87   _CLU1CF         DATA 0xb3
0000             88   _CLU1FN         DATA 0xb2
0000             89   _CLU1MX         DATA 0x85
0000             90   _CLU2CF         DATA 0xb6
0000             91   _CLU2FN         DATA 0xb5
0000             92   _CLU2MX         DATA 0x91
0000             93   _CLU3CF         DATA 0xbf
0000             94   _CLU3FN         DATA 0xbe
0000             95   _CLU3MX         DATA 0xae
0000             96   _CMP0CN0        DATA 0x9b
0000             97   _CMP0CN1        DATA 0x99
0000             98   _CMP0MD         DATA 0x9d
0000             99   _CMP0MX         DATA 0x9f
0000            100   _CMP1CN0        DATA 0xbf
0000            101   _CMP1CN1        DATA 0xac
0000            102   _CMP1MD         DATA 0xab
0000            103   _CMP1MX         DATA 0xaa
0000            104   _CRC0CN0        DATA 0xce
0000            105   _CRC0CN1        DATA 0x86
0000            106   _CRC0CNT        DATA 0xd3
0000            107   _CRC0DAT        DATA 0xcb
0000            108   _CRC0FLIP       DATA 0xcf
0000            109   _CRC0IN         DATA 0xca
0000            110   _CRC0ST         DATA 0xd2
0000            111   _DAC0CF0        DATA 0x91
0000            112   _DAC0CF1        DATA 0x92
0000            113   _DAC0H          DATA 0x85
0000            114   _DAC0L          DATA 0x84
0000            115   _DAC1CF0        DATA 0x93
0000            116   _DAC1CF1        DATA 0x94
0000            117   _DAC1H          DATA 0x8a
0000            118   _DAC1L          DATA 0x89
0000            119   _DAC2CF0        DATA 0x95
0000            120   _DAC2CF1        DATA 0x96
0000            121   _DAC2H          DATA 0x8c
0000            122   _DAC2L          DATA 0x8b
0000            123   _DAC3CF0        DATA 0x9a
0000            124   _DAC3CF1        DATA 0x9c
0000            125   _DAC3H          DATA 0x8e
0000            126   _DAC3L          DATA 0x8d
0000            127   _DACGCF0        DATA 0x88
0000            128   _DACGCF1        DATA 0x98
0000            129   _DACGCF2        DATA 0xa2
0000            130   _DERIVID        DATA 0xad
0000            131   _DEVICEID       DATA 0xb5
0000            132   _DPH            DATA 0x83
0000            133   _DPL            DATA 0x82
0000            134   _EIE1           DATA 0xe6
0000            135   _EIE2           DATA 0xf3
0000            136   _EIP1           DATA 0xbb
0000            137   _EIP1H          DATA 0xee
0000            138   _EIP2           DATA 0xed
0000            139   _EIP2H          DATA 0xf6
0000            140   _EMI0CN         DATA 0xe7
0000            141   _FLKEY          DATA 0xb7
0000            142   _HFO0CAL        DATA 0xc7
0000            143   _HFO1CAL        DATA 0xd6
0000            144   _HFOCN          DATA 0xef
0000            145   _I2C0ADM        DATA 0xff
0000            146   _I2C0CN0        DATA 0xba
0000            147   _I2C0DIN        DATA 0xbc
0000            148   _I2C0DOUT       DATA 0xbb
0000            149   _I2C0FCN0       DATA 0xad
0000            150   _I2C0FCN1       DATA 0xab
0000            151   _I2C0FCT        DATA 0xf5
0000            152   _I2C0SLAD       DATA 0xbd
0000            153   _I2C0STAT       DATA 0xb9
0000            154   _IE             DATA 0xa8
0000            155   _IP             DATA 0xb8
0000            156   _IPH            DATA 0xf2
0000            157   _IT01CF         DATA 0xe4
0000            158   _LFO0CN         DATA 0xb1
0000            159   _P0             DATA 0x80
0000            160   _P0MASK         DATA 0xfe
0000            161   _P0MAT          DATA 0xfd
0000            162   _P0MDIN         DATA 0xf1
0000            163   _P0MDOUT        DATA 0xa4
0000            164   _P0SKIP         DATA 0xd4
0000            165   _P1             DATA 0x90
0000            166   _P1MASK         DATA 0xee
0000            167   _P1MAT          DATA 0xed
0000            168   _P1MDIN         DATA 0xf2
0000            169   _P1MDOUT        DATA 0xa5
0000            170   _P1SKIP         DATA 0xd5
0000            171   _P2             DATA 0xa0
0000            172   _P2MASK         DATA 0xfc
0000            173   _P2MAT          DATA 0xfb
0000            174   _P2MDIN         DATA 0xf3
0000            175   _P2MDOUT        DATA 0xa6
0000            176   _P2SKIP         DATA 0xcc
0000            177   _P3             DATA 0xb0
0000            178   _P3MDIN         DATA 0xf4
0000            179   _P3MDOUT        DATA 0x9c
0000            180   _PCA0CENT       DATA 0x9e
0000            181   _PCA0CLR        DATA 0x9c
0000            182   _PCA0CN0        DATA 0xd8
0000            183   _PCA0CPH0       DATA 0xfc
0000            184   _PCA0CPH1       DATA 0xea
0000            185   _PCA0CPH2       DATA 0xec
0000            186   _PCA0CPH3       DATA 0xf5
0000            187   _PCA0CPH4       DATA 0x85
0000            188   _PCA0CPH5       DATA 0xde
0000            189   _PCA0CPL0       DATA 0xfb
0000            190   _PCA0CPL1       DATA 0xe9
0000            191   _PCA0CPL2       DATA 0xeb
0000            192   _PCA0CPL3       DATA 0xf4
0000            193   _PCA0CPL4       DATA 0x84
0000            194   _PCA0CPL5       DATA 0xdd
0000            195   _PCA0CPM0       DATA 0xda
0000            196   _PCA0CPM1       DATA 0xdb
0000            197   _PCA0CPM2       DATA 0xdc
0000            198   _PCA0CPM3       DATA 0xae
0000            199   _PCA0CPM4       DATA 0xaf
0000            200   _PCA0CPM5       DATA 0xcc
0000            201   _PCA0H          DATA 0xfa
0000            202   _PCA0L          DATA 0xf9
0000            203   _PCA0MD         DATA 0xd9
0000            204   _PCA0POL        DATA 0x96
0000            205   _PCA0PWM        DATA 0xf7
0000            206   _PCON0          DATA 0x87
0000            207   _PCON1          DATA 0xcd
0000            208   _PFE0CN         DATA 0xc1
0000            209   _PRTDRV         DATA 0xf6
0000            210   _PSCTL          DATA 0x8f
0000            211   _PSTAT0         DATA 0xaa
0000            212   _PSW            DATA 0xd0
0000            213   _REF0CN         DATA 0xd1
0000            214   _REG0CN         DATA 0xc9
0000            215   _REVID          DATA 0xb6
0000            216   _RSTSRC         DATA 0xef
0000            217   _SBCON1         DATA 0x94
0000            218   _SBRLH1         DATA 0x96
0000            219   _SBRLL1         DATA 0x95
0000            220   _SBUF           DATA 0x99
0000            221   _SBUF0          DATA 0x99
0000            222   _SBUF1          DATA 0x92
0000            223   _SCON           DATA 0x98
0000            224   _SCON0          DATA 0x98
0000            225   _SCON1          DATA 0xc8
0000            226   _SFRPAGE        DATA 0xa7
0000            227   _SFRPGCN        DATA 0xbc
0000            228   _SFRSTACK       DATA 0xd7
0000            229   _SMB0ADM        DATA 0xd6
0000            230   _SMB0ADR        DATA 0xd7
0000            231   _SMB0CF         DATA 0xc1
0000            232   _SMB0CN0        DATA 0xc0
0000            233   _SMB0DAT        DATA 0xc2
0000            234   _SMB0FCN0       DATA 0xc3
0000            235   _SMB0FCN1       DATA 0xc4
0000            236   _SMB0FCT        DATA 0xef
0000            237   _SMB0RXLN       DATA 0xc5
0000            238   _SMB0TC         DATA 0xac
0000            239   _SMOD1          DATA 0x93
0000            240   _SP             DATA 0x81
0000            241   _SPI0CFG        DATA 0xa1
0000            242   _SPI0CKR        DATA 0xa2
0000            243   _SPI0CN0        DATA 0xf8
0000            244   _SPI0DAT        DATA 0xa3
0000            245   _SPI0FCN0       DATA 0x9a
0000            246   _SPI0FCN1       DATA 0x9b
0000            247   _SPI0FCT        DATA 0xf7
0000            248   _SPI0PCF        DATA 0xdf
0000            249   _TCON           DATA 0x88
0000            250   _TH0            DATA 0x8c
0000            251   _TH1            DATA 0x8d
0000            252   _TL0            DATA 0x8a
0000            253   _TL1            DATA 0x8b
0000            254   _TMOD           DATA 0x89
0000            255   _TMR2CN0        DATA 0xc8
0000            256   _TMR2CN1        DATA 0xfd
0000            257   _TMR2H          DATA 0xcf
0000            258   _TMR2L          DATA 0xce
0000            259   _TMR2RLH        DATA 0xcb
0000            260   _TMR2RLL        DATA 0xca
0000            261   _TMR3CN0        DATA 0x91
0000            262   _TMR3CN1        DATA 0xfe
0000            263   _TMR3H          DATA 0x95
0000            264   _TMR3L          DATA 0x94
0000            265   _TMR3RLH        DATA 0x93
0000            266   _TMR3RLL        DATA 0x92
0000            267   _TMR4CN0        DATA 0x98
0000            268   _TMR4CN1        DATA 0xff
0000            269   _TMR4H          DATA 0xa5
0000            270   _TMR4L          DATA 0xa4
0000            271   _TMR4RLH        DATA 0xa3
0000            272   _TMR4RLL        DATA 0xa2
0000            273   _TMR5CN0        DATA 0xc0
0000            274   _TMR5CN1        DATA 0xf1
0000            275   _TMR5H          DATA 0xd5
0000            276   _TMR5L          DATA 0xd4
0000            277   _TMR5RLH        DATA 0xd3
0000            278   _TMR5RLL        DATA 0xd2
0000            279   _UART0PCF       DATA 0xd9
0000            280   _UART1FCN0      DATA 0x9d
0000            281   _UART1FCN1      DATA 0xd8
0000            282   _UART1FCT       DATA 0xfa
0000            283   _UART1LIN       DATA 0x9e
0000            284   _UART1PCF       DATA 0xda
0000            285   _VDM0CN         DATA 0xff
0000            286   _WDTCN          DATA 0x97
0000            287   _XBR0           DATA 0xe1
0000            288   _XBR1           DATA 0xe2
0000            289   _XBR2           DATA 0xe3
0000            290   _XOSC0CN        DATA 0x86
0000            291   _DPTR           DATA 0x8382
0000            292   _TMR2RL         DATA 0xcbca
0000            293   _TMR3RL         DATA 0x9392
0000            294   _TMR4RL         DATA 0xa3a2
0000            295   _TMR5RL         DATA 0xd3d2
0000            296   _TMR0           DATA 0x8c8a
0000            297   _TMR1           DATA 0x8d8b
0000            298   _TMR2           DATA 0xcfce
0000            299   _TMR3           DATA 0x9594
0000            300   _TMR4           DATA 0xa5a4
0000            301   _TMR5           DATA 0xd5d4
0000            302   _SBRL1          DATA 0x9695
0000            303   _PCA0           DATA 0xfaf9
0000            304   _PCA0CP0        DATA 0xfcfb
0000            305   _PCA0CP1        DATA 0xeae9
0000            306   _PCA0CP2        DATA 0xeceb
0000            307   _PCA0CP3        DATA 0xf5f4
0000            308   _PCA0CP4        DATA 0x8584
0000            309   _PCA0CP5        DATA 0xdedd
0000            310   _ADC0ASA        DATA 0xb6b5
0000            311   _ADC0GT         DATA 0xc4c3
0000            312   _ADC0           DATA 0xbebd
0000            313   _ADC0LT         DATA 0xc6c5
0000            314   _DAC0           DATA 0x8584
0000            315   _DAC1           DATA 0x8a89
0000            316   _DAC2           DATA 0x8c8b
0000            317   _DAC3           DATA 0x8e8d
0000            318   ;--------------------------------------------------------
0000            319   ; special function bits
0000            320   ;--------------------------------------------------------
0000            321   _ACC_0          BIT 0xe0
0000            322   _ACC_1          BIT 0xe1
0000            323   _ACC_2          BIT 0xe2
0000            324   _ACC_3          BIT 0xe3
0000            325   _ACC_4          BIT 0xe4
0000            326   _ACC_5          BIT 0xe5
0000            327   _ACC_6          BIT 0xe6
0000            328   _ACC_7          BIT 0xe7
0000            329   _TEMPE          BIT 0xe8
0000            330   _ADGN0          BIT 0xe9
0000            331   _ADGN1          BIT 0xea
0000            332   _ADWINT         BIT 0xeb
0000            333   _ADBUSY         BIT 0xec
0000            334   _ADINT          BIT 0xed
0000            335   _IPOEN          BIT 0xee
0000            336   _ADEN           BIT 0xef
0000            337   _B_0            BIT 0xf0
0000            338   _B_1            BIT 0xf1
0000            339   _B_2            BIT 0xf2
0000            340   _B_3            BIT 0xf3
0000            341   _B_4            BIT 0xf4
0000            342   _B_5            BIT 0xf5
0000            343   _B_6            BIT 0xf6
0000            344   _B_7            BIT 0xf7
0000            345   _C0FIF          BIT 0xe8
0000            346   _C0RIF          BIT 0xe9
0000            347   _C1FIF          BIT 0xea
0000            348   _C1RIF          BIT 0xeb
0000            349   _C2FIF          BIT 0xec
0000            350   _C2RIF          BIT 0xed
0000            351   _C3FIF          BIT 0xee
0000            352   _C3RIF          BIT 0xef
0000            353   _D1SRC0         BIT 0x88
0000            354   _D1SRC1         BIT 0x89
0000            355   _D1AMEN         BIT 0x8a
0000            356   _D01REFSL       BIT 0x8b
0000            357   _D3SRC0         BIT 0x8c
0000            358   _D3SRC1         BIT 0x8d
0000            359   _D3AMEN         BIT 0x8e
0000            360   _D23REFSL       BIT 0x8f
0000            361   _D0UDIS         BIT 0x98
0000            362   _D1UDIS         BIT 0x99
0000            363   _D2UDIS         BIT 0x9a
0000            364   _D3UDIS         BIT 0x9b
0000            365   _EX0            BIT 0xa8
0000            366   _ET0            BIT 0xa9
0000            367   _EX1            BIT 0xaa
0000            368   _ET1            BIT 0xab
0000            369   _ES0            BIT 0xac
0000            370   _ET2            BIT 0xad
0000            371   _ESPI0          BIT 0xae
0000            372   _EA             BIT 0xaf
0000            373   _PX0            BIT 0xb8
0000            374   _PT0            BIT 0xb9
0000            375   _PX1            BIT 0xba
0000            376   _PT1            BIT 0xbb
0000            377   _PS0            BIT 0xbc
0000            378   _PT2            BIT 0xbd
0000            379   _PSPI0          BIT 0xbe
0000            380   _P0_0           BIT 0x80
0000            381   _P0_1           BIT 0x81
0000            382   _P0_2           BIT 0x82
0000            383   _P0_3           BIT 0x83
0000            384   _P0_4           BIT 0x84
0000            385   _P0_5           BIT 0x85
0000            386   _P0_6           BIT 0x86
0000            387   _P0_7           BIT 0x87
0000            388   _P1_0           BIT 0x90
0000            389   _P1_1           BIT 0x91
0000            390   _P1_2           BIT 0x92
0000            391   _P1_3           BIT 0x93
0000            392   _P1_4           BIT 0x94
0000            393   _P1_5           BIT 0x95
0000            394   _P1_6           BIT 0x96
0000            395   _P1_7           BIT 0x97
0000            396   _P2_0           BIT 0xa0
0000            397   _P2_1           BIT 0xa1
0000            398   _P2_2           BIT 0xa2
0000            399   _P2_3           BIT 0xa3
0000            400   _P2_4           BIT 0xa4
0000            401   _P2_5           BIT 0xa5
0000            402   _P2_6           BIT 0xa6
0000            403   _P3_0           BIT 0xb0
0000            404   _P3_1           BIT 0xb1
0000            405   _P3_2           BIT 0xb2
0000            406   _P3_3           BIT 0xb3
0000            407   _P3_4           BIT 0xb4
0000            408   _P3_7           BIT 0xb7
0000            409   _CCF0           BIT 0xd8
0000            410   _CCF1           BIT 0xd9
0000            411   _CCF2           BIT 0xda
0000            412   _CCF3           BIT 0xdb
0000            413   _CCF4           BIT 0xdc
0000            414   _CCF5           BIT 0xdd
0000            415   _CR             BIT 0xde
0000            416   _CF             BIT 0xdf
0000            417   _PARITY         BIT 0xd0
0000            418   _F1             BIT 0xd1
0000            419   _OV             BIT 0xd2
0000            420   _RS0            BIT 0xd3
0000            421   _RS1            BIT 0xd4
0000            422   _F0             BIT 0xd5
0000            423   _AC             BIT 0xd6
0000            424   _CY             BIT 0xd7
0000            425   _RI             BIT 0x98
0000            426   _TI             BIT 0x99
0000            427   _RB8            BIT 0x9a
0000            428   _TB8            BIT 0x9b
0000            429   _REN            BIT 0x9c
0000            430   _CE             BIT 0x9d
0000            431   _SMODE          BIT 0x9e
0000            432   _RI1            BIT 0xc8
0000            433   _TI1            BIT 0xc9
0000            434   _RBX1           BIT 0xca
0000            435   _TBX1           BIT 0xcb
0000            436   _REN1           BIT 0xcc
0000            437   _PERR1          BIT 0xcd
0000            438   _OVR1           BIT 0xce
0000            439   _SI             BIT 0xc0
0000            440   _ACK            BIT 0xc1
0000            441   _ARBLOST        BIT 0xc2
0000            442   _ACKRQ          BIT 0xc3
0000            443   _STO            BIT 0xc4
0000            444   _STA            BIT 0xc5
0000            445   _TXMODE         BIT 0xc6
0000            446   _MASTER         BIT 0xc7
0000            447   _SPIEN          BIT 0xf8
0000            448   _TXNF           BIT 0xf9
0000            449   _NSSMD0         BIT 0xfa
0000            450   _NSSMD1         BIT 0xfb
0000            451   _RXOVRN         BIT 0xfc
0000            452   _MODF           BIT 0xfd
0000            453   _WCOL           BIT 0xfe
0000            454   _SPIF           BIT 0xff
0000            455   _IT0            BIT 0x88
0000            456   _IE0            BIT 0x89
0000            457   _IT1            BIT 0x8a
0000            458   _IE1            BIT 0x8b
0000            459   _TR0            BIT 0x8c
0000            460   _TF0            BIT 0x8d
0000            461   _TR1            BIT 0x8e
0000            462   _TF1            BIT 0x8f
0000            463   _T2XCLK0        BIT 0xc8
0000            464   _T2XCLK1        BIT 0xc9
0000            465   _TR2            BIT 0xca
0000            466   _T2SPLIT        BIT 0xcb
0000            467   _TF2CEN         BIT 0xcc
0000            468   _TF2LEN         BIT 0xcd
0000            469   _TF2L           BIT 0xce
0000            470   _TF2H           BIT 0xcf
0000            471   _T4XCLK0        BIT 0x98
0000            472   _T4XCLK1        BIT 0x99
0000            473   _TR4            BIT 0x9a
0000            474   _T4SPLIT        BIT 0x9b
0000            475   _TF4CEN         BIT 0x9c
0000            476   _TF4LEN         BIT 0x9d
0000            477   _TF4L           BIT 0x9e
0000            478   _TF4H           BIT 0x9f
0000            479   _T5XCLK0        BIT 0xc0
0000            480   _T5XCLK1        BIT 0xc1
0000            481   _TR5            BIT 0xc2
0000            482   _T5SPLIT        BIT 0xc3
0000            483   _TF5CEN         BIT 0xc4
0000            484   _TF5LEN         BIT 0xc5
0000            485   _TF5L           BIT 0xc6
0000            486   _TF5H           BIT 0xc7
0000            487   _RIE            BIT 0xd8
0000            488   _RXTO0          BIT 0xd9
0000            489   _RXTO1          BIT 0xda
0000            490   _RFRQ           BIT 0xdb
0000            491   _TIE            BIT 0xdc
0000            492   _TXHOLD         BIT 0xdd
0000            493   _TXNF1          BIT 0xde
0000            494   _TFRQ           BIT 0xdf
0000            495   ;--------------------------------------------------------
0000            496   ; overlayable register banks
0000            497   ;--------------------------------------------------------
0000            498            rbank0 segment data overlay
0000            499   ;--------------------------------------------------------
0000            500   ; internal ram data
0000            501   ;--------------------------------------------------------
0000            502            rseg R_DSEG
0000            503   _overflow_count:
0000            504            ds 1
0001            505   _LCDprint_PARM_2:
0001            506            ds 1
0002            507   _write_rx_PARM_2:
0002            508            ds 2
0004            509   _write_rx_buff_1_47:
0004            510            ds 3
0007            511   _write_rx_sloc0_1_0:
0007            512            ds 2
0009            513   _display_rx_PARM_2:
0009            514            ds 2
000B            515   _display_freq_kHz_buff_1_55:
000B            516            ds 16
001B            517   _display_capacitance_pF_buff_1_57:
001B            518            ds 16
002B            519   _calculate_period_PARM_2:
002B            520            ds 2
002D            521   _calculate_period_PARM_3:
002D            522            ds 2
002F            523   _calculate_freq_PARM_2:
002F            524            ds 2
0031            525   _calculate_freq_PARM_3:
0031            526            ds 2
0033            527   ;--------------------------------------------------------
0033            528   ; overlayable items in internal ram 
0033            529   ;--------------------------------------------------------
0000            530            rseg    R_OSEG
0000            531   ;--------------------------------------------------------
0000            532   ; indirectly addressable internal ram data
0000            533   ;--------------------------------------------------------
0000            534            rseg R_ISEG
0000            535   ;--------------------------------------------------------
0000            536   ; absolute internal ram data
0000            537   ;--------------------------------------------------------
0000            538            DSEG
0000            539   ;--------------------------------------------------------
0000            540   ; bit data
0000            541   ;--------------------------------------------------------
0000            542            rseg R_BSEG
0000            543   _LCDprint_PARM_3:
0000            544            DBIT    1
0001            545   ;--------------------------------------------------------
0001            546   ; paged external ram data
0001            547   ;--------------------------------------------------------
0000            548            rseg R_PSEG
0000            549   ;--------------------------------------------------------
0000            550   ; external ram data
0000            551   ;--------------------------------------------------------
0000            552            rseg R_XSEG
0000            553   ;--------------------------------------------------------
0000            554   ; absolute external ram data
0000            555   ;--------------------------------------------------------
0000            556            XSEG
0000            557   ;--------------------------------------------------------
0000            558   ; external initialized ram data
0000            559   ;--------------------------------------------------------
0000            560            rseg R_IXSEG
0000            561            rseg R_HOME
0000            562            rseg R_GSINIT
0000            563            rseg R_CSEG
0000            564   ;--------------------------------------------------------
0000            565   ; Reset entry point and interrupt vectors
0000            566   ;--------------------------------------------------------
0000            567            CSEG at 0x0000
0000 020000     568            ljmp    _crt0
0003            569   ;--------------------------------------------------------
0003            570   ; global & static initialisations
0003            571   ;--------------------------------------------------------
0000            572            rseg R_HOME
0000            573            rseg R_GSINIT
0000            574            rseg R_GSINIT
0000            575   ;--------------------------------------------------------
0000            576   ; data variables initialization
0000            577   ;--------------------------------------------------------
0000            578            rseg R_DINIT
0000            579            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            580   ;--------------------------------------------------------
0000            581   ; code
0000            582   ;--------------------------------------------------------
0000            583            rseg R_CSEG
0000            584   ;------------------------------------------------------------
0000            585   ;Allocation info for local variables in function '_c51_external_startup'
0000            586   ;------------------------------------------------------------
0000            587   ;------------------------------------------------------------
0000            588   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:28: char _c51_external_startup(void) {
0000            589   ;        -----------------------------------------
0000            590   ;         function _c51_external_startup
0000            591   ;        -----------------------------------------
0000            592   __c51_external_startup:
0000            593            using   0
0000            594   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:30: SFRPAGE = 0x00;
0000 75A700     595            mov     _SFRPAGE,#0x00
0003            596   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:31: WDTCN = 0xDE; // First Key
0003 7597DE     597            mov     _WDTCN,#0xDE
0006            598   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:32: WDTCN = 0xAD; // Second Key
0006 7597AD     599            mov     _WDTCN,#0xAD
0009            600   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:34: VDM0CN |= 0x80;
0009 43FF80     601            orl     _VDM0CN,#0x80
000C            602   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:35: RSTSRC = 0x02;
000C 75EF02     603            mov     _RSTSRC,#0x02
000F            604   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:43: SFRPAGE = 0x10;
000F 75A710     605            mov     _SFRPAGE,#0x10
0012            606   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:44: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     607            mov     _PFE0CN,#0x20
0015            608   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:45: SFRPAGE = 0x00;
0015 75A700     609            mov     _SFRPAGE,#0x00
0018            610   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:67: CLKSEL = 0x00;
0018 75A900     611            mov     _CLKSEL,#0x00
001B            612   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:68: CLKSEL = 0x00;
001B 75A900     613            mov     _CLKSEL,#0x00
001E            614   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:69: while ((CLKSEL & 0x80) == 0);
001E            615   L002001?:
001E E5A9       616            mov     a,_CLKSEL
0020 30E7C0     617            jnb     acc.7,L002001?
0023            618   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:70: CLKSEL = 0x03;
0023 75A903     619            mov     _CLKSEL,#0x03
0026            620   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:71: CLKSEL = 0x03;
0026 75A903     621            mov     _CLKSEL,#0x03
0029            622   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:72: while ((CLKSEL & 0x80) == 0);
0029            623   L002004?:
0029 E5A9       624            mov     a,_CLKSEL
002B 30E700     625            jnb     acc.7,L002004?
002E            626   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:77: P0MDOUT |= 0x10; // Enable UART0 TX As Push-Pull Output
002E 43A410     627            orl     _P0MDOUT,#0x10
0031            628   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:78: XBR0     = 0x01; // Enable UART0 on P0.4 (TX) and P0.5 (RX)
0031 75E101     629            mov     _XBR0,#0x01
0034            630   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:79: XBR1     = 0X00; // Enable T0 on P0.0
0034 75E200     631            mov     _XBR1,#0x00
0037            632   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:80: XBR2     = 0x40; // Enable Crossbar and Weak Pull-Ups
0037 75E340     633            mov     _XBR2,#0x40
003A            634   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:87: SCON0 = 0x10;
003A 759810     635            mov     _SCON0,#0x10
003D            636   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:88: CKCON0 |= 0b_0000_0000 ; // Timer 1 Uses SYSCLK / 12
003D 858E8E     637            mov     _CKCON0,_CKCON0
0040            638   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:89: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L)); // Set Timer1 Reload Value, Initial Value
0040 758DE6     639            mov     _TH1,#0xE6
0043            640   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:90: TL1 = TH1;       // Init Timer1
0043 858D8B     641            mov     _TL1,_TH1
0046            642   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:91: TMOD &= ~0xf0;  // TMOD: Timer 1 in 8-bit auto-reload
0046 53890F     643            anl     _TMOD,#0x0F
0049            644   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:92: TMOD |=  0x20;
0049 438920     645            orl     _TMOD,#0x20
004C            646   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:93: TR1 = 1; // Start Timer1
004C D28E       647            setb    _TR1
004E            648   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:94: TI = 1;  // Indicate TX0 Ready
004E D299       649            setb    _TI
0050            650   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:96: return 0;
0050 758200     651            mov     dpl,#0x00
0053 22         652            ret
0054            653   ;------------------------------------------------------------
0054            654   ;Allocation info for local variables in function 'Timer3us'
0054            655   ;------------------------------------------------------------
0054            656   ;us                        Allocated to registers r2 
0054            657   ;i                         Allocated to registers r3 
0054            658   ;------------------------------------------------------------
0054            659   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:102: void Timer3us(unsigned char us) {
0054            660   ;        -----------------------------------------
0054            661   ;         function Timer3us
0054            662   ;        -----------------------------------------
0054            663   _Timer3us:
0054 AA82       664            mov     r2,dpl
0056            665   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:106: CKCON0 |= 0b_0100_0000;
0056 438E40     666            orl     _CKCON0,#0x40
0059            667   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:108: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to Overflow in 1us
0059 7592B8     668            mov     _TMR3RL,#0xB8
005C 7593FF     669            mov     (_TMR3RL >> 8),#0xFF
005F            670   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:109: TMR3 = TMR3RL;                 // Initialize Timer3 for First Overflow
005F 859294     671            mov     _TMR3,_TMR3RL
0062 859395     672            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0065            673   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:111: TMR3CN0 = 0x04;                 // Start Timer3 and Clear Overflow Flag
0065 759104     674            mov     _TMR3CN0,#0x04
0068            675   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:112: for (i = 0; i < us; i++) {      // Count Overflows (#Microseconds)
0068 7B00       676            mov     r3,#0x00
006A            677   L003004?:
006A C3         678            clr     c
006B EB         679            mov     a,r3
006C 9A         680            subb    a,r2
006D 5000       681            jnc     L003007?
006F            682   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:113: while (!(TMR3CN0 & 0x80));  // Wait for Overflow
006F            683   L003001?:
006F E591       684            mov     a,_TMR3CN0
0071 30E7C0     685            jnb     acc.7,L003001?
0074            686   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:114: TMR3CN0 &= ~(0x80);         // Clear Overflow Indicator
0074 53917F     687            anl     _TMR3CN0,#0x7F
0077            688   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:112: for (i = 0; i < us; i++) {      // Count Overflows (#Microseconds)
0077 0B         689            inc     r3
0078 8000       690            sjmp    L003004?
007A            691   L003007?:
007A            692   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:116: TMR3CN0 = 0 ;                   // Stop Timer3 and Clear Overflow Flag
007A 759100     693            mov     _TMR3CN0,#0x00
007D 22         694            ret
007E            695   ;------------------------------------------------------------
007E            696   ;Allocation info for local variables in function 'waitms'
007E            697   ;------------------------------------------------------------
007E            698   ;ms                        Allocated to registers r2 r3 
007E            699   ;j                         Allocated to registers r2 r3 
007E            700   ;------------------------------------------------------------
007E            701   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:119: void waitms (unsigned int ms) {
007E            702   ;        -----------------------------------------
007E            703   ;         function waitms
007E            704   ;        -----------------------------------------
007E            705   _waitms:
007E AA82       706            mov     r2,dpl
0080 AB83       707            mov     r3,dph
0082            708   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:121: for (j = ms; j != 0; j--) {
0082            709   L004001?:
0082 BA0040     710            cjne    r2,#0x00,L004010?
0085 BB0040     711            cjne    r3,#0x00,L004010?
0088 22         712            ret
0089            713   L004010?:
0089            714   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:122: Timer3us(249);
0089 7582F9     715            mov     dpl,#0xF9
008C C002       716            push    ar2
008E C003       717            push    ar3
0090 120000     718            lcall   _Timer3us
0093            719   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:123: Timer3us(249);
0093 7582F9     720            mov     dpl,#0xF9
0096 120000     721            lcall   _Timer3us
0099            722   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:124: Timer3us(249);
0099 7582F9     723            mov     dpl,#0xF9
009C 120000     724            lcall   _Timer3us
009F            725   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:125: Timer3us(250);
009F 7582FA     726            mov     dpl,#0xFA
00A2 120000     727            lcall   _Timer3us
00A5 D003       728            pop     ar3
00A7 D002       729            pop     ar2
00A9            730   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:121: for (j = ms; j != 0; j--) {
00A9 1A         731            dec     r2
00AA BAFF00     732            cjne    r2,#0xff,L004011?
00AD 1B         733            dec     r3
00AE            734   L004011?:
00AE 8000       735            sjmp    L004001?
00B0            736   ;------------------------------------------------------------
00B0            737   ;Allocation info for local variables in function 'TIMER0_Init'
00B0            738   ;------------------------------------------------------------
00B0            739   ;------------------------------------------------------------
00B0            740   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:129: void TIMER0_Init(void) {
00B0            741   ;        -----------------------------------------
00B0            742   ;         function TIMER0_Init
00B0            743   ;        -----------------------------------------
00B0            744   _TIMER0_Init:
00B0            745   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:130: TMOD &= 0b_1111_0000; // Set the Bits of Timer/Counter 0 to 0
00B0 5389F0     746            anl     _TMOD,#0xF0
00B3            747   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:131: TMOD |= 0b_0000_0001; // Timer/Counter 0 Used As 16-Bit Timer
00B3 438901     748            orl     _TMOD,#0x01
00B6            749   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:132: TR0 = 0; // Stop Timer/Counter 0
00B6 C28C       750            clr     _TR0
00B8 22         751            ret
00B9            752   ;------------------------------------------------------------
00B9            753   ;Allocation info for local variables in function 'Serial_Init'
00B9            754   ;------------------------------------------------------------
00B9            755   ;------------------------------------------------------------
00B9            756   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:135: void Serial_Init(void) {
00B9            757   ;        -----------------------------------------
00B9            758   ;         function Serial_Init
00B9            759   ;        -----------------------------------------
00B9            760   _Serial_Init:
00B9            761   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:136: waitms(500); // Give Putty a chance to start.
00B9 9001F4     762            mov     dptr,#0x01F4
00BC 120000     763            lcall   _waitms
00BF            764   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:137: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
00BF 74C0       765            mov     a,#__str_0
00C1 C0E0       766            push    acc
00C3 7451       767            mov     a,#(__str_0 >> 8)
00C5 C0E0       768            push    acc
00C7 7480       769            mov     a,#0x80
00C9 C0E0       770            push    acc
00CB 120000     771            lcall   _printf
00CE 1581       772            dec     sp
00D0 1581       773            dec     sp
00D2 1581       774            dec     sp
00D4 22         775            ret
00D5            776   ;------------------------------------------------------------
00D5            777   ;Allocation info for local variables in function 'LCD_pulse'
00D5            778   ;------------------------------------------------------------
00D5            779   ;------------------------------------------------------------
00D5            780   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:140: void LCD_pulse(void) {
00D5            781   ;        -----------------------------------------
00D5            782   ;         function LCD_pulse
00D5            783   ;        -----------------------------------------
00D5            784   _LCD_pulse:
00D5            785   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:141: LCD_E = 1; // Pulse the Enable Pin
00D5 D2A5       786            setb    _P2_5
00D7            787   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:142: Timer3us(40); // Wait for 40us
00D7 758228     788            mov     dpl,#0x28
00DA 120000     789            lcall   _Timer3us
00DD            790   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:143: LCD_E = 0; // Pulse the Enable Pin
00DD C2A5       791            clr     _P2_5
00DF 22         792            ret
00E0            793   ;------------------------------------------------------------
00E0            794   ;Allocation info for local variables in function 'LCD_byte'
00E0            795   ;------------------------------------------------------------
00E0            796   ;x                         Allocated to registers r2 
00E0            797   ;------------------------------------------------------------
00E0            798   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:146: void LCD_byte(unsigned char x) {
00E0            799   ;        -----------------------------------------
00E0            800   ;         function LCD_byte
00E0            801   ;        -----------------------------------------
00E0            802   _LCD_byte:
00E0 AA82       803            mov     r2,dpl
00E2            804   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:149: ACC = x; // Send High Nibble
00E2 8AE0       805            mov     _ACC,r2
00E4            806   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:150: LCD_D7 = ACC_7;
00E4 A2E7       807            mov     c,_ACC_7
00E6 92A1       808            mov     _P2_1,c
00E8            809   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:151: LCD_D6 = ACC_6;
00E8 A2E6       810            mov     c,_ACC_6
00EA 92A2       811            mov     _P2_2,c
00EC            812   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:152: LCD_D5 = ACC_5;
00EC A2E5       813            mov     c,_ACC_5
00EE 92A3       814            mov     _P2_3,c
00F0            815   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:153: LCD_D4 = ACC_4;
00F0 A2E4       816            mov     c,_ACC_4
00F2 92A4       817            mov     _P2_4,c
00F4            818   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:154: LCD_pulse();
00F4 C002       819            push    ar2
00F6 120000     820            lcall   _LCD_pulse
00F9            821   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:156: Timer3us(40); // Wait for 40us
00F9 758228     822            mov     dpl,#0x28
00FC 120000     823            lcall   _Timer3us
00FF D002       824            pop     ar2
0101            825   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:158: ACC = x; // Send Low Nibble
0101 8AE0       826            mov     _ACC,r2
0103            827   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:159: LCD_D7 = ACC_3;
0103 A2E3       828            mov     c,_ACC_3
0105 92A1       829            mov     _P2_1,c
0107            830   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:160: LCD_D6 = ACC_2;
0107 A2E2       831            mov     c,_ACC_2
0109 92A2       832            mov     _P2_2,c
010B            833   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:161: LCD_D5 = ACC_1;
010B A2E1       834            mov     c,_ACC_1
010D 92A3       835            mov     _P2_3,c
010F            836   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:162: LCD_D4 = ACC_0;
010F A2E0       837            mov     c,_ACC_0
0111 92A4       838            mov     _P2_4,c
0113            839   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:163: LCD_pulse();
0113 020000     840            ljmp    _LCD_pulse
0116            841   ;------------------------------------------------------------
0116            842   ;Allocation info for local variables in function 'WriteData'
0116            843   ;------------------------------------------------------------
0116            844   ;x                         Allocated to registers r2 
0116            845   ;------------------------------------------------------------
0116            846   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:166: void WriteData(unsigned char x) {
0116            847   ;        -----------------------------------------
0116            848   ;         function WriteData
0116            849   ;        -----------------------------------------
0116            850   _WriteData:
0116 AA82       851            mov     r2,dpl
0118            852   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:167: LCD_RS = 1; // Set LCD to Data Mode
0118 D2A6       853            setb    _P2_6
011A            854   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:168: LCD_byte(x); // Write the Data
011A 8A82       855            mov     dpl,r2
011C 120000     856            lcall   _LCD_byte
011F            857   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:169: waitms(2); // Wait for 2ms
011F 900002     858            mov     dptr,#0x0002
0122 020000     859            ljmp    _waitms
0125            860   ;------------------------------------------------------------
0125            861   ;Allocation info for local variables in function 'WriteCommand'
0125            862   ;------------------------------------------------------------
0125            863   ;x                         Allocated to registers r2 
0125            864   ;------------------------------------------------------------
0125            865   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:172: void WriteCommand(unsigned char x) {
0125            866   ;        -----------------------------------------
0125            867   ;         function WriteCommand
0125            868   ;        -----------------------------------------
0125            869   _WriteCommand:
0125 AA82       870            mov     r2,dpl
0127            871   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:173: LCD_RS = 0; // Set LCD to Command Mode
0127 C2A6       872            clr     _P2_6
0129            873   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:174: LCD_byte(x); // Write the Command
0129 8A82       874            mov     dpl,r2
012B 120000     875            lcall   _LCD_byte
012E            876   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:175: waitms(5); // Wait for 5ms
012E 900005     877            mov     dptr,#0x0005
0131 020000     878            ljmp    _waitms
0134            879   ;------------------------------------------------------------
0134            880   ;Allocation info for local variables in function 'LCD_4BIT'
0134            881   ;------------------------------------------------------------
0134            882   ;------------------------------------------------------------
0134            883   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:178: void LCD_4BIT(void) {
0134            884   ;        -----------------------------------------
0134            885   ;         function LCD_4BIT
0134            886   ;        -----------------------------------------
0134            887   _LCD_4BIT:
0134            888   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:179: LCD_E = 0; // Resting State of LCD Enable Pin is 0.
0134 C2A5       889            clr     _P2_5
0136            890   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:180: waitms(20); // Wait for 20ms
0136 900014     891            mov     dptr,#0x0014
0139 120000     892            lcall   _waitms
013C            893   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:183: WriteCommand(0x33); // Change to 8-bit Mode
013C 758233     894            mov     dpl,#0x33
013F 120000     895            lcall   _WriteCommand
0142            896   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:184: WriteCommand(0x33); // Change to 8-bit Mode
0142 758233     897            mov     dpl,#0x33
0145 120000     898            lcall   _WriteCommand
0148            899   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:185: WriteCommand(0x32); // Change to 4-bit Mode
0148 758232     900            mov     dpl,#0x32
014B 120000     901            lcall   _WriteCommand
014E            902   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:188: WriteCommand(0x28); // 4-bit, 2 Line, 5x7 Dots
014E 758228     903            mov     dpl,#0x28
0151 120000     904            lcall   _WriteCommand
0154            905   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:189: WriteCommand(0x0c); // Display On, No Cursor, No Blink
0154 75820C     906            mov     dpl,#0x0C
0157 120000     907            lcall   _WriteCommand
015A            908   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:190: WriteCommand(0x01); // Clear Screen Command (Takes Some Time)
015A 758201     909            mov     dpl,#0x01
015D 120000     910            lcall   _WriteCommand
0160            911   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:191: waitms(20); // Wait 20ms for Clear Screen Command to Finish
0160 900014     912            mov     dptr,#0x0014
0163 020000     913            ljmp    _waitms
0166            914   ;------------------------------------------------------------
0166            915   ;Allocation info for local variables in function 'LCDprint'
0166            916   ;------------------------------------------------------------
0166            917   ;line                      Allocated with name '_LCDprint_PARM_2'
0166            918   ;string                    Allocated to registers r2 r3 r4 
0166            919   ;j                         Allocated to registers r5 r6 
0166            920   ;------------------------------------------------------------
0166            921   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:194: void LCDprint(char * string, unsigned char line, bit clear) {
0166            922   ;        -----------------------------------------
0166            923   ;         function LCDprint
0166            924   ;        -----------------------------------------
0166            925   _LCDprint:
0166 AA82       926            mov     r2,dpl
0168 AB83       927            mov     r3,dph
016A ACF0       928            mov     r4,b
016C            929   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:197: WriteCommand(line == 2 ? 0xc0 : 0x80); // Set Cursor
016C 7402       930            mov     a,#0x02
016E B5F080     931            cjne    a,_LCDprint_PARM_2,L012013?
0171 7DC0       932            mov     r5,#0xC0
0173 8000       933            sjmp    L012014?
0175            934   L012013?:
0175 7D80       935            mov     r5,#0x80
0177            936   L012014?:
0177 8D82       937            mov     dpl,r5
0179 C002       938            push    ar2
017B C003       939            push    ar3
017D C004       940            push    ar4
017F 120000     941            lcall   _WriteCommand
0182            942   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:198: waitms(5); // Wait for 5ms
0182 900005     943            mov     dptr,#0x0005
0185 120000     944            lcall   _waitms
0188 D004       945            pop     ar4
018A D003       946            pop     ar3
018C D002       947            pop     ar2
018E            948   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:199: for (j = 0; string[j] != 0; j++) WriteData(string[j]); // Write Message
018E 7D00       949            mov     r5,#0x00
0190 7E00       950            mov     r6,#0x00
0192            951   L012003?:
0192 ED         952            mov     a,r5
0193 2A         953            add     a,r2
0194 FF         954            mov     r7,a
0195 EE         955            mov     a,r6
0196 3B         956            addc    a,r3
0197 F8         957            mov     r0,a
0198 8C01       958            mov     ar1,r4
019A 8F82       959            mov     dpl,r7
019C 8883       960            mov     dph,r0
019E 89F0       961            mov     b,r1
01A0 120000     962            lcall   __gptrget
01A3 FF         963            mov     r7,a
01A4 6000       964            jz      L012006?
01A6 8F82       965            mov     dpl,r7
01A8 C002       966            push    ar2
01AA C003       967            push    ar3
01AC C004       968            push    ar4
01AE C005       969            push    ar5
01B0 C006       970            push    ar6
01B2 120000     971            lcall   _WriteData
01B5 D006       972            pop     ar6
01B7 D005       973            pop     ar5
01B9 D004       974            pop     ar4
01BB D003       975            pop     ar3
01BD D002       976            pop     ar2
01BF 0D         977            inc     r5
01C0 BD0040     978            cjne    r5,#0x00,L012003?
01C3 0E         979            inc     r6
01C4 8000       980            sjmp    L012003?
01C6            981   L012006?:
01C6            982   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:200: if (clear) for (; j < CHARS_PER_LINE; j++) WriteData(' '); // Clear Rest of Line
01C6 3090C0     983            jnb     _LCDprint_PARM_3,L012011?
01C9 8D02       984            mov     ar2,r5
01CB 8E03       985            mov     ar3,r6
01CD            986   L012007?:
01CD C3         987            clr     c
01CE EA         988            mov     a,r2
01CF 9410       989            subb    a,#0x10
01D1 EB         990            mov     a,r3
01D2 6480       991            xrl     a,#0x80
01D4 9480       992            subb    a,#0x80
01D6 5000       993            jnc     L012011?
01D8 758220     994            mov     dpl,#0x20
01DB C002       995            push    ar2
01DD C003       996            push    ar3
01DF 120000     997            lcall   _WriteData
01E2 D003       998            pop     ar3
01E4 D002       999            pop     ar2
01E6 0A        1000            inc     r2
01E7 BA0040    1001            cjne    r2,#0x00,L012007?
01EA 0B        1002            inc     r3
01EB 8000      1003            sjmp    L012007?
01ED           1004   L012011?:
01ED 22        1005            ret
01EE           1006   ;------------------------------------------------------------
01EE           1007   ;Allocation info for local variables in function 'write_rx'
01EE           1008   ;------------------------------------------------------------
01EE           1009   ;len                       Allocated with name '_write_rx_PARM_2'
01EE           1010   ;buff                      Allocated with name '_write_rx_buff_1_47'
01EE           1011   ;j                         Allocated with name '_write_rx_sloc0_1_0'
01EE           1012   ;c                         Allocated to registers r3 
01EE           1013   ;sloc0                     Allocated with name '_write_rx_sloc0_1_0'
01EE           1014   ;------------------------------------------------------------
01EE           1015   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:203: int write_rx(char* buff, int len) {
01EE           1016   ;        -----------------------------------------
01EE           1017   ;         function write_rx
01EE           1018   ;        -----------------------------------------
01EE           1019   _write_rx:
01EE 858240    1020            mov     _write_rx_buff_1_47,dpl
01F1 858341    1021            mov     (_write_rx_buff_1_47 + 1),dph
01F4 85F042    1022            mov     (_write_rx_buff_1_47 + 2),b
01F7           1023   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:207: for (j = 0; j < (len-1); j++) {
01F7 E4        1024            clr     a
01F8 F5C0      1025            mov     _write_rx_sloc0_1_0,a
01FA F5C1      1026            mov     (_write_rx_sloc0_1_0 + 1),a
01FC E5F0      1027            mov     a,_write_rx_PARM_2
01FE 24FF      1028            add     a,#0xff
0200 FF        1029            mov     r7,a
0201 E5F1      1030            mov     a,(_write_rx_PARM_2 + 1)
0203 34FF      1031            addc    a,#0xff
0205 F8        1032            mov     r0,a
0206 7900      1033            mov     r1,#0x00
0208 7A00      1034            mov     r2,#0x00
020A           1035   L013005?:
020A C3        1036            clr     c
020B E9        1037            mov     a,r1
020C 9F        1038            subb    a,r7
020D EA        1039            mov     a,r2
020E 6480      1040            xrl     a,#0x80
0210 88F0      1041            mov     b,r0
0212 63F080    1042            xrl     b,#0x80
0215 95F0      1043            subb    a,b
0217 5000      1044            jnc     L013008?
0219           1045   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:208: c = getchar();
0219 C002      1046            push    ar2
021B C007      1047            push    ar7
021D C000      1048            push    ar0
021F C001      1049            push    ar1
0221 120000    1050            lcall   _getchar
0224 AB82      1051            mov     r3,dpl
0226 D001      1052            pop     ar1
0228 D000      1053            pop     ar0
022A D007      1054            pop     ar7
022C D002      1055            pop     ar2
022E           1056   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:209: if ( (c == '\n') || (c == '\r') ) {
022E BB0A00    1057            cjne    r3,#0x0A,L013015?
0231 8000      1058            sjmp    L013001?
0233           1059   L013015?:
0233 BB0DC0    1060            cjne    r3,#0x0D,L013002?
0236           1061   L013001?:
0236           1062   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:210: buff[j] = 0;
0236 E5C0      1063            mov     a,_write_rx_sloc0_1_0
0238 2540      1064            add     a,_write_rx_buff_1_47
023A FC        1065            mov     r4,a
023B E5C1      1066            mov     a,(_write_rx_sloc0_1_0 + 1)
023D 3541      1067            addc    a,(_write_rx_buff_1_47 + 1)
023F FD        1068            mov     r5,a
0240 AE42      1069            mov     r6,(_write_rx_buff_1_47 + 2)
0242 8C82      1070            mov     dpl,r4
0244 8D83      1071            mov     dph,r5
0246 8EF0      1072            mov     b,r6
0248 E4        1073            clr     a
0249 120000    1074            lcall   __gptrput
024C           1075   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:211: return j;
024C 85C082    1076            mov     dpl,_write_rx_sloc0_1_0
024F 85C183    1077            mov     dph,(_write_rx_sloc0_1_0 + 1)
0252 22        1078            ret
0253           1079   L013002?:
0253           1080   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:213: buff[j] = c;
0253 E9        1081            mov     a,r1
0254 2540      1082            add     a,_write_rx_buff_1_47
0256 FC        1083            mov     r4,a
0257 EA        1084            mov     a,r2
0258 3541      1085            addc    a,(_write_rx_buff_1_47 + 1)
025A FD        1086            mov     r5,a
025B AE42      1087            mov     r6,(_write_rx_buff_1_47 + 2)
025D 8C82      1088            mov     dpl,r4
025F 8D83      1089            mov     dph,r5
0261 8EF0      1090            mov     b,r6
0263 EB        1091            mov     a,r3
0264 120000    1092            lcall   __gptrput
0267           1093   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:207: for (j = 0; j < (len-1); j++) {
0267 09        1094            inc     r1
0268 B90000    1095            cjne    r1,#0x00,L013018?
026B 0A        1096            inc     r2
026C           1097   L013018?:
026C 89C0      1098            mov     _write_rx_sloc0_1_0,r1
026E 8AC1      1099            mov     (_write_rx_sloc0_1_0 + 1),r2
0270 8000      1100            sjmp    L013005?
0272           1101   L013008?:
0272           1102   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:216: buff[j] = 0;
0272 E5C0      1103            mov     a,_write_rx_sloc0_1_0
0274 2540      1104            add     a,_write_rx_buff_1_47
0276 FA        1105            mov     r2,a
0277 E5C1      1106            mov     a,(_write_rx_sloc0_1_0 + 1)
0279 3541      1107            addc    a,(_write_rx_buff_1_47 + 1)
027B FB        1108            mov     r3,a
027C AC42      1109            mov     r4,(_write_rx_buff_1_47 + 2)
027E 8A82      1110            mov     dpl,r2
0280 8B83      1111            mov     dph,r3
0282 8CF0      1112            mov     b,r4
0284 E4        1113            clr     a
0285 120000    1114            lcall   __gptrput
0288           1115   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:217: return len;
0288 85F082    1116            mov     dpl,_write_rx_PARM_2
028B 85F183    1117            mov     dph,(_write_rx_PARM_2 + 1)
028E 22        1118            ret
028F           1119   ;------------------------------------------------------------
028F           1120   ;Allocation info for local variables in function 'display_rx'
028F           1121   ;------------------------------------------------------------
028F           1122   ;len                       Allocated with name '_display_rx_PARM_2'
028F           1123   ;buff                      Allocated to registers r2 r3 r4 
028F           1124   ;------------------------------------------------------------
028F           1125   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:220: void display_rx(char* buff, int len) {
028F           1126   ;        -----------------------------------------
028F           1127   ;         function display_rx
028F           1128   ;        -----------------------------------------
028F           1129   _display_rx:
028F AA82      1130            mov     r2,dpl
0291 AB83      1131            mov     r3,dph
0293 ACF0      1132            mov     r4,b
0295           1133   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:221: printf("Type Intended Display in Line 2 (16 Char Max): ");
0295 C002      1134            push    ar2
0297 C003      1135            push    ar3
0299 C004      1136            push    ar4
029B 7440      1137            mov     a,#__str_1
029D C0E0      1138            push    acc
029F 7456      1139            mov     a,#(__str_1 >> 8)
02A1 C0E0      1140            push    acc
02A3 7480      1141            mov     a,#0x80
02A5 C0E0      1142            push    acc
02A7 120000    1143            lcall   _printf
02AA 1581      1144            dec     sp
02AC 1581      1145            dec     sp
02AE 1581      1146            dec     sp
02B0 D004      1147            pop     ar4
02B2 D003      1148            pop     ar3
02B4 D002      1149            pop     ar2
02B6           1150   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:222: write_rx(buff, len);
02B6 85B0F0    1151            mov     _write_rx_PARM_2,_display_rx_PARM_2
02B9 85B1F1    1152            mov     (_write_rx_PARM_2 + 1),(_display_rx_PARM_2 + 1)
02BC 8A82      1153            mov     dpl,r2
02BE 8B83      1154            mov     dph,r3
02C0 8CF0      1155            mov     b,r4
02C2 C002      1156            push    ar2
02C4 C003      1157            push    ar3
02C6 C004      1158            push    ar4
02C8 120000    1159            lcall   _write_rx
02CB           1160   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:223: printf("\n");
02CB 7400      1161            mov     a,#__str_2
02CD C0E0      1162            push    acc
02CF 744D      1163            mov     a,#(__str_2 >> 8)
02D1 C0E0      1164            push    acc
02D3 7480      1165            mov     a,#0x80
02D5 C0E0      1166            push    acc
02D7 120000    1167            lcall   _printf
02DA 1581      1168            dec     sp
02DC 1581      1169            dec     sp
02DE 1581      1170            dec     sp
02E0 D004      1171            pop     ar4
02E2 D003      1172            pop     ar3
02E4 D002      1173            pop     ar2
02E6           1174   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:224: LCDprint(buff, 1, 1);
02E6 75F001    1175            mov     _LCDprint_PARM_2,#0x01
02E9 D290      1176            setb    _LCDprint_PARM_3
02EB 8A82      1177            mov     dpl,r2
02ED 8B83      1178            mov     dph,r3
02EF 8CF0      1179            mov     b,r4
02F1 020000    1180            ljmp    _LCDprint
02F4           1181   ;------------------------------------------------------------
02F4           1182   ;Allocation info for local variables in function 'display_freq_kHz'
02F4           1183   ;------------------------------------------------------------
02F4           1184   ;freq_kHz                  Allocated to registers r2 r3 r4 r5 
02F4           1185   ;buff                      Allocated with name '_display_freq_kHz_buff_1_55'
02F4           1186   ;------------------------------------------------------------
02F4           1187   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:227: void display_freq_kHz(float freq_kHz) {
02F4           1188   ;        -----------------------------------------
02F4           1189   ;         function display_freq_kHz
02F4           1190   ;        -----------------------------------------
02F4           1191   _display_freq_kHz:
02F4           1192   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:229: sprintf(buff, "F: %i kHz", (int)(freq_kHz)); // Format the Frequency Value
02F4 120000    1193            lcall   ___fs2sint
02F7 AA82      1194            mov     r2,dpl
02F9 AB83      1195            mov     r3,dph
02FB C002      1196            push    ar2
02FD C003      1197            push    ar3
02FF 74C0      1198            mov     a,#__str_3
0301 C0E0      1199            push    acc
0303 7456      1200            mov     a,#(__str_3 >> 8)
0305 C0E0      1201            push    acc
0307 7480      1202            mov     a,#0x80
0309 C0E0      1203            push    acc
030B 7480      1204            mov     a,#_display_freq_kHz_buff_1_55
030D C0E0      1205            push    acc
030F 7454      1206            mov     a,#(_display_freq_kHz_buff_1_55 >> 8)
0311 C0E0      1207            push    acc
0313 7440      1208            mov     a,#0x40
0315 C0E0      1209            push    acc
0317 120000    1210            lcall   _sprintf
031A E581      1211            mov     a,sp
031C 24F8      1212            add     a,#0xf8
031E F581      1213            mov     sp,a
0320           1214   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:230: LCDprint(buff, 2, 1); // Write to LCD
0320 75F002    1215            mov     _LCDprint_PARM_2,#0x02
0323 D290      1216            setb    _LCDprint_PARM_3
0325 905480    1217            mov     dptr,#_display_freq_kHz_buff_1_55
0328 75F040    1218            mov     b,#0x40
032B 020000    1219            ljmp    _LCDprint
032E           1220   ;------------------------------------------------------------
032E           1221   ;Allocation info for local variables in function 'display_capacitance_pF'
032E           1222   ;------------------------------------------------------------
032E           1223   ;capacitance               Allocated to registers r2 r3 r4 r5 
032E           1224   ;buff                      Allocated with name '_display_capacitance_pF_buff_1_57'
032E           1225   ;------------------------------------------------------------
032E           1226   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:233: void display_capacitance_pF(float capacitance) {
032E           1227   ;        -----------------------------------------
032E           1228   ;         function display_capacitance_pF
032E           1229   ;        -----------------------------------------
032E           1230   _display_capacitance_pF:
032E           1231   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:235: sprintf(buff, "C: %i pF", (int)(capacitance)); // Format the Period Value
032E 120000    1232            lcall   ___fs2sint
0331 AA82      1233            mov     r2,dpl
0333 AB83      1234            mov     r3,dph
0335 C002      1235            push    ar2
0337 C003      1236            push    ar3
0339 7440      1237            mov     a,#__str_4
033B C0E0      1238            push    acc
033D 744D      1239            mov     a,#(__str_4 >> 8)
033F C0E0      1240            push    acc
0341 7480      1241            mov     a,#0x80
0343 C0E0      1242            push    acc
0345 7440      1243            mov     a,#_display_capacitance_pF_buff_1_57
0347 C0E0      1244            push    acc
0349 744C      1245            mov     a,#(_display_capacitance_pF_buff_1_57 >> 8)
034B C0E0      1246            push    acc
034D 7440      1247            mov     a,#0x40
034F C0E0      1248            push    acc
0351 120000    1249            lcall   _sprintf
0354 E581      1250            mov     a,sp
0356 24F8      1251            add     a,#0xf8
0358 F581      1252            mov     sp,a
035A           1253   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:236: LCDprint(buff, 2, 1); // Write to LCD
035A 75F002    1254            mov     _LCDprint_PARM_2,#0x02
035D D290      1255            setb    _LCDprint_PARM_3
035F 904C40    1256            mov     dptr,#_display_capacitance_pF_buff_1_57
0362 75F040    1257            mov     b,#0x40
0365 020000    1258            ljmp    _LCDprint
0368           1259   ;------------------------------------------------------------
0368           1260   ;Allocation info for local variables in function 'calculate_period'
0368           1261   ;------------------------------------------------------------
0368           1262   ;TH0                       Allocated with name '_calculate_period_PARM_2'
0368           1263   ;TL0                       Allocated with name '_calculate_period_PARM_3'
0368           1264   ;overflow_count            Allocated to registers 
0368           1265   ;------------------------------------------------------------
0368           1266   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:239: float calculate_period(int overflow_count, int TH0, int TL0) {
0368           1267   ;        -----------------------------------------
0368           1268   ;         function calculate_period
0368           1269   ;        -----------------------------------------
0368           1270   _calculate_period:
0368 858200    1271            mov     __mulint_PARM_2,dpl
036B 858301    1272            mov     (__mulint_PARM_2 + 1),dph
036E           1273   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:240: return (overflow_count * (2^16)  + TH0 * (2^8) + TL0) * (12.0 / SYSCLK);
036E 900012    1274            mov     dptr,#0x0012
0371 120000    1275            lcall   __mulint
0374 AA82      1276            mov     r2,dpl
0376 AB83      1277            mov     r3,dph
0378 853000    1278            mov     __mulint_PARM_2,_calculate_period_PARM_2
037B 853101    1279            mov     (__mulint_PARM_2 + 1),(_calculate_period_PARM_2 + 1)
037E 90000A    1280            mov     dptr,#0x000A
0381 C002      1281            push    ar2
0383 C003      1282            push    ar3
0385 120000    1283            lcall   __mulint
0388 AC82      1284            mov     r4,dpl
038A AD83      1285            mov     r5,dph
038C D003      1286            pop     ar3
038E D002      1287            pop     ar2
0390 EC        1288            mov     a,r4
0391 2A        1289            add     a,r2
0392 FA        1290            mov     r2,a
0393 ED        1291            mov     a,r5
0394 3B        1292            addc    a,r3
0395 FB        1293            mov     r3,a
0396 E5F0      1294            mov     a,_calculate_period_PARM_3
0398 2A        1295            add     a,r2
0399 F582      1296            mov     dpl,a
039B E5F1      1297            mov     a,(_calculate_period_PARM_3 + 1)
039D 3B        1298            addc    a,r3
039E F583      1299            mov     dph,a
03A0 120000    1300            lcall   ___sint2fs
03A3 AA82      1301            mov     r2,dpl
03A5 AB83      1302            mov     r3,dph
03A7 ACF0      1303            mov     r4,b
03A9 FD        1304            mov     r5,a
03AA C002      1305            push    ar2
03AC C003      1306            push    ar3
03AE C004      1307            push    ar4
03B0 C005      1308            push    ar5
03B2 90F4FC    1309            mov     dptr,#0xF4FC
03B5 75F032    1310            mov     b,#0x32
03B8 7434      1311            mov     a,#0x34
03BA 120000    1312            lcall   ___fsmul
03BD AA82      1313            mov     r2,dpl
03BF AB83      1314            mov     r3,dph
03C1 ACF0      1315            mov     r4,b
03C3 FD        1316            mov     r5,a
03C4 E581      1317            mov     a,sp
03C6 24FC      1318            add     a,#0xfc
03C8 F581      1319            mov     sp,a
03CA 8A82      1320            mov     dpl,r2
03CC 8B83      1321            mov     dph,r3
03CE 8CF0      1322            mov     b,r4
03D0 ED        1323            mov     a,r5
03D1 22        1324            ret
03D2           1325   ;------------------------------------------------------------
03D2           1326   ;Allocation info for local variables in function 'calculate_freq'
03D2           1327   ;------------------------------------------------------------
03D2           1328   ;TH0                       Allocated with name '_calculate_freq_PARM_2'
03D2           1329   ;TL0                       Allocated with name '_calculate_freq_PARM_3'
03D2           1330   ;overflow_count            Allocated to registers r2 r3 
03D2           1331   ;------------------------------------------------------------
03D2           1332   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:243: float calculate_freq(int overflow_count, int TH0, int TL0) {
03D2           1333   ;        -----------------------------------------
03D2           1334   ;         function calculate_freq
03D2           1335   ;        -----------------------------------------
03D2           1336   _calculate_freq:
03D2 AA82      1337            mov     r2,dpl
03D4 AB83      1338            mov     r3,dph
03D6           1339   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:244: return 1.0 / calculate_period(overflow_count, TH0, TL0);
03D6 855030    1340            mov     _calculate_period_PARM_2,_calculate_freq_PARM_2
03D9 855131    1341            mov     (_calculate_period_PARM_2 + 1),(_calculate_freq_PARM_2 + 1)
03DC 85D0F0    1342            mov     _calculate_period_PARM_3,_calculate_freq_PARM_3
03DF 85D1F1    1343            mov     (_calculate_period_PARM_3 + 1),(_calculate_freq_PARM_3 + 1)
03E2 8A82      1344            mov     dpl,r2
03E4 8B83      1345            mov     dph,r3
03E6 120000    1346            lcall   _calculate_period
03E9 AA82      1347            mov     r2,dpl
03EB AB83      1348            mov     r3,dph
03ED ACF0      1349            mov     r4,b
03EF FD        1350            mov     r5,a
03F0 C002      1351            push    ar2
03F2 C003      1352            push    ar3
03F4 C004      1353            push    ar4
03F6 C005      1354            push    ar5
03F8 900000    1355            mov     dptr,#0x0000
03FB 75F080    1356            mov     b,#0x80
03FE 743F      1357            mov     a,#0x3F
0400 120000    1358            lcall   ___fsdiv
0403 AA82      1359            mov     r2,dpl
0405 AB83      1360            mov     r3,dph
0407 ACF0      1361            mov     r4,b
0409 FD        1362            mov     r5,a
040A E581      1363            mov     a,sp
040C 24FC      1364            add     a,#0xfc
040E F581      1365            mov     sp,a
0410 8A82      1366            mov     dpl,r2
0412 8B83      1367            mov     dph,r3
0414 8CF0      1368            mov     b,r4
0416 ED        1369            mov     a,r5
0417 22        1370            ret
0418           1371   ;------------------------------------------------------------
0418           1372   ;Allocation info for local variables in function 'calculate_capacitance'
0418           1373   ;------------------------------------------------------------
0418           1374   ;freq_Hz                   Allocated to registers r2 r3 r4 r5 
0418           1375   ;R_A                       Allocated to registers 
0418           1376   ;R_B                       Allocated to registers 
0418           1377   ;------------------------------------------------------------
0418           1378   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:247: float calculate_capacitance(float freq_Hz) {
0418           1379   ;        -----------------------------------------
0418           1380   ;         function calculate_capacitance
0418           1381   ;        -----------------------------------------
0418           1382   _calculate_capacitance:
0418 AA82      1383            mov     r2,dpl
041A AB83      1384            mov     r3,dph
041C ACF0      1385            mov     r4,b
041E FD        1386            mov     r5,a
041F           1387   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:251: return (1.44 / (freq_Hz * (R_A + 2 * R_B))) * (10^12);
041F E4        1388            clr     a
0420 C0E0      1389            push    acc
0422 C0E0      1390            push    acc
0424 7434      1391            mov     a,#0x34
0426 C0E0      1392            push    acc
0428 7442      1393            mov     a,#0x42
042A C0E0      1394            push    acc
042C 8A82      1395            mov     dpl,r2
042E 8B83      1396            mov     dph,r3
0430 8CF0      1397            mov     b,r4
0432 ED        1398            mov     a,r5
0433 120000    1399            lcall   ___fsmul
0436 AA82      1400            mov     r2,dpl
0438 AB83      1401            mov     r3,dph
043A ACF0      1402            mov     r4,b
043C FD        1403            mov     r5,a
043D E581      1404            mov     a,sp
043F 24FC      1405            add     a,#0xfc
0441 F581      1406            mov     sp,a
0443 C002      1407            push    ar2
0445 C003      1408            push    ar3
0447 C004      1409            push    ar4
0449 C005      1410            push    ar5
044B 9051EC    1411            mov     dptr,#0x51EC
044E 75F0B8    1412            mov     b,#0xB8
0451 743F      1413            mov     a,#0x3F
0453 120000    1414            lcall   ___fsdiv
0456 AA82      1415            mov     r2,dpl
0458 AB83      1416            mov     r3,dph
045A ACF0      1417            mov     r4,b
045C FD        1418            mov     r5,a
045D E581      1419            mov     a,sp
045F 24FC      1420            add     a,#0xfc
0461 F581      1421            mov     sp,a
0463 C002      1422            push    ar2
0465 C003      1423            push    ar3
0467 C004      1424            push    ar4
0469 C005      1425            push    ar5
046B 900000    1426            mov     dptr,#0x0000
046E 75F0C0    1427            mov     b,#0xC0
0471 7440      1428            mov     a,#0x40
0473 120000    1429            lcall   ___fsmul
0476 AA82      1430            mov     r2,dpl
0478 AB83      1431            mov     r3,dph
047A ACF0      1432            mov     r4,b
047C FD        1433            mov     r5,a
047D E581      1434            mov     a,sp
047F 24FC      1435            add     a,#0xfc
0481 F581      1436            mov     sp,a
0483 8A82      1437            mov     dpl,r2
0485 8B83      1438            mov     dph,r3
0487 8CF0      1439            mov     b,r4
0489 ED        1440            mov     a,r5
048A 22        1441            ret
048B           1442   ;------------------------------------------------------------
048B           1443   ;Allocation info for local variables in function 'main'
048B           1444   ;------------------------------------------------------------
048B           1445   ;freq_Hz                   Allocated to registers r2 r3 r4 r5 
048B           1446   ;capacitance_pF            Allocated to registers r6 r7 r0 r1 
048B           1447   ;------------------------------------------------------------
048B           1448   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:254: void main(void) {
048B           1449   ;        -----------------------------------------
048B           1450   ;         function main
048B           1451   ;        -----------------------------------------
048B           1452   _main:
048B           1453   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:258: TIMER0_Init(); // Initialize Timer 0
048B 120000    1454            lcall   _TIMER0_Init
048E           1455   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:259: Serial_Init(); // Initialize Serial Communication
048E 120000    1456            lcall   _Serial_Init
0491           1457   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:260: LCD_4BIT();     // Configure the LCD
0491 120000    1458            lcall   _LCD_4BIT
0494           1459   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:262: LCDprint("LCD 4-Bit Test", 1, 1);
0494 75F001    1460            mov     _LCDprint_PARM_2,#0x01
0497 D290      1461            setb    _LCDprint_PARM_3
0499 904940    1462            mov     dptr,#__str_5
049C 75F080    1463            mov     b,#0x80
049F 120000    1464            lcall   _LCDprint
04A2           1465   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:263: LCDprint("Hello, World!", 2, 1);
04A2 75F002    1466            mov     _LCDprint_PARM_2,#0x02
04A5 D290      1467            setb    _LCDprint_PARM_3
04A7 904980    1468            mov     dptr,#__str_6
04AA 75F080    1469            mov     b,#0x80
04AD 120000    1470            lcall   _LCDprint
04B0           1471   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:270: );
04B0           1472   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:269: __FILE__, __DATE__, __TIME__
04B0           1473   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:268: "Compiled: %s, %s\n\n",
04B0 7400      1474            mov     a,#__str_10
04B2 C0E0      1475            push    acc
04B4 744A      1476            mov     a,#(__str_10 >> 8)
04B6 C0E0      1477            push    acc
04B8 7480      1478            mov     a,#0x80
04BA C0E0      1479            push    acc
04BC 74C0      1480            mov     a,#__str_9
04BE C0E0      1481            push    acc
04C0 7449      1482            mov     a,#(__str_9 >> 8)
04C2 C0E0      1483            push    acc
04C4 7480      1484            mov     a,#0x80
04C6 C0E0      1485            push    acc
04C8 74C0      1486            mov     a,#__str_8
04CA C0E0      1487            push    acc
04CC 744F      1488            mov     a,#(__str_8 >> 8)
04CE C0E0      1489            push    acc
04D0 7480      1490            mov     a,#0x80
04D2 C0E0      1491            push    acc
04D4 7480      1492            mov     a,#__str_7
04D6 C0E0      1493            push    acc
04D8 744E      1494            mov     a,#(__str_7 >> 8)
04DA C0E0      1495            push    acc
04DC 7480      1496            mov     a,#0x80
04DE C0E0      1497            push    acc
04E0 120000    1498            lcall   _printf
04E3 E581      1499            mov     a,sp
04E5 24F4      1500            add     a,#0xf4
04E7 F581      1501            mov     sp,a
04E9           1502   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:272: while(1) {
04E9           1503   L020018?:
04E9           1504   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:274: TL0 = 0;
04E9 758A00    1505            mov     _TL0,#0x00
04EC           1506   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:275: TH0 = 0;
04EC 758C00    1507            mov     _TH0,#0x00
04EF           1508   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:276: TF0 = 0;
04EF C28D      1509            clr     _TF0
04F1           1510   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:277: overflow_count = 0;
04F1 757000    1511            mov     _overflow_count,#0x00
04F4           1512   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:279: while (EFM8_SIGNAL != 0); // Wait for Signal == 0
04F4           1513   L020001?:
04F4 208100    1514            jb      _P0_1,L020001?
04F7           1515   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:280: while (EFM8_SIGNAL != 1); // Wait for Signal == 1
04F7           1516   L020004?:
04F7 308140    1517            jnb     _P0_1,L020004?
04FA           1518   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:282: TR0 = 1; // Start Timer
04FA D28C      1519            setb    _TR0
04FC           1520   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:284: while (EFM8_SIGNAL != 0) { // Wait for Signal == 0
04FC           1521   L020009?:
04FC 308160    1522            jnb     _P0_1,L020014?
04FF           1523   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:285: if (TF0 == 1) { // Did 16-Bit Timer Overflow?
04FF           1524   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:286: TF0 = 0;
04FF 108D60    1525            jbc     _TF0,L020035?
0502 8000      1526            sjmp    L020009?
0504           1527   L020035?:
0504           1528   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:287: overflow_count++;
0504 0570      1529            inc     _overflow_count
0506           1530   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:290: while (EFM8_SIGNAL != 1) { // Wait for Signal == 1
0506 8000      1531            sjmp    L020009?
0508           1532   L020014?:
0508 2081A0    1533            jb      _P0_1,L020016?
050B           1534   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:291: if (TF0 == 1) { // Did 16-Bit Timer Overflow?
050B           1535   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:292: TF0 = 0;
050B 108D20    1536            jbc     _TF0,L020037?
050E 8000      1537            sjmp    L020014?
0510           1538   L020037?:
0510           1539   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:293: overflow_count++;
0510 0570      1540            inc     _overflow_count
0512 8000      1541            sjmp    L020014?
0514           1542   L020016?:
0514           1543   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:297: TR0 = 0; // Stop Timer 0. The 24-bit number [overflow_count-TH0-TL0] has the period!
0514 C28C      1544            clr     _TR0
0516           1545   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:299: freq_Hz = calculate_freq(overflow_count, TH0, TL0);
0516 AA70      1546            mov     r2,_overflow_count
0518 7B00      1547            mov     r3,#0x00
051A 858C50    1548            mov     _calculate_freq_PARM_2,_TH0
051D 755100    1549            mov     (_calculate_freq_PARM_2 + 1),#0x00
0520 858AD0    1550            mov     _calculate_freq_PARM_3,_TL0
0523 75D100    1551            mov     (_calculate_freq_PARM_3 + 1),#0x00
0526 8A82      1552            mov     dpl,r2
0528 8B83      1553            mov     dph,r3
052A 120000    1554            lcall   _calculate_freq
052D           1555   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:300: capacitance_pF = calculate_capacitance(freq_Hz);
052D AA82      1556            mov     r2,dpl
052F AB83      1557            mov     r3,dph
0531 ACF0      1558            mov     r4,b
0533 FD        1559            mov     r5,a
0534 C002      1560            push    ar2
0536 C003      1561            push    ar3
0538 C004      1562            push    ar4
053A C005      1563            push    ar5
053C 120000    1564            lcall   _calculate_capacitance
053F AE82      1565            mov     r6,dpl
0541 AF83      1566            mov     r7,dph
0543 A8F0      1567            mov     r0,b
0545 F9        1568            mov     r1,a
0546           1569   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:302: waitms(500); // Wait for 500ms
0546 9001F4    1570            mov     dptr,#0x01F4
0549 C006      1571            push    ar6
054B C007      1572            push    ar7
054D C000      1573            push    ar0
054F C001      1574            push    ar1
0551 120000    1575            lcall   _waitms
0554 D001      1576            pop     ar1
0556 D000      1577            pop     ar0
0558 D007      1578            pop     ar7
055A D006      1579            pop     ar6
055C D005      1580            pop     ar5
055E D004      1581            pop     ar4
0560 D003      1582            pop     ar3
0562 D002      1583            pop     ar2
0564           1584   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:304: printf("\rF (kHz) = %f     ", freq_Hz * (10^3)); // Print F (kHz) to Serial Port
0564 C006      1585            push    ar6
0566 C007      1586            push    ar7
0568 C000      1587            push    ar0
056A C001      1588            push    ar1
056C C002      1589            push    ar2
056E C003      1590            push    ar3
0570 C004      1591            push    ar4
0572 C005      1592            push    ar5
0574 900000    1593            mov     dptr,#0x0000
0577 75F010    1594            mov     b,#0x10
057A 7441      1595            mov     a,#0x41
057C 120000    1596            lcall   ___fsmul
057F AA82      1597            mov     r2,dpl
0581 AB83      1598            mov     r3,dph
0583 ACF0      1599            mov     r4,b
0585 FD        1600            mov     r5,a
0586 E581      1601            mov     a,sp
0588 24FC      1602            add     a,#0xfc
058A F581      1603            mov     sp,a
058C D001      1604            pop     ar1
058E D000      1605            pop     ar0
0590 D007      1606            pop     ar7
0592 D006      1607            pop     ar6
0594 C002      1608            push    ar2
0596 C003      1609            push    ar3
0598 C004      1610            push    ar4
059A C005      1611            push    ar5
059C C006      1612            push    ar6
059E C007      1613            push    ar7
05A0 C000      1614            push    ar0
05A2 C001      1615            push    ar1
05A4 C002      1616            push    ar2
05A6 C003      1617            push    ar3
05A8 C004      1618            push    ar4
05AA C005      1619            push    ar5
05AC 74A0      1620            mov     a,#__str_11
05AE C0E0      1621            push    acc
05B0 7463      1622            mov     a,#(__str_11 >> 8)
05B2 C0E0      1623            push    acc
05B4 7480      1624            mov     a,#0x80
05B6 C0E0      1625            push    acc
05B8 120000    1626            lcall   _printf
05BB E581      1627            mov     a,sp
05BD 24F9      1628            add     a,#0xf9
05BF F581      1629            mov     sp,a
05C1           1630   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:305: printf("\x1b[0K"); // ANSI: Clear from cursor to end of line.
05C1 7460      1631            mov     a,#__str_12
05C3 C0E0      1632            push    acc
05C5 745E      1633            mov     a,#(__str_12 >> 8)
05C7 C0E0      1634            push    acc
05C9 7480      1635            mov     a,#0x80
05CB C0E0      1636            push    acc
05CD 120000    1637            lcall   _printf
05D0 1581      1638            dec     sp
05D2 1581      1639            dec     sp
05D4 1581      1640            dec     sp
05D6           1641   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:307: waitms(500); // Wait for 500ms
05D6 9001F4    1642            mov     dptr,#0x01F4
05D9 120000    1643            lcall   _waitms
05DC           1644   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:308: printf("\rC (pF) = %f     ", capacitance_pF); // Print C (pF) to Serial Port
05DC 74E0      1645            mov     a,#__str_13
05DE C0E0      1646            push    acc
05E0 7465      1647            mov     a,#(__str_13 >> 8)
05E2 C0E0      1648            push    acc
05E4 7480      1649            mov     a,#0x80
05E6 C0E0      1650            push    acc
05E8 120000    1651            lcall   _printf
05EB E581      1652            mov     a,sp
05ED 24F9      1653            add     a,#0xf9
05EF F581      1654            mov     sp,a
05F1           1655   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:309: printf("\x1b[0K"); // ANSI: Clear from cursor to end of line.
05F1 7460      1656            mov     a,#__str_12
05F3 C0E0      1657            push    acc
05F5 745E      1658            mov     a,#(__str_12 >> 8)
05F7 C0E0      1659            push    acc
05F9 7480      1660            mov     a,#0x80
05FB C0E0      1661            push    acc
05FD 120000    1662            lcall   _printf
0600 1581      1663            dec     sp
0602 1581      1664            dec     sp
0604 1581      1665            dec     sp
0606 D005      1666            pop     ar5
0608 D004      1667            pop     ar4
060A D003      1668            pop     ar3
060C D002      1669            pop     ar2
060E           1670   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Lab_4\ELEC291_Lab4\Lab4.c:314: display_freq_kHz(freq_Hz * (10^3)); // Display Frequency on LCD
060E 8A82      1671            mov     dpl,r2
0610 8B83      1672            mov     dph,r3
0612 8CF0      1673            mov     b,r4
0614 ED        1674            mov     a,r5
0615 120000    1675            lcall   _display_freq_kHz
0618 020000    1676            ljmp    L020018?
061B           1677            rseg R_CSEG
061B           1678   
0000           1679            rseg R_XINIT
0000           1680   
0000           1681            rseg R_CONST
0000           1682   __str_0:
0000 1B        1683            db 0x1B
0001 5B324A    1684            db '[2J'
0004 00        1685            db 0x00
0005           1686   __str_1:
0005 54797065  1687            db 'Type Intended Display in Line 2 (16 Char Max): '
     20496E74
     656E6465
     64204469
     73706C61
     7920696E
     204C696E
     65203220
     28313620
     43686172
     204D6178
     293A20
0034 00        1688            db 0x00
0035           1689   __str_2:
0035 0A        1690            db 0x0A
0036 00        1691            db 0x00
0037           1692   __str_3:
0037 463A2025  1693            db 'F: %i kHz'
     69206B48
     7A
0040 00        1694            db 0x00
0041           1695   __str_4:
0041 433A2025  1696            db 'C: %i pF'
     69207046
0049 00        1697            db 0x00
004A           1698   __str_5:
004A 4C434420  1699            db 'LCD 4-Bit Test'
     342D4269
     74205465
     7374
0058 00        1700            db 0x00
0059           1701   __str_6:
0059 48656C6C  1702            db 'Hello, World!'
     6F2C2057
     6F726C64
     21
0066 00        1703            db 0x00
0067           1704   __str_7:
0067 45464D38  1705            db 'EFM8 Period measurement at pin P0.1 using Timer 0.'
     20506572
     696F6420
     6D656173
     7572656D
     656E7420
     61742070
     696E2050
     302E3120
     7573696E
     67205469
     6D657220
     302E
0099 0A        1706            db 0x0A
009A 46696C65  1707            db 'File: %s'
     3A202573
00A2 0A        1708            db 0x0A
00A3 436F6D70  1709            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
00B3 0A        1710            db 0x0A
00B4 0A        1711            db 0x0A
00B5 00        1712            db 0x00
00B6           1713   __str_8:
00B6 433A      1714            db 'C:'
00B8 5C        1715            db 0x5C
00B9 4D756E74  1716            db 'Muntakim_Files'
     616B696D
     5F46696C
     6573
00C7 5C        1717            db 0x5C
00C8 5363686F  1718            db 'School'
     6F6C
00CE 5C        1719            db 0x5C
00CF 5363686F  1720            db 'School_Work'
     6F6C5F57
     6F726B
00DA 5C        1721            db 0x5C
00DB 456E6769  1722            db 'Engineering_Bachelors'
     6E656572
     696E675F
     42616368
     656C6F72
     73
00F0 5C        1723            db 0x5C
00F1 32        1724            db '2'
00F2 303233    1725            db '023'
00F5 5C        1726            db 0x5C
00F6 454C4543  1727            db 'ELEC_291'
     5F323931
00FE 5C        1728            db 0x5C
00FF 4C61625F  1729            db 'Lab_4'
     34
0104 5C        1730            db 0x5C
0105 454C4543  1731            db 'ELEC291_Lab4'
     3239315F
     4C616234
0111 5C        1732            db 0x5C
0112 4C616234  1733            db 'Lab4.c'
     2E63
0118 00        1734            db 0x00
0119           1735   __str_9:
0119 46656220  1736            db 'Feb 22 2024'
     32322032
     303234
0124 00        1737            db 0x00
0125           1738   __str_10:
0125 31343A33  1739            db '14:38:00'
     383A3030
012D 00        1740            db 0x00
012E           1741   __str_11:
012E 0D        1742            db 0x0D
012F 4620286B  1743            db 'F (kHz) = %f     '
     487A2920
     3D202566
     20202020
     20
0140 00        1744            db 0x00
0141           1745   __str_12:
0141 1B        1746            db 0x1B
0142 5B304B    1747            db '[0K'
0145 00        1748            db 0x00
0146           1749   __str_13:
0146 0D        1750            db 0x0D
0147 43202870  1751            db 'C (pF) = %f     '
     4629203D
     20256620
     20202020
0157 00        1752            db 0x00
0158           1753   
0003           1754            CSEG
0003           1755   
0003           1756   end
